{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8be5\u7f51\u7ad9\u662f\u6211\u4eec\u5c0f\u7ec4\u4e3a\u4e862021\u5e74\u7684\u201c\u9f99\u82af\u676f\u201d\u6bd4\u8d5b\u6240\u521b\u5efa\u7684 \u8be6\u60c5\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684 github\u7f51\u7ad9 \u5c0f\u7ec4\u6210\u5458\uff1a\u5510\u601d\u6e90\u3001\u6234\u65ed\u4e66\u3001\u90b1\u6653\u6587\u3001\u8463\u4e16\u9f99","title":"\u9996\u9875"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/","text":"CPU\u8bbe\u8ba1 \u00b6 2021/7/22 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u7684\u5904\u7406\u5668\u5b9e\u9645\u91c7\u7528\u7684\u67b6\u6784 \u5206\u652f\u9884\u6d4b\uff08\u65b0\uff09 \u00b6 \u90e8\u4ef6\u8bbe\u8ba1 \u00b6 \u6240\u6709\u7684\u90e8\u4ef6\u90fd\u6839\u636e\u5f53\u524d\u7684PC\u503c\u6765\u7d22\u5f15\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u5229\u7528\u90e8\u4ef6\u7684\u4fe1\u606f\u3002 BIT \u4fe1\u606f\u4e3a\u4e00\u4f4d\uff1a\u5f53\u524dPC\u7684\u4e0b\u4e00\u4e2aPC\u662f\u5426\u662f RAS \u6808\u9876\u7684\u5730\u5740\uff08\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff09 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u53ea\u5728\u89e3\u7801\u9636\u6bb5\uff1a\uff081\uff09\u662f\u5ef6\u8fdf\u69fd\uff08BB\uff0c\u5373Branch Buffer\u6709\u6548\uff0c\u4e14\u5f53\u524dpc\u4e0eBB\u4e2d\u5b58\u653e\u7684\u5206\u652f\u6307\u4ee4pc\u8fde\u7eed\uff09\uff0c\u82e5\u6b64\u65f6BB\u4e2d\u5b58\u653e\u7684\u5206\u652f\u7c7b\u578b\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5219\u628a\u5f53\u524d\u5ef6\u8fdf\u69fd\u6240\u5728\u7684\u6307\u4ee4\u7ec4\u4f5c\u4e3a\u7d22\u5f15\u66f4\u65b0BIT\uff0c\u5e76\u628a\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548\uff082\uff09\u4e0d\u662f\u5ef6\u8fdf\u69fd\uff08BB\u65e0\u6548\uff09\uff0c\u6b64\u65f6\u6839\u636e\u9884\u89e3\u7801\u4f20\u6765\u7684\u4fe1\u606f\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\u6765\u66f4\u65b0BIT RAS \u82e5RAS\u66f4\u65b0\u540e\uff0c\u540e\u9762\u7684\u6d41\u6c34\u7ebf\u5f02\u5e38\u4e86\uff0c\u6216\u662f\u5206\u652f\u9884\u6d4b\u5931\u8d25\u4e86\u5bfc\u81f4\u672c\u6b21\u66f4\u65b0\u65e0\u6548\u8be5\u600e\u4e48\u529e\uff1f \uff081\uff09\u8ddfPHT\u548cBTB\u4e00\u6837\u5728\uff08\u5ef6\u8fdf\uff09\u6267\u884c\u9636\u6bb5\u66f4\u65b0\uff0c\u786e\u4fdd\u5176\u6b63\u786e\u6027 \uff082\uff09\u68c0\u67e5\u70b9\u673a\u5236 \u76ee\u524d\u91c7\u7528\u65b9\u6cd5\uff081\uff09 \u5e26\u6709\u8ba1\u6570\u5668\u7684\u6808\uff0c\u4fdd\u5b58\u7684\u662f\u51fd\u6570\u8c03\u7528\u7684\u5730\u5740 \u6216\u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u53ea\u5728\u6267\u884c\u9636\u6bb5\uff1a\u82e5\u662f\u51fd\u6570\u8c03\u7528\u5c31\u538b\u6808\uff0c\u82e5\u662f\u51fd\u6570\u8fd4\u56de\u5c31\u51fa\u6808\u3002 PHT \u4fe1\u606f\u4e3a\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\uff0c\u6307\u51fa\u5f53\u524dPC\u662f\u4f1a\u987a\u5e8f\u53d6\u4e0b\u4e00\u4e2aPC\uff08\u5f53\u9971\u548c\u8ba1\u6570\u5668\u4f4d0\u62161\u662f\uff09\uff0c\u8fd8\u662f\u4f1a\u53d6BTB\u4e2d\u7684\u503c\uff08\u5f53\u9971\u548c\u8ba1\u6570\u5668\u7684\u503c\u4e3a2\u62163\uff09 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u5728\u6267\u884c\u9636\u6bb5\u6216\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff1a\uff081\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c8\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0\uff082\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c4\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4+4\uff08\u5ef6\u8fdf\u69fd\uff09\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0 BTB \u4fe1\u606f\u4e3a32\u4f4d\u5730\u5740\uff1a\u5f53\u524dPC\u7684\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u53ea\u4f1a\u5f53PHT\u9884\u6d4b\u8df3\u8f6c\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u5728\u6267\u884c\u9636\u6bb5\u6216\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff1a\uff081\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c8\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0\uff082\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c4\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4+4\uff08\u5ef6\u8fdf\u69fd\uff09\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u66f4\u65b0 BB \u4fdd\u5b58\u5206\u652f\u6307\u4ee4\u7684\u5b9e\u9645\u7684\u4fe1\u606f\uff1a\u6709\u6548\u4f4d\u3001\u5206\u652f\u6307\u4ee4\u7684\u7c7b\u578b\uff08\u662f\u5426\u662f\u51fd\u6570\u8df3\u8f6c\u548c\u51fd\u6570\u8fd4\u56de\uff09\u3001\u5206\u652f\u6307\u4ee4\u6240\u5728\u5730\u5740\u3001\u5730\u5740\u6709\u6548\u4f4d\u3001\u5206\u652f\u6307\u4ee4\u8df3\u8f6c\u5730\u5740 \u5f53\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\u65f6\u4fdd\u5b58\uff0c\u628a\u6709\u6548\u4f4d\u7f6e\u4e3a1\uff0c\u82e5\u4e0b\u4e00\u6761\u6307\u4ee4\u4e0d\u662f\u7d27\u6328\u7740\u7684\u5ef6\u8fdf\u69fd\uff0c\u5c31\u628a\u5176bubble\u6389\uff0c\u5e76\u5728\u5ef6\u8fdf\u69fd\u7684\u5730\u65b9\u53d6\u6307\uff0c\u76f4\u5230\u5ef6\u8fdf\u69fd\u7684\u5230\u6765\uff1b\u7b49\u5230\u5ef6\u8fdf\u69fd\u6765\u4e86\u4e4b\u540e\uff0c\u5728\u5f53\u524d\u5468\u671f\u5229\u7528\u4fdd\u5b58\u7684\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e2a\u5468\u671f\u628a\u6709\u6548\u4f4d\u7f6e0 \u6b63\u786e\u6027\u5224\u65ad \u00b6 \u53d6\u6307\u7b2c\u4e8c\u9636\u6bb5\uff1a\u82e5\u5206\u652f\u6307\u4ee4\u5728\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\uff0c\u5219\u4e00\u5b9a\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u5206\u652f\u6307\u4ee4\u5728\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\uff0c\u4e14\u4e3a\u51fd\u6570\u8c03\u7528\u6216\u8fd4\u56de\uff0c\u5219\u4e00\u5b9a\u4e0d\u5e94\u8be5\u987a\u5e8f\u53d6\uff0c\u82e5\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5219\u4e00\u5b9a\u5e94\u8be5\u53d6 RAS \u6808\u9876\u7684\u503c\u3002\u5176\u5b83\u60c5\u51b5\u6682\u65f6\u65e0\u6cd5\u5224\u65ad \u89e3\u7801\u9636\u6bb5\uff1a\uff081\uff09\u662f\u5ef6\u8fdf\u69fd\uff08BB\u6709\u6548\uff0c\u4e14\u5f53\u524dpc\u4e0eBB\u4e2d\u7684\u5206\u652f\u6307\u4ee4pc\u8fde\u7eed\uff09\uff0c\u6309\u7167BB\u4e2d\u5b58\u653e\u7684\u4fe1\u606f\u6765\u5224\u65ad \u5f53\u524d\u6307\u4ee4\u7ec4\u9884\u6d4b\u60c5\u51b5 \u5206\u652f\u6307\u4ee4\u7684\u5b9e\u9645\u60c5\u51b5 \u884c\u52a8 \u987a\u5e8f\u53d6 \u987a\u5e8f\u53d6 / \u4e0d\u987a\u5e8f\u53d6 \u4e0d\u987a\u5e8f\u53d6 \u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 \u987a\u5e8f\u53d6 \u4e0d\u987a\u5e8f\u53d6 \u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548\uff0c\u4e14\u8981\u91cd\u65b0\u53d6\u6307\u3001\u4e4b\u524d\u7684\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 \u4e0d\u987a\u5e8f\u53d6 \u987a\u5e8f\u53d6 \u91cd\u65b0\u53d6\u6307\uff0c\u4e4b\u524d\u7684\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 / \u6682\u65f6\u65e0\u6cd5\u5224\u65ad / \uff082\uff09\u4e0d\u662f\u5ef6\u8fdf\u69fd\uff08BB\u65e0\u6548\uff09\uff1a\u82e5\u6307\u4ee4\u7ec4\u4e0d\u5305\u542b\u5206\u652f\u6307\u4ee4\u5219\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\uff0c\u5219\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u4e3a\u5206\u652f\u6307\u4ee4\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u548c\u8df3\u8f6c\u5730\u5740\uff0c\u65e0\u6cd5\u5224\u65ad\u7684\u653e\u5230\u540e\u9762\u3002 \u6267\u884c\uff08\u5ef6\u8fdf\u6267\u884c\uff09\u9636\u6bb5\uff1a\u76f4\u63a5\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u548c\u8df3\u8f6c\u7684\u5730\u5740 \u6570\u636e\u65c1\u8def \u00b6 \u76ee\u524d\u5148\u4e0d\u8003\u8651\u5ef6\u8fdf\u6267\u884c \u5f53\u6307\u4ee4\u8fdb\u5165 FU \u7684\u65f6\u5019\u5c06\u4fe1\u606f\u5199\u5165\u8ba1\u5206\u677f **\u5148\u8003\u8651**\u4e24\u6761\u7d27\u6328\u7740\u7684\u8ba1\u7b97\u6307\u4ee4\u6709\u6267\u884c\u76f8\u5173\u5e94\u8be5\u600e\u4e48\u5904\u7406\uff0c\u524d\u4e00\u6761\u6307\u4ee4\u8ba1\u7b97\u51fa\u6765\u76f4\u63a5\u65c1\u8def\u8fd8\u662f\u7b49\u4e00\u4e2a\u5468\u671f\u518d\u65c1\u8def\u5462\uff1f\u8ba1\u7b97\u51fa\u6765\u518d\u65c1\u8def\u53ef\u80fd\u5ef6\u8fdf\u4f1a\u9ad8\u26a1 \u8ba1\u5206\u677f\uff1a\u4e00\u517131\u884c\uff0c\u6bcf\u4e00\u884c\u5305\u542b\u7684\u662f\u5bf9\u5e94\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff08\u4e00\u517132\u4e2a\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u4e0d\u5305\u62ec0\u53f7\u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u662f31\u884c\uff09\uff0c\u56e0\u4e3a\u6bcf\u5468\u671f\u6700\u591a\u53d1\u5c04\u4e24\u6761\u6307\u4ee4\uff0c\u6240\u4ee5\u9700\u8981\u56db\u4e2a\u8bfb\u7aef\u53e3\uff08\u5bf9\u5e94\u6bcf\u6761\u6307\u4ee4\u7684\u4e24\u4e2a\u6e90\u5bc4\u5b58\u5668\uff09\u548c\u4e24\u4e2a\u5199\u7aef\u53e3\uff08\u5bf9\u5e94\u6bcf\u6761\u6307\u4ee4\u7684\u4e00\u4e2a\u76ee\u7684\u5bc4\u5b58\u5668\uff09 \u8ba1\u5206\u677f\u4e2d\u4e00\u884c\u5305\u542b\u7684\u4fe1\u606f\uff1apending\uff08\u5bc4\u5b58\u5668\u6709\u6548\u4f4d\uff0c\u5373\u5bc4\u5b58\u5668\u662f\u5426\u662f FU \u4e2d\u67d0\u4e9b\u7684\u6307\u4ee4\u7684\u76ee\u7684\u5bc4\u5b58\u5668\uff09\u3001\u76f8\u5173\u6307\u4ee4\u6240\u5728\u884c\u3001\u76f8\u5173\u6307\u4ee4\u6240\u5728\u5217\uff08\u6bcf\u4e2a\u5468\u671f\u81ea\u589e\uff0c\u9664\u975e\u6709stall\u4fe1\u53f7\uff09 \u5728\u8bfb\u64cd\u4f5c\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u7528\u5f53\u524d\u6307\u4ee4\u7684\u6e90\u5bc4\u5b58\u5668\u7d22\u5f15\u8ba1\u5206\u677f\uff0c\u82e5pending\u4f4d\u4e3a1\uff0c\u5219\u9700\u8981\u8fdb\u884c\u8f6c\u53d1\uff0c\u82e5\u5224\u65ad\u5f53\u524d\u56de\u5408\u65e0\u6cd5\u8f6c\u53d1\uff0c\u5219\u9700\u8981stall\u4f4f\uff0c\u76f4\u5230\u80fd\u4ece\u5bf9\u5e94\u7684\u884c\u5217\u5904\u5c06\u6570\u636e\u8f6c\u53d1\u8fc7\u6765\uff0c\u4e0b\u8868\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u4ee4\uff08\u5bf9\u5e94\u4e0d\u540c\u884c\u6570\uff09\u8f6c\u53d1\u7684\u6700\u65e9\u9636\u6bb5\uff1a \u6307\u4ee4\u7c7b\u578b \u8f6c\u53d1\u7684\u6700\u65e9\u9636\u6bb5 \u5907\u6ce8 ALU 1 \u4e00\u822c\u8ba1\u7b97\u6307\u4ee4\u53ea\u9700\u5468\u671f BRU / \u5206\u652f\u6307\u4ee4\u4e0d\u8f6c\u53d1\u5176\u5b83\u6307\u4ee4 AGU 3 \u8bbf\u5b58\u6570\u636e\u53ea\u80fd\u5728\u7b2c\u4e09\u4e2a\u9636\u6bb5\u83b7\u5f97 HILO 1 MLT 3 \u4e58\u6cd5\u4e3a\u4e09\u5468\u671f\u6d41\u6c34\u7ebf DIV 1 \u6682\u505c\u6d41\u6c34\u7ebf\u76f4\u5230\u7b97\u5b8c COP / \u5f02\u5e38\u6307\u4ee4 \u5ef6\u8fdf\u6267\u884c\uff08\u76ee\u524d\u5148\u4e0d\u7528\uff09 \u00b6 \u53ef\u4ee5\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\uff1a\u5728\u89e3\u7801\u9636\u6bb5\u4e4b\u540e\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38\u7684\u6307\u4ee4\uff0c\u6bd4\u5982\u90e8\u5206\u8ba1\u7b97 \u53ef\u80fd\u51fa\u73b0\u5f02\u5e38\u7684\u6307\u4ee4 \u51fa\u73b0\u5f02\u5e38\u7684\u539f\u56e0 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5ef6\u8fdf\u6267\u884c\uff1a\u5f53\u5728\u8bfb\u64cd\u4f5c\u6570\u7684\u65f6\u5019\uff0c\u6307\u4ee4\u64cd\u4f5c\u6570\u6ca1\u6709\u5b8c\u5168\u51c6\u5907\u597d\uff0c\u4e14\u6b64\u65f6\u6307\u4ee4\u5141\u8bb8\u5ef6\u8fdf\u6267\u884c\uff0c\u9700\u8981\u5728\u5199\u5165\u8ba1\u5206\u677f\u7684\u65f6\u5019\u5e26\u4e0a\u989d\u5916\u4e00\u4f4d\uff08\u5141\u8bb8\uff09 \u6307\u4ee4\u6570\u636e\u4f20\u8f93 \u00b6 ICache\u4f20\u6765\u7684\u6307\u4ee4\u7ec4\u89818\u5b57\u8282\u5bf9\u9f50\uff0c\u4e5f\u5c31\u662f\u5305\u542b\u4e24\u6761\u6307\u4ee4 \u63a5\u6536\u5230\u6307\u4ee4\u65f6\uff0c\u9700\u8981\u6839\u636ePC\u503c\u6765\u5224\u65ad\u7b2c\u4e00\u6761\u6307\u4ee4\u662f\u5426\u6709\u6548\uff0c\u5982\u679cPC\u503c\u53ea\u662f4\u5b57\u8282\u5bf9\u9f50\u800c\u6ca1\u67098\u5b57\u8282\u5bf9\u9f50\uff08\u5982 bfc00004 \uff09\uff0c\u90a3\u4e48\u6b64\u65f6\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u6307\u4ee4\u5e94\u8be5\u5224\u5b9a\u4e3a\u65e0\u6548 \u5f53\u5206\u652f\u6307\u4ee4\u4e3a8\u5b57\u8282\u6307\u4ee4\u7ec4\u7684\u524d\u56db\u4e2a\u5b57\u8282\u7684\u8bdd\uff08\u4e00\u6761\u6307\u4ee44\u4e2a\u5b57\u8282\uff09\uff0c\u6b64\u65f6\u5ef6\u8fdf\u69fd\u6b63\u597d\u4e3a\u540e\u56db\u4e2a\u5b57\u8282\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u8be5\u6307\u4ee4\u7ec4\u7684\u5206\u652f\u9884\u6d4b\u6b63\u5e38\u8fdb\u884c \u5f53\u5206\u652f\u6307\u4ee4\u4e3a\u6307\u4ee4\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u7684\u8bdd\uff0c\u9700\u8981\u5728\u4e0b\u4e2a\u5468\u671f\u628a\u5ef6\u8fdf\u69fd\u53d6\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\u8be5\u5206\u652f\u6307\u4ee4\u6ca1\u6709\u9884\u6d4b\u7684\u5fc5\u8981\uff0c\u59cb\u7ec8\u662f\u987a\u5e8f\u53d6\uff0c\u7b49\u5230\u540e\u9762\u7684\u5ef6\u8fdf\u69fd\u6765\u4e86\u624d\u5e94\u8be5\u771f\u6b63\u5f00\u59cb\u5206\u652f\u9884\u6d4b \u7efc\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5206\u652f\u9884\u6d4b\u5e94\u8be5\u662f\u5728\u5ef6\u8fdf\u69fd\u53d6\u6765\u7684\u90a3\u4e2a\u5468\u671f\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5206\u652f\u6307\u4ee4\u672c\u8eab\u53d6\u6765\u7684\u90a3\u4e2a\u5468\u671f\uff01\uff01\uff01 \u4f46\u662f\u5ef6\u8fdf\u69fd\u672c\u8eab\u6ca1\u6709\u8df3\u8f6c\u7684\u5730\u5740\u8fd9\u6837\u7684\u4fe1\u606f\uff0c\u9700\u8981\u4e0a\u4e2a\u5468\u671f\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u9700\u8981\u5728decode\u9636\u6bb5\u653e\u7f6e\u4e00\u4e2aBB\uff08Branch Buffer\uff09\u6765\u5b58\u50a8\u4e0a\u4e2a\u5468\u671f\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u5728\u5f53\u524d\u5468\u671f\u5904\u7406\u5ef6\u8fdf\u69fd\u7684\u540c\u65f6\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u8fdb\u884c\u5206\u652f\u9884\u6d4b\u7684\u6b63\u786e\u6027\u5224\u65ad CPU\u67b6\u6784 \u00b6 \u4e0eCache\u7684\u4ea4\u4e92\u53ea\u5728\u53d6\u6307\u548c\u8bbf\u5b58\u4e24\u4e2a\u9636\u6bb5\u3002\u4e00\u4e0b\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5bf9\u5e94**\u65f6\u949f\u4e00\u4e2a\u5468\u671f** \u53d6\u6307\uff081\uff09\uff1a\u5c06\u8ba1\u7b97\u597d\u7684PC\u53d1\u7ed9ICache \u53d6\u6307\uff082\uff09\uff1a\u83b7\u53d6ICache\u4e2d\u7684\u6307\u4ee4\u7ec4\u548c\u5176\u5b83\u4fe1\u606f \u8bd1\u7801\uff1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\uff0c\u5e76\u5bf9\u5206\u652f\u6307\u4ee4\u7684\u5730\u5740\u8fdb\u884c\u8ba1\u7b97 \u53d1\u5c04\uff1a\u5f80\u961f\u5217\u5c3e\u90e8\u63d2\u5165\u6307\u4ee4\u7ec4\uff0c\u5728\u5934\u90e8\u6839\u636e\u63a7\u5236\u903b\u8f91\u53d1\u5c04\u4e00\u6761\u6216\u4e24\u6761\u6307\u4ee4 \u6570\u636e\u83b7\u53d6\uff1a\u901a\u8fc7\u5bc4\u5b58\u5668\u5806\u548c\u6570\u636e\u65c1\u8def\u83b7\u53d6\u6570\u636e \u6267\u884c\uff1a\u5728 FU \u4e2d\u8ba1\u7b97\u6570\u636e \u8bbf\u5b58\uff081\uff09\uff1a\u5728 FU \u4e2d\u5411DCache\u53d1\u9001\u8bbf\u5b58\u8bf7\u6c42\uff0c\u5ef6\u8fdf\u53d6\u6570\u636e \u8bbf\u5b58\uff082\uff09\uff1a\u5728 FU \u83b7\u53d6DCache\u4e2d\u7684\u6570\u636e\u6216\u5176\u5b83\u4fe1\u606f\uff0c\u5ef6\u8fdf\u8ba1\u7b97 \u9000\u4f11\uff1a\u5c06\u6570\u636e\u5199\u56de\u5230\u5bc4\u5b58\u5668\u5806 \u53d6\u6307 \u00b6 \u7b2c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u63a5\u6536\u7684\u539f\u56e0\uff1a\u8ba9CPU\u6d41\u6c34\u7ebf\u9636\u6bb5\u4e0eICache\u7684\u6d41\u6c34\u7ebf\u9636\u6bb5**\u5339\u914d**\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u5982\u679c\u5728\u540c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u5e76\u63a5\u6536\u7684\u8bdd\uff0cCPU\u6d41\u6c34\u7ebf\u5c31\u5fc5\u987b\u6682\u505c\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002 \u53d6\u6307\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5411ICache\u53d1\u9001\u5730\u5740\uff0c\u5728\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u63a5\u53d7\u6307\u4ee4\uff0c\u56e0\u4e3a\u6307\u4ee4\u4f20\u6765\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u6240\u4ee5\u53ea\u5bf9\u4f20\u6765\u7684\u6307\u4ee4\u8fdb\u884c\u7b80\u5355\u7684\u5904\u7406\u548c\u5224\u65ad\u3002 \u7b2c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u7684\u6570\u636e\uff1a\u6307\u4ee4\u5730\u5740PC\u3001\u5730\u5740\u6709\u6548\u4f4d valid \u4ee5ICache\u8fd4\u56de\u7684 addr_ok \u4f5c\u4e3a\u662f\u5426\u63a5\u53d7\u5230\u7684\u6807\u5fd7\uff0c\u82e5\u672a\u63a5\u6536\u5230\uff0c\u9700\u7ee7\u7eed\u53d1\u9001\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u628a\u5f53\u524d\u5468\u671f\u7ed9stall\uff08\u6682\u505c\uff09\u4f4f\uff0c\u8fd9\u4e2a\u662f\u7528\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u5b9e\u73b0\u7684\u3002 \u6839\u636e\u5f53\u524d\u7684PC\u503c\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u5e76\u628a\u662f\u5426\u662f\u8df3\u8f6c\u6307\u4ee4\u3001\u9884\u6d4b\u7684\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u3001\u662f\u5426\u9884\u6d4b\u8df3\u8f6c\u4ee5\u53ca\u8df3\u8f6c\u7684\u5730\u5740\u4f20\u7ed9\u540e\u7eed\u7684\u9636\u6bb5\u6765\u5224\u65ad\u5206\u652f\u9884\u6d4b\u7684\u6b63\u786e\u6027\uff0c\u4ee5\u66f4\u65b0\u5206\u652f\u9884\u6d4b\u6a21\u5757\u3002 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u4f20\u6765\u7684\u6570\u636e\uff1a\u6307\u4ee4\u7ec4\u4e2d\u7684\u6307\u4ee4\uff08\u4e24\u6761\uff09\u3001\u6307\u4ee4\u7ec4\u7684\u6709\u6548\u4f4d data_ok \u3001\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 is_branch \uff08\u4e24\u4f4d\u3001\u9700\u8981ICache\u9884\u89e3\u7801\uff09 \u540c\u65f6\u5f53\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u6ca1\u6709\u4f20\u6765 data_ok \u7684\u8bdd\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u662f\u6709\u6307\u4ee4\u5728\u7b49\u5f85\u8bf7\u6c42\u8fd4\u56de\u7684\uff0c\u4e5f\u5c31\u662f\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4e2d\u7684 valid \u4e3a1\uff08\u8868\u660e\u8be5\u9636\u6bb5\u662f\u6709\u6548\u7684\uff0c\u800c\u975e nop \u4e4b\u7c7b\u7684\u65e0\u6548\u6307\u4ee4\uff09\uff0c\u6b64\u65f6\u9700\u8981stall\u4f4f\u7b2c\u4e8c\u9636\u6bb5\u6765\u7b49\u5f85\u6570\u636e\u8fd4\u56de\uff0c\u7531\u4e8e\u7b2c\u4e8c\u9636\u6bb5stall\u4f4f\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u7b2c\u4e00\u9636\u6bb5\u4e5f\u662f\u6709\u6548\u7684\u5730\u5740\u8bf7\u6c42\u5373 valid \u4e3a1\uff0c\u6b64\u65f6\u4e5f\u8981\u8ddf\u7740stall\u4f4f\u3002 \u8fd4\u56de\u7684\u6307\u4ee4\u7ec48\u5b57\u8282\u5bf9\u9f50\uff0c\u5305\u542b\u4e24\u6761\u6307\u4ee4\uff0c\u82e5PC\u8bf7\u6c42\u4ec5\u4e3a4\u5b57\u8282\u5bf9\u9f50\u800c\u4e0d\u662f8\u5b57\u8282\u5bf9\u9f50\uff0c\u6b64\u65f6\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u6307\u4ee4\u4e3a\u65e0\u6548\u6307\u4ee4\uff0c\u56e0\u4e3aPC\u5e94\u8be5\u662f\u4ece\u7b2c\u4e8c\u6761\u6307\u4ee4\u5f00\u59cb\u53d6\u3002 \u8bd1\u7801 \u00b6 \u5224\u65ad\u6307\u4ee4\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u6e90\u5bc4\u5b58\u5668\u548c\u76ee\u7684\u5bc4\u5b58\u5668\u7684\u4e0b\u6807\uff0c\u653e\u5165\u5230\u53d1\u5c04\u961f\u5217\u4e2d \u82e5\u5206\u652f\u6307\u4ee4\u53d6\u6765\u4e86\uff0c\u4f46\u662f\u5ef6\u8fdf\u69fd\u6ca1\u6709\u53d6\u6765\uff0c\u5219\u628a\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u4f20\u7ed9BB\uff0c\u7b49\u5230\u5ef6\u8fdf\u69fd\u6765\u7684\u65f6\u5019\uff0c\u628aBB\u4fdd\u5b58\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u4f20\u7ed9\u5ef6\u8fdf\u69fd\u3002 \u53d1\u5c04 \u00b6 \u4e24\u4e2a\u5199\u7aef\u53e3\u3001\u4e24\u4e2a\u8bfb\u7aef\u53e3\u7684FIFO\u7684\u53cc\u53d1\u5faa\u73af\u961f\u5217\uff0c\u7528head\u548ctail\u4e0b\u6807\u7684\u65b9\u5f0f\u6a21\u62df\u5faa\u73af\u961f\u5217\u3002 \u5b58\u653e\u7684\u6570\u636e\uff1a\u6307\u4ee4\u7684\u5730\u5740\u3001\u6307\u4ee4\u7684\u5404\u7c7b\u64cd\u4f5c\u6570\u3001\u662f\u5426\u4e3a\u8bbf\u5b58\u6307\u4ee4\u3001\u662f\u5426\u4e3a\u7279\u6743\u6307\u4ee4\u3001\u662f\u5426\u4e3a\u5206\u652f\u6307\u4ee4\u3001\u662f\u5426\u9884\u6d4b\u8df3\u8f6c\u3001\u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740 \u4ee5\u4e0b\u4e0d\u80fd\u540c\u65f6\u53d1\u5c04\u4e24\u6761\u6307\u4ee4\u7684\u60c5\u51b5\uff1a \u4e24\u6761\u8fde\u7eed\u7684\u4e58\u9664\u6cd5\u6307\u4ee4\uff1a\u53ea\u6709\u4e00\u4e2a\u4e58\u6cd5\u5668\u548c\u9664\u6cd5\u5668 \u8bbf\u5b58\u6307\u4ee4\uff1a\u53ea\u6709\u4e00\u4e2a\u8bbf\u5b58\u5355\u5143\uff0c\u800c\u4e14DCache\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u7aef\u53e3\uff0c\u6ca1\u6cd5\u540c\u65f6\u5904\u7406\u4e24\u6761\u8bbf\u5b58\u6307\u4ee4 CP0 \u3001 TLB \u7b49\u7279\u6743\u6307\u4ee4 \u4e24\u6761\u6307\u4ee4\u6709\u6570\u636e\u76f8\u5173\uff1a\u6ce8\u610f0\u53f7\u5bc4\u5b58\u5668\u7684\u5047\u76f8\u5173\u6027\uff080\u53f7\u5bc4\u5b58\u5668\u4e00\u76f4\u4e3a\u96f6\uff09 \u5206\u652f\u6307\u4ee4\u548c\u5ef6\u8fdf\u69fd\u5fc5\u987b\u4e00\u8d77\u53d1\u5c04\uff0c\u5f53\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\u6216\u5ef6\u8fdf\u69fd\u8fd8\u672a\u53d6\u5230\u53d1\u5c04\u961f\u5217\u7684\u65f6\u5019\u3002 \u6570\u636e\u83b7\u53d6 \u00b6 \u7528\u4e24\u6761\u6307\u4ee4\u7684\u6e90\u5bc4\u5b58\u5668\u4e0b\u6807\u83b7\u53d6\u6e90\u5bc4\u5b58\u5668\u91cc\u7684\u503c\uff0c\u540c\u65f6\u8fdb\u884c\u65c1\u8def\uff08\u8f6c\u53d1\uff09\u4ece\u800c\u83b7\u5f97\u6240\u6709\u7684\u64cd\u4f5c\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u5ef6\u8fdf\u8bfb\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f53\u524d\u5468\u671f\u8bfb\u5230\u7684\u53ef\u80fd\u65e0\u6548\uff0c\u540c\u65f6\u5bf9\u4e8e\u4e0d\u53ef\u907f\u514d\u7684\u6307\u4ee4\u76f8\u5173\u9700\u8981\u6682\u505c\u6d41\u6c34\u7ebf\u3002 \u5bc4\u5b58\u5668\u5806\u6709\u56db\u4e2a\u8bfb\u7aef\u53e3\u3001\u4e24\u4e2a\u5199\u7aef\u53e3 \u6267\u884c\u548c\u8bbf\u5b58\u9636\u6bb5 \u00b6 \u540e\u7eed\u63d0\u5230\u7684 FU \u56ca\u62ec\u4e86\u8bfb\u64cd\u4f5c\u6570\u9636\u6bb5\u540e\u7684\u6240\u6709\u9636\u6bb5\uff0c\u4e00\u5171\u4e09\u4e2a\u9636\u6bb5\uff0c\u5bf9\u4e8e\u8bbf\u5b58\u6307\u4ee4\u6765\u8bf4\uff0c\uff0c\u603b\u5171\u4e09\u4e2a\u9636\u6bb5\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u8ba1\u7b97\u6307\u4ee4\u6765\u8bf4\uff0c\uff0c\u5bf9\u4e8e\u4e58\u6cd5\u6307\u4ee4\u6765\u8bf4\uff0c\u4e0b\u56fe\u662f FU \u7684\u7f29\u7565\u56fe\uff0c\u4e00\u5171\u6709\u4e09\u884c\uff0c\u800c\u5b9e\u9645\u4e00\u5171\u67098\u884c\uff0c\u6bcf\u4e00\u884c\u5747\u6709\u4e09\u4e2a\u9636\u6bb5\u3002\u5b83\u4eec\u5206\u522b\u662f ALU1 \uff1a\u8ba1\u7b97\u5355\u51431\u53f7\uff0c\u5904\u7406\u4e00\u822c\u7684\u8ba1\u7b97\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\uff09\u548c\u4e24\u4e2a\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff08\u5ef6\u8fdf\u8bfb\u64cd\u4f5c\u6570\u548c\u5ef6\u8fdf\u8ba1\u7b97\uff09 ALU2 \uff1a\u8ba1\u7b97\u5355\u51432\u53f7\uff0c\u540c\u4e0a BRU \uff1a\u5904\u7406\u5206\u652f\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\u5730\u5740\uff09\u548c\u4e24\u4e2a\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5 AGU \uff1a\u5904\u7406\u8bbf\u5b58\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\u5730\u5740\uff09\u548c\u4e24\u4e2a\u8bbf\u5b58\u9636\u6bb5\uff08\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\uff09 HILO \uff1a\u5904\u7406 hilo \u5bc4\u5b58\u5668\u548c\u666e\u901a\u5bc4\u5b58\u5668\u7684\u4ea4\u4e92\uff0c\u5728\u63d0\u4ea4\u5199\u6bb5\u5199\u56de\u5bc4\u5b58\u5668 MLT \uff1a\u5904\u7406\u4e58\u6cd5\u6307\u4ee4\uff0c\u4e58\u6cd5\u6307\u4ee4\u9700\u8981\u4e09\u4e2a\u5468\u671f\u624d\u80fd\u7b97\u51fa\u7ed3\u679c\uff0c\u53ef\u4ee5\u6d41\u6c34\u5316 DIV \uff1a\u5904\u7406\u9664\u6cd5\u6307\u4ee4\uff0c\u9664\u6cd5\u6307\u4ee4\u9700\u8981n\u4e2a\u5468\u671f\u624d\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u4f1a\u6682\u505c\u7b49\u5230\u7ed3\u679c\u7b97\u51fa\u3002 COP \uff1a\u5904\u7406\u5f02\u5e38\u6307\u4ee4\uff0c\u5728\u8bbf\u5b58\u9636\u6bb5\u7edf\u4e00\u5904\u7406\u6240\u6709\u7684\u5f02\u5e38 \u6267\u884c \u00b6 \u83b7\u5f97\u53ef\u80fd\u7684\u8f6c\u53d1\u6570\u636e\uff0c\u751f\u6210\u6307\u4ee4\u7684\u7ed3\u679c\uff0c\u8ba1\u7b97\u8bbf\u5b58\u5730\u5740 \u5bf9\u4e8e\u9700\u8981\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\uff0c\u8fd9\u4e2a\u5468\u671f\u53ef\u4ee5\u4e0d\u7ba1\u3002 \u5bf9\u4e8e\u5206\u652f\u6307\u4ee4\uff0c\u8fd9\u91cc\u53ef\u4ee5\u6700\u7ec8\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u4ee5\u53ca\u8df3\u8f6c\u7684\u5730\u5740\uff0c\u66f4\u65b0\u5206\u652f\u9884\u6d4b\u6a21\u5757\u3002 \u591a\u5468\u671f\u6307\u4ee4\u4f1a\u6682\u505c\u6d41\u6c34\u7ebf \u8bbf\u5b58 \u00b6 \u82e5\u8bbf\u5b58\u540e\u7d27\u8ddf\u9700\u8981\u8bbf\u5b58\u6570\u636e\u7684\u6307\u4ee4\uff0c\u5373\u8bbf\u5b58\u76f8\u5173\uff0c\u5219\u9700\u8981\u6682\u505c\u6d41\u6c34\u7ebf\u5f88\u591a\u4e2a\u5468\u671f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u5904\u7406\u5305\u62ec\u8bbf\u5b58\u76f8\u5173\u5728\u5185\u7684\u5404\u79cd\u6307\u4ee4\u76f8\u5173\uff0c\u51cf\u5c11\u6d41\u6c34\u7ebf\u6682\u505c\u7684\u5468\u671f\uff0c\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u6267\u884c\u3002\u5982\u679c\u6307\u4ee4\u5728\u8bd1\u7801\u9636\u6bb5\u540e\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff08\u4f8b\u5982 AND\uff0cXOR\uff0cADDU \u7b49\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u7c7b\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u8bfb\u53d6\u653e\u5230\u5230\u8bbf\u5b58\u7684\u7b2c\u4e00\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u653e\u5230\u8bbf\u5b58\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002\u8fd9\u6837\u8bbf\u5b58\u76f8\u5173\u7684\u6682\u505c\u6700\u77ed\u53ea\u8981\u4e00\u4e2a\u5468\u671f\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5206\u652f\u6307\u4ee4\u4e5f\u5982\u6b64\u63a8\u8fdf\u3002\u4f46\u662f\u7531\u4e8e\u5206\u652f\u6709\u53ef\u80fd\u9884\u6d4b\u5931\u8d25\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u64a4\u9500\u5176\u540e\u7684\u6307\u4ee4\uff0c\u82e5\u5728\u8bbf\u5b58\u7b2c\u4e8c\u9636\u6bb5\u5904\u7406\u5206\u652f\u6307\u4ee4\u65f6\u53d1\u73b0\u5206\u652f\u9884\u6d4b\u5931\u8d25\uff0c\u9700\u8981\u628a\u8fd9\u4e2a\u4fe1\u606f\u4f20\u7ed9DCache\uff0c\u9632\u6b62\u6539\u53d8DCache\u3002 \u5f53\u7136\uff0c\u5982\u679c\u6307\u4ee4\u4e0d\u80fd\u5ef6\u8fdf\u6267\u884c\uff0c\u90a3\u4e48\u4ecd\u7136\u9700\u8981\u6682\u505c\u5230\u64cd\u4f5c\u6570\u5747\u53ef\u7528\u4e3a\u6b62\u3002\u6b64\u65f6\u7684\u6307\u4ee4\u76f8\u5173\u4e0d\u4ec5\u8981\u8003\u8651\u8bbf\u5b58\u6307\u4ee4\uff0c\u8fd8\u8981\u8003\u8651\u6b63\u5728\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\u3002 \u5728\u6267\u884c\u9636\u6bb5\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u679c\u6307\u4ee4\u4e4b\u95f4\u5b58\u5728\u8bbf\u5b58\u76f8\u5173\uff0c\u5e76\u4e14\u6307\u4ee4\u662f\u5206\u652f\u6216\u8005\u4e0d\u4f1a\u5728\u6267\u884c\u9636\u6bb5\u51fa\u73b0\u5f02\u5e38\uff0c\u90a3\u4e48\u5176\u53ef\u4ee5\u5728\u6d41\u6c34\u7ebf\u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u8bfb\u53d6\u64cd\u4f5c\u6570\uff0c\u5728\u540e\u4e00\u4e2a\u9636\u6bb5\u8ba1\u7b97\u7ed3\u679c\u3002 \u8bbf\u5b58\u6709\u4e24\u4e2a\u9636\u6bb5\u5bf9\u5e94\u4e8e FU \u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u9636\u6bb5\uff0c\u4e0e\u53d6\u6307\u7684\u4e24\u4e2a\u9636\u6bb5\u7c7b\u4f3c \u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u4f1a\u53d1\u9001\u7684\u6570\u636e\uff1a\u5730\u5740\u6709\u6548\u4f4d\u3001\u662f\u5426\u4e3a\u5199\u8bf7\u6c42\u3001\u56db\u4f4d\u5b57\u8282\u5199\u4f7f\u80fd\u3001\u8bfb\u5199\u7684\u5730\u5740\u3001\u5199\u5165\u7684\u6570\u636e \u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u4ee5 Dache \u8fd4\u56de\u7684 addr_ok \u4f5c\u4e3a\u6210\u529f\u63a5\u6536\u7684\u6807\u5fd7 \u7b2c\u4e00\u9636\u6bb5\u8fd8\u4f1a\u5904\u7406\u5f02\u5e38\uff0c\u5e76\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u53d6\u6570\u636e \u8bbf\u5b58\u7b2c\u4e8c\u9636\u6bb5\u63a5\u53d7\u7684\u4fe1\u53f7\uff1a\u6709\u6548\u4f4d data_ok \u548c\u6570\u636e\uff0c\u5176\u4e2d data_ok \u4f5c\u4e3a\u6210\u529f\u5b8c\u6210\u5f53\u524d\u8bbf\u5b58\u7684\u4fe1\u53f7 \u7b2c\u4e8c\u9636\u6bb5\u8fd8\u4f1a\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u8ba1\u7b97 \u9000\u4f11 \u00b6 \u5c06\u6570\u636e\u5199\u56de\u5230\u5bc4\u5b58\u5668\u5806\u4e2d \u5206\u652f\u9884\u6d4b\u67b6\u6784\uff08\u65e7\uff09 \u00b6 \u4e3b\u6d41\u7684\u5904\u7406\u5668\u90fd\u662f\u57fa\u4e8e\u4e24\u4f4d\u7684\u9971\u548c\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u7684\uff0c\u91c7\u7528\uff01 \u7ecf\u6d4b\u8bd5\uff0cPHT\u4e3a2KB\u65f6\uff0c\u5373PC\u503c\u4e2d\u7528\u6765\u5bfb\u5740PHT\u7684\u4f4d\u6570\u4e3a13\u4f4d\uff0c\u6b64\u65f6\u5206\u652f\u9884\u6d4b\u51c6\u786e\u7387\u8fbe\u5230\u4e8693%\uff0c\u91c7\u7528\uff01 MIPS 74kf \u5904\u7406\u5668\uff1a\u4e0d\u8fdb\u884c\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\uff0c\u800c\u662f\u5728\u53d6\u6307\u9636\u6bb5\u6839\u636eICache\u9884\u89e3\u7801\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u76f4\u63a5\u8ba1\u7b97\u76ee\u6807\u5730\u5740\uff0c\u56e0\u4e3aMIPS\u7a0b\u5e8f\u7684\u7edd\u5927\u90e8\u5206\u5206\u652f\u6307\u4ee4\u662f\u76f4\u63a5\u8df3\u8f6c\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f88\u5feb\u7b97\u51fa\u76ee\u6807\u5730\u5740\u3002 MIPS\u5904\u7406\u5668\u4e2d\u7528 JAL \u3001 BAL \u7b49\u6307\u4ee4\u4f5c\u4e3aCALL\u6307\u4ee4\uff0c\u7528 jr ra \u4f5c\u4e3aReturn\u6307\u4ee4 \u9884\u6d4b \u00b6 \u90e8\u4ef6\u6709BIT\u3001PHT\u3001BTB\u3001RAS\uff0c\u4e0b\u8ff0\u7684 PC \u7d22\u5f15\u4f4d**\u4ec5\u4e3a\u793a\u4f8b**\uff0c\u5177\u4f53\u5b9e\u73b0\u8bf7\u53c2\u6570\u5316\uff08 \u65b9\u4fbf\u6324\u7259\u818f \uff09 BIT\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e\u5f53\u524d\u7684 PC[13:2] \u7d22\u5f15\uff0c\u5185\u5bb9\u6709\u4e24\u4f4d\uff08\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u3001\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5373 jr ra \uff09 PHT\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e\u5f53\u524d\u7684 PC[13:4] \u7d22\u5f15\uff0c\u5185\u5bb9\u4e3a\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\uff0800\uff1a\u5f3a\u4e0d\u8df3\u8f6c\uff0c01\uff1a\u5f31\u4e0d\u8df3\u8f6c\uff0c10\uff1a\u5f31\u8df3\u8f6c\uff0c11\uff1a\u5f3a\u8df3\u8f6c\uff09 BTB\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e PC[13:4] \u7d22\u5f15\uff0c\u5185\u5bb9\u4e3a32\u4f4d\u7684\u8df3\u8f6c\u7684\u5730\u5740 \u540c\u4e00\u6761\u5206\u652f\u6307\u4ee4\u5b83\u7684PHT\u548cBTB\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 RAS\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u83b7\u53d6\u6808\u9876\u6570\u636e\uff0c\u6839\u636eBIT\u4e2d\u7684\u4e00\u4f4d\u4fe1\u606f\uff08\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff09\u6765\u4f7f\u7528\uff0c\u4f46\u662f\u6682\u65f6\u4e0d\u66f4\u65b0\u6808\uff08\u56e0\u4e3a\u6709\u53ef\u80fdBIT\u4e2d\u7684\u4fe1\u606f\u662f\u9519\u7684\uff09\uff0c\u5728\u89e3\u7801\u9636\u6bb5\uff08\u80fd\u591f\u786e\u4fdd\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff09\u6839\u636e\u6307\u4ee4\u7684\u7c7b\u578b\uff08call\uff1a jal bal \u3001return\uff1a jr ra \uff09\u628a\u5730\u5740\u8fdb\u884c\u538b\u6808\u6216\u51fa\u6808\uff0c\u6808\u4e2d\u6bcf\u4e00\u9879\u5e26\u6709\u8ba1\u6570\u5668\uff08\u5f53\u538b\u6808\u65f6\uff0c\u628a\u6808\u9876\u548c\u9700\u8981\u538b\u6808\u7684\u5730\u5740\u6bd4\u8f83\uff0c\u76f8\u540c\u5c31\u8ba9\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u6808\u6307\u9488\u4e0d\u52a8\uff0c\u51fa\u6808\u65f6\u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u51cf\u5230\u96f6\u624d\u771f\u6b63\u8ba9\u6808\u6307\u9488\u5f80\u4e0b\u4e00\u683c\uff09 \u6b63\u786e\u6027\u5224\u65ad\u548c\u66f4\u65b0 \u00b6 \u5206\u652f\u9884\u6d4b\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff1a \u7f16\u53f7 \u5177\u4f53\u8868\u8ff0 1 \u672a\u80fd\u6b63\u786e\u5224\u65ad\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 2 \u662f\u5426\u8df3\u8f6c\u9884\u6d4b\u9519\u8bef 3 \u8df3\u8f6c\u5730\u5740\u9884\u6d4b\u9519\u8bef 4 \u672a\u80fd\u6b63\u786e\u5224\u65ad\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de \u53d6\u6307\u7b2c\u4e8c\u9636\u6bb5\u6839\u636eICache\u4f20\u6765\u7684\u9884\u89e3\u7801\u7684\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f is_branch \u80fd\u591f\u5224\u65ad\u7f16\u53f7\u4e3a1\u7684\u9519\u8bef \u89e3\u7801\u9636\u6bb5\u6839\u636e\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u80fd\u591f\u5224\u65ad\u7f16\u53f72\u30014\uff08\u90e8\u5206\u5206\u652f\u6307\u4ee4\u4e00\u5b9a\u8df3\u8f6c\uff09\uff0c\u6839\u636e\u7b80\u5355\u52a0\u6cd5\u5668\u7b97\u51fa\u7684\u5730\u5740\u80fd\u591f\u5224\u65ad\u7f16\u53f73\uff0c\u6839\u636eRAS\u7684\u5730\u5740\u80fd\u591f\u5224\u65ad\u7f16\u53f73\uff0c\u540c\u65f6\u66f4\u65b0RAS\u3002 \u6267\u884c\u9636\u6bb5\u6839\u636e\u5f97\u5230\u7684\u7ed3\u679c\u80fd\u591f\u5b8c\u5168\u5224\u65ad\u7f16\u53f72\u548c3 \u5728\u9884\u6d4b\u9519\u8bef\u65f6\u9700\u8981\u7acb\u523b\u91cd\u65b0\u53d6\u6307\uff0c\u800c\u4e0a\u8ff0\u90e8\u4ef6\u7684\u66f4\u65b0\u6216\u8005\u5199\u5165\u5728\u6267\u884c\u9636\u6bb5\u7edf\u4e00\u5904\u7406\uff08\u9664\u4e86RAS\u5728\u89e3\u7801\u9636\u6bb5\u66f4\u65b0\uff09 \u6743\u8861\u4e0e\u9009\u62e9 \u00b6 store\u6307\u4ee4\u9700\u8981\u8fd4\u56de data_ok \u5417\uff1f\u76ee\u524d dcache \u5bf9\u6807 icache \uff0c\u6240\u4ee5\u662f\u9700\u8981\u8fd4\u56de data_ok BIT\uff08Branch Instruction Table\uff09\u90e8\u4ef6\u7684\u9009\u62e9\uff1a\u770b\u8fc7\u5404\u79cd\u8d44\u6599\uff0c\u5206\u652f\u9884\u6d4b\u8fd9\u5757\u7684\u67b6\u6784\u4e2d\u597d\u50cf\u90fd\u6ca1\u6709BIT\u8fd9\u4e2a\u90e8\u4ef6\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u5224\u65ad\u4e00\u6761\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u90e8\u4ef6\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5206\u652f\u9884\u6d4b\u662f\u6309\u7167\u5f53\u524dPC\u53bb\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u800c\u4e14\u56e0\u4e3a\u6709\u5927\u5c0f\u7684\u9650\u5236\uff0c\u4e0d\u53ef\u80fd\u7528PC\u7684\u6240\u6709\u7684\u4f4d\u6765\u7d22\u5f15\uff0c\u4e00\u5b9a\u4f1a\u6709\u51b2\u7a81\uff0c\u5373\u4e0d\u540c\u7684PC\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u800c\u5982\u679c\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684PC\u548c\u975e\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684PC\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u5730\u65b9\u4ea7\u751f\u51b2\u7a81\u7684\u8bdd\uff0c\u5373\u6bcf\u6b21\u975e\u5206\u652f\u6307\u4ee4\u90fd\u4f1a\u7528\u5230\u5206\u652f\u6307\u4ee4\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u6ca1\u6709\u529e\u6cd5\u628a\u5b83\u4eec\u533a\u5206\u5f00\u6765\uff0c\u5c31\u4f1a\u9020\u6210\u975e\u5206\u652f\u6307\u4ee4\uff0c\u4f46\u662f\u5374\u9884\u6d4b\u8df3\u8f6c\u7684\u9519\u8bef\u3002\u4e00\u822c\u67b6\u6784\u4e2d\u597d\u50cf\u662f\u7528BTB\u4e2dtag\u6bd4\u5bf9\u540e\u51fa\u73b0\u7684miss\uff08\u975e\u5206\u652f\u6307\u4ee4\u4e00\u5b9a\u4f1amiss\uff0c\u6240\u4ee5\u53ea\u80fd\u987a\u5e8f\u53d6\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u8df3\u8f6c\u7684\u9519\u8bef\uff09\u6765\u88ab\u52a8\u533a\u5206\u975e\u5206\u652f\u6307\u4ee4\u548c\u5206\u652f\u6307\u4ee4\uff0c\u8fd9\u91cc\u6211\u4eec\u6253\u7b97\u4e3b\u52a8\u533a\u5206\uff0c\u56e0\u4e3a\u6bcf\u4e2aPC\u503c\u53ea\u9700\u8981\u5b58\u653e\u4e00\u4f4d\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b58\u653e\u5f88\u591a\u3002\u540c\u65f6\u8fd8\u53ef\u4ee5\u5b58\u653e\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u7684\u4fe1\u606f\u3002 \u5206\u652f\u4e0e\u975e\u5206\u652f\u6307\u4ee4\u7684\u533a\u5206\uff1f\u4e3b\u52a8\uff1aBIT\uff0c\u9700\u8981\u7684\u7a7a\u95f4\u591a\u3002\u88ab\u52a8\uff1a\u5728BTB\u4e2d\u5229\u7528tag\u6bd4\u5bf9\u4f1a\u51fa\u73b0\u7684miss\uff0c\u65f6\u95f4\u82b1\u8d39\u591a \u53d6\u6307\u65f6\u5206\u652f\u6307\u4ee4\u4e0e\u5ef6\u8fdf\u69fd\u600e\u4e48\u5904\u7406\uff1f\uff081\uff09ICache\u7ed9\u7684\u6307\u4ee4\u7ec4\u4e2d\u5206\u652f\u548c\u5ef6\u8fdf\u69fd\u7ed1\u5b9a\uff0c\u95ee\u9898\uff1a\u5206\u652f\u548c\u5ef6\u8fdf\u69fd\u4e0d\u5728\u540c\u4e00\u4e2acache line\uff082\uff09\u8bd1\u7801\u9636\u6bb5\u82e5\u53d1\u73b0\u6ca1\u6709\u53d6\u5230\u5206\u652f\u6307\u4ee4\u540e\u7684\u5ef6\u8fdf\u69fd\uff0c\u628a\u5206\u652f\u7684\u4fe1\u606f\u653e\u5728\u4e00\u4e2a\u7f13\u5b58\u4e2d\uff0c\u7b49\u5230\u4e0b\u4e00\u5468\u671f\u53d6\u6765\u4e86\u5ef6\u8fdf\u69fd\u518d\u8fdb\u884c\u5206\u652f\u9884\u6d4b\u548c\u6b63\u786e\u6027\u5224\u65ad\u3002\u76ee\u524d\u6211\u4eec\u91c7\u53d6\u7684\u662f\u65b9\u6cd5\uff082\uff09 \u53d1\u5c04\u9636\u6bb5\u82e5\u7b2c\u4e8c\u6761\u662f\u5206\u652f\u6307\u4ee4\u5219\u4e0d\u53d1\u5c04\u7684\u539f\u56e0\uff1a\u5f53\u5206\u652f\u9884\u6d4b\u5931\u8d25\u540e\u9700\u8981\u6e05\u7a7a\u4e4b\u524d\u7684\u6307\u4ee4\uff0c\u5982\u679c\u5ef6\u8fdf\u69fd\u6162\u5206\u652f\u6307\u4ee4\u4e00\u4e2a\u5468\u671f\u7684\u8bdd\uff0c\u5219\u5ef6\u8fdf\u69fd\u9700\u8981\u6267\u884c\uff0c\u800c\u548c\u5ef6\u8fdf\u69fd\u540c\u5468\u671f\u53d1\u5c04\u7684\u53e6\u4e00\u6761\u6307\u4ee4\u5219\u4e0d\u9700\u8981\u6267\u884c\uff0c\u4f46\u4ed6\u4eec\u662f\u5728\u540c\u4e00\u4e2a\u5468\u671f\u53d1\u5c04\u7684\uff0c\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002 \u9488\u5bf9\u5206\u652f\u6307\u4ee4\uff08\u5c31\u662f\u62ff\u5206\u652f\u6307\u4ee4\u7684PC\u6765\uff09\u8fdb\u884c\u5206\u652f\u9884\u6d4b\uff1a\uff081\uff09\u56e0\u4e3a\u4e00\u4e2a\u6307\u4ee4\u7ec4\u6700\u591a\u53ea\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u9700\u8981\u591a\u6b21\u9884\u6d4b\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u6307\u4ee4\u7ec4\u5bf9\u5e94\u7684PC\u503c\uff088\u5b57\u8282\u5bf9\u9f50\uff09\u6765\u9884\u6d4b\uff082\uff09\u867d\u7136\u6709\u53ef\u80fd\u4e0d\u6267\u884c\u5206\u652f\u6307\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u5206\u652f\u6307\u4ee4\u540e\u4e00\u6761\u6307\u4ee4\uff08\u5373\u5ef6\u8fdf\u69fd\uff09\uff1a\u6bd4\u5982\u8bf4\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\u8df3\u8f6c\u5230\u5ef6\u8fdf\u69fd\uff0c\u8fd9\u6837\u7528\u5206\u652f\u9884\u6d4b\u5c31\u4e0d\u6b63\u786e\u4e86\uff0c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5b58\u653e\u6307\u4ee4\u7ec4\u4e2d\u5206\u652f\u6307\u4ee4\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4f46\u662f\u53ef\u80fd\u6027\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u4e0d\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u3002","title":"CPU\u8bbe\u8ba1"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#cpu","text":"2021/7/22 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u7684\u5904\u7406\u5668\u5b9e\u9645\u91c7\u7528\u7684\u67b6\u6784","title":"CPU\u8bbe\u8ba1"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_1","text":"","title":"\u5206\u652f\u9884\u6d4b\uff08\u65b0\uff09"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_2","text":"\u6240\u6709\u7684\u90e8\u4ef6\u90fd\u6839\u636e\u5f53\u524d\u7684PC\u503c\u6765\u7d22\u5f15\u5bf9\u5e94\u7684\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u5229\u7528\u90e8\u4ef6\u7684\u4fe1\u606f\u3002 BIT \u4fe1\u606f\u4e3a\u4e00\u4f4d\uff1a\u5f53\u524dPC\u7684\u4e0b\u4e00\u4e2aPC\u662f\u5426\u662f RAS \u6808\u9876\u7684\u5730\u5740\uff08\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff09 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u53ea\u5728\u89e3\u7801\u9636\u6bb5\uff1a\uff081\uff09\u662f\u5ef6\u8fdf\u69fd\uff08BB\uff0c\u5373Branch Buffer\u6709\u6548\uff0c\u4e14\u5f53\u524dpc\u4e0eBB\u4e2d\u5b58\u653e\u7684\u5206\u652f\u6307\u4ee4pc\u8fde\u7eed\uff09\uff0c\u82e5\u6b64\u65f6BB\u4e2d\u5b58\u653e\u7684\u5206\u652f\u7c7b\u578b\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5219\u628a\u5f53\u524d\u5ef6\u8fdf\u69fd\u6240\u5728\u7684\u6307\u4ee4\u7ec4\u4f5c\u4e3a\u7d22\u5f15\u66f4\u65b0BIT\uff0c\u5e76\u628a\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548\uff082\uff09\u4e0d\u662f\u5ef6\u8fdf\u69fd\uff08BB\u65e0\u6548\uff09\uff0c\u6b64\u65f6\u6839\u636e\u9884\u89e3\u7801\u4f20\u6765\u7684\u4fe1\u606f\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\u6765\u66f4\u65b0BIT RAS \u82e5RAS\u66f4\u65b0\u540e\uff0c\u540e\u9762\u7684\u6d41\u6c34\u7ebf\u5f02\u5e38\u4e86\uff0c\u6216\u662f\u5206\u652f\u9884\u6d4b\u5931\u8d25\u4e86\u5bfc\u81f4\u672c\u6b21\u66f4\u65b0\u65e0\u6548\u8be5\u600e\u4e48\u529e\uff1f \uff081\uff09\u8ddfPHT\u548cBTB\u4e00\u6837\u5728\uff08\u5ef6\u8fdf\uff09\u6267\u884c\u9636\u6bb5\u66f4\u65b0\uff0c\u786e\u4fdd\u5176\u6b63\u786e\u6027 \uff082\uff09\u68c0\u67e5\u70b9\u673a\u5236 \u76ee\u524d\u91c7\u7528\u65b9\u6cd5\uff081\uff09 \u5e26\u6709\u8ba1\u6570\u5668\u7684\u6808\uff0c\u4fdd\u5b58\u7684\u662f\u51fd\u6570\u8c03\u7528\u7684\u5730\u5740 \u6216\u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u53ea\u5728\u6267\u884c\u9636\u6bb5\uff1a\u82e5\u662f\u51fd\u6570\u8c03\u7528\u5c31\u538b\u6808\uff0c\u82e5\u662f\u51fd\u6570\u8fd4\u56de\u5c31\u51fa\u6808\u3002 PHT \u4fe1\u606f\u4e3a\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\uff0c\u6307\u51fa\u5f53\u524dPC\u662f\u4f1a\u987a\u5e8f\u53d6\u4e0b\u4e00\u4e2aPC\uff08\u5f53\u9971\u548c\u8ba1\u6570\u5668\u4f4d0\u62161\u662f\uff09\uff0c\u8fd8\u662f\u4f1a\u53d6BTB\u4e2d\u7684\u503c\uff08\u5f53\u9971\u548c\u8ba1\u6570\u5668\u7684\u503c\u4e3a2\u62163\uff09 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u5728\u6267\u884c\u9636\u6bb5\u6216\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff1a\uff081\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c8\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0\uff082\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c4\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4+4\uff08\u5ef6\u8fdf\u69fd\uff09\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0 BTB \u4fe1\u606f\u4e3a32\u4f4d\u5730\u5740\uff1a\u5f53\u524dPC\u7684\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u53ea\u4f1a\u5f53PHT\u9884\u6d4b\u8df3\u8f6c\u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528 \u8be5\u5668\u4ef6\u7684\u66f4\u65b0\u5728\u6267\u884c\u9636\u6bb5\u6216\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff1a\uff081\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c8\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u6765\u66f4\u65b0\uff082\uff09\u5206\u652f\u6307\u4ee4\u7684PC\u503c4\u5b57\u8282\u5bf9\u9f50\uff0c\u4ee5\u5206\u652f\u6307\u4ee4+4\uff08\u5ef6\u8fdf\u69fd\uff09\u6240\u5728\u6307\u4ee4\u7ec4\u4e3a\u7d22\u5f15\u66f4\u65b0 BB \u4fdd\u5b58\u5206\u652f\u6307\u4ee4\u7684\u5b9e\u9645\u7684\u4fe1\u606f\uff1a\u6709\u6548\u4f4d\u3001\u5206\u652f\u6307\u4ee4\u7684\u7c7b\u578b\uff08\u662f\u5426\u662f\u51fd\u6570\u8df3\u8f6c\u548c\u51fd\u6570\u8fd4\u56de\uff09\u3001\u5206\u652f\u6307\u4ee4\u6240\u5728\u5730\u5740\u3001\u5730\u5740\u6709\u6548\u4f4d\u3001\u5206\u652f\u6307\u4ee4\u8df3\u8f6c\u5730\u5740 \u5f53\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\u65f6\u4fdd\u5b58\uff0c\u628a\u6709\u6548\u4f4d\u7f6e\u4e3a1\uff0c\u82e5\u4e0b\u4e00\u6761\u6307\u4ee4\u4e0d\u662f\u7d27\u6328\u7740\u7684\u5ef6\u8fdf\u69fd\uff0c\u5c31\u628a\u5176bubble\u6389\uff0c\u5e76\u5728\u5ef6\u8fdf\u69fd\u7684\u5730\u65b9\u53d6\u6307\uff0c\u76f4\u5230\u5ef6\u8fdf\u69fd\u7684\u5230\u6765\uff1b\u7b49\u5230\u5ef6\u8fdf\u69fd\u6765\u4e86\u4e4b\u540e\uff0c\u5728\u5f53\u524d\u5468\u671f\u5229\u7528\u4fdd\u5b58\u7684\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e2a\u5468\u671f\u628a\u6709\u6548\u4f4d\u7f6e0","title":"\u90e8\u4ef6\u8bbe\u8ba1"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_3","text":"\u53d6\u6307\u7b2c\u4e8c\u9636\u6bb5\uff1a\u82e5\u5206\u652f\u6307\u4ee4\u5728\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\uff0c\u5219\u4e00\u5b9a\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u5206\u652f\u6307\u4ee4\u5728\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\uff0c\u4e14\u4e3a\u51fd\u6570\u8c03\u7528\u6216\u8fd4\u56de\uff0c\u5219\u4e00\u5b9a\u4e0d\u5e94\u8be5\u987a\u5e8f\u53d6\uff0c\u82e5\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5219\u4e00\u5b9a\u5e94\u8be5\u53d6 RAS \u6808\u9876\u7684\u503c\u3002\u5176\u5b83\u60c5\u51b5\u6682\u65f6\u65e0\u6cd5\u5224\u65ad \u89e3\u7801\u9636\u6bb5\uff1a\uff081\uff09\u662f\u5ef6\u8fdf\u69fd\uff08BB\u6709\u6548\uff0c\u4e14\u5f53\u524dpc\u4e0eBB\u4e2d\u7684\u5206\u652f\u6307\u4ee4pc\u8fde\u7eed\uff09\uff0c\u6309\u7167BB\u4e2d\u5b58\u653e\u7684\u4fe1\u606f\u6765\u5224\u65ad \u5f53\u524d\u6307\u4ee4\u7ec4\u9884\u6d4b\u60c5\u51b5 \u5206\u652f\u6307\u4ee4\u7684\u5b9e\u9645\u60c5\u51b5 \u884c\u52a8 \u987a\u5e8f\u53d6 \u987a\u5e8f\u53d6 / \u4e0d\u987a\u5e8f\u53d6 \u4e0d\u987a\u5e8f\u53d6 \u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 \u987a\u5e8f\u53d6 \u4e0d\u987a\u5e8f\u53d6 \u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548\uff0c\u4e14\u8981\u91cd\u65b0\u53d6\u6307\u3001\u4e4b\u524d\u7684\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 \u4e0d\u987a\u5e8f\u53d6 \u987a\u5e8f\u53d6 \u91cd\u65b0\u53d6\u6307\uff0c\u4e4b\u524d\u7684\u6307\u4ee4\u7f6e\u4e3a\u65e0\u6548 / \u6682\u65f6\u65e0\u6cd5\u5224\u65ad / \uff082\uff09\u4e0d\u662f\u5ef6\u8fdf\u69fd\uff08BB\u65e0\u6548\uff09\uff1a\u82e5\u6307\u4ee4\u7ec4\u4e0d\u5305\u542b\u5206\u652f\u6307\u4ee4\u5219\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u6307\u4ee4\u7ec4\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\uff0c\u5219\u5e94\u8be5\u987a\u5e8f\u53d6\uff1b\u82e5\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u4e3a\u5206\u652f\u6307\u4ee4\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u548c\u8df3\u8f6c\u5730\u5740\uff0c\u65e0\u6cd5\u5224\u65ad\u7684\u653e\u5230\u540e\u9762\u3002 \u6267\u884c\uff08\u5ef6\u8fdf\u6267\u884c\uff09\u9636\u6bb5\uff1a\u76f4\u63a5\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u548c\u8df3\u8f6c\u7684\u5730\u5740","title":"\u6b63\u786e\u6027\u5224\u65ad"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_4","text":"\u76ee\u524d\u5148\u4e0d\u8003\u8651\u5ef6\u8fdf\u6267\u884c \u5f53\u6307\u4ee4\u8fdb\u5165 FU \u7684\u65f6\u5019\u5c06\u4fe1\u606f\u5199\u5165\u8ba1\u5206\u677f **\u5148\u8003\u8651**\u4e24\u6761\u7d27\u6328\u7740\u7684\u8ba1\u7b97\u6307\u4ee4\u6709\u6267\u884c\u76f8\u5173\u5e94\u8be5\u600e\u4e48\u5904\u7406\uff0c\u524d\u4e00\u6761\u6307\u4ee4\u8ba1\u7b97\u51fa\u6765\u76f4\u63a5\u65c1\u8def\u8fd8\u662f\u7b49\u4e00\u4e2a\u5468\u671f\u518d\u65c1\u8def\u5462\uff1f\u8ba1\u7b97\u51fa\u6765\u518d\u65c1\u8def\u53ef\u80fd\u5ef6\u8fdf\u4f1a\u9ad8\u26a1 \u8ba1\u5206\u677f\uff1a\u4e00\u517131\u884c\uff0c\u6bcf\u4e00\u884c\u5305\u542b\u7684\u662f\u5bf9\u5e94\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff08\u4e00\u517132\u4e2a\u5bc4\u5b58\u5668\uff0c\u4f46\u662f\u4e0d\u5305\u62ec0\u53f7\u5bc4\u5b58\u5668\uff0c\u6240\u4ee5\u662f31\u884c\uff09\uff0c\u56e0\u4e3a\u6bcf\u5468\u671f\u6700\u591a\u53d1\u5c04\u4e24\u6761\u6307\u4ee4\uff0c\u6240\u4ee5\u9700\u8981\u56db\u4e2a\u8bfb\u7aef\u53e3\uff08\u5bf9\u5e94\u6bcf\u6761\u6307\u4ee4\u7684\u4e24\u4e2a\u6e90\u5bc4\u5b58\u5668\uff09\u548c\u4e24\u4e2a\u5199\u7aef\u53e3\uff08\u5bf9\u5e94\u6bcf\u6761\u6307\u4ee4\u7684\u4e00\u4e2a\u76ee\u7684\u5bc4\u5b58\u5668\uff09 \u8ba1\u5206\u677f\u4e2d\u4e00\u884c\u5305\u542b\u7684\u4fe1\u606f\uff1apending\uff08\u5bc4\u5b58\u5668\u6709\u6548\u4f4d\uff0c\u5373\u5bc4\u5b58\u5668\u662f\u5426\u662f FU \u4e2d\u67d0\u4e9b\u7684\u6307\u4ee4\u7684\u76ee\u7684\u5bc4\u5b58\u5668\uff09\u3001\u76f8\u5173\u6307\u4ee4\u6240\u5728\u884c\u3001\u76f8\u5173\u6307\u4ee4\u6240\u5728\u5217\uff08\u6bcf\u4e2a\u5468\u671f\u81ea\u589e\uff0c\u9664\u975e\u6709stall\u4fe1\u53f7\uff09 \u5728\u8bfb\u64cd\u4f5c\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u7528\u5f53\u524d\u6307\u4ee4\u7684\u6e90\u5bc4\u5b58\u5668\u7d22\u5f15\u8ba1\u5206\u677f\uff0c\u82e5pending\u4f4d\u4e3a1\uff0c\u5219\u9700\u8981\u8fdb\u884c\u8f6c\u53d1\uff0c\u82e5\u5224\u65ad\u5f53\u524d\u56de\u5408\u65e0\u6cd5\u8f6c\u53d1\uff0c\u5219\u9700\u8981stall\u4f4f\uff0c\u76f4\u5230\u80fd\u4ece\u5bf9\u5e94\u7684\u884c\u5217\u5904\u5c06\u6570\u636e\u8f6c\u53d1\u8fc7\u6765\uff0c\u4e0b\u8868\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u4ee4\uff08\u5bf9\u5e94\u4e0d\u540c\u884c\u6570\uff09\u8f6c\u53d1\u7684\u6700\u65e9\u9636\u6bb5\uff1a \u6307\u4ee4\u7c7b\u578b \u8f6c\u53d1\u7684\u6700\u65e9\u9636\u6bb5 \u5907\u6ce8 ALU 1 \u4e00\u822c\u8ba1\u7b97\u6307\u4ee4\u53ea\u9700\u5468\u671f BRU / \u5206\u652f\u6307\u4ee4\u4e0d\u8f6c\u53d1\u5176\u5b83\u6307\u4ee4 AGU 3 \u8bbf\u5b58\u6570\u636e\u53ea\u80fd\u5728\u7b2c\u4e09\u4e2a\u9636\u6bb5\u83b7\u5f97 HILO 1 MLT 3 \u4e58\u6cd5\u4e3a\u4e09\u5468\u671f\u6d41\u6c34\u7ebf DIV 1 \u6682\u505c\u6d41\u6c34\u7ebf\u76f4\u5230\u7b97\u5b8c COP / \u5f02\u5e38\u6307\u4ee4","title":"\u6570\u636e\u65c1\u8def"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_5","text":"\u53ef\u4ee5\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\uff1a\u5728\u89e3\u7801\u9636\u6bb5\u4e4b\u540e\u4e0d\u4f1a\u51fa\u73b0\u5f02\u5e38\u7684\u6307\u4ee4\uff0c\u6bd4\u5982\u90e8\u5206\u8ba1\u7b97 \u53ef\u80fd\u51fa\u73b0\u5f02\u5e38\u7684\u6307\u4ee4 \u51fa\u73b0\u5f02\u5e38\u7684\u539f\u56e0 \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5ef6\u8fdf\u6267\u884c\uff1a\u5f53\u5728\u8bfb\u64cd\u4f5c\u6570\u7684\u65f6\u5019\uff0c\u6307\u4ee4\u64cd\u4f5c\u6570\u6ca1\u6709\u5b8c\u5168\u51c6\u5907\u597d\uff0c\u4e14\u6b64\u65f6\u6307\u4ee4\u5141\u8bb8\u5ef6\u8fdf\u6267\u884c\uff0c\u9700\u8981\u5728\u5199\u5165\u8ba1\u5206\u677f\u7684\u65f6\u5019\u5e26\u4e0a\u989d\u5916\u4e00\u4f4d\uff08\u5141\u8bb8\uff09","title":"\u5ef6\u8fdf\u6267\u884c\uff08\u76ee\u524d\u5148\u4e0d\u7528\uff09"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_6","text":"ICache\u4f20\u6765\u7684\u6307\u4ee4\u7ec4\u89818\u5b57\u8282\u5bf9\u9f50\uff0c\u4e5f\u5c31\u662f\u5305\u542b\u4e24\u6761\u6307\u4ee4 \u63a5\u6536\u5230\u6307\u4ee4\u65f6\uff0c\u9700\u8981\u6839\u636ePC\u503c\u6765\u5224\u65ad\u7b2c\u4e00\u6761\u6307\u4ee4\u662f\u5426\u6709\u6548\uff0c\u5982\u679cPC\u503c\u53ea\u662f4\u5b57\u8282\u5bf9\u9f50\u800c\u6ca1\u67098\u5b57\u8282\u5bf9\u9f50\uff08\u5982 bfc00004 \uff09\uff0c\u90a3\u4e48\u6b64\u65f6\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u6307\u4ee4\u5e94\u8be5\u5224\u5b9a\u4e3a\u65e0\u6548 \u5f53\u5206\u652f\u6307\u4ee4\u4e3a8\u5b57\u8282\u6307\u4ee4\u7ec4\u7684\u524d\u56db\u4e2a\u5b57\u8282\u7684\u8bdd\uff08\u4e00\u6761\u6307\u4ee44\u4e2a\u5b57\u8282\uff09\uff0c\u6b64\u65f6\u5ef6\u8fdf\u69fd\u6b63\u597d\u4e3a\u540e\u56db\u4e2a\u5b57\u8282\uff0c\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u6240\u4ee5\u8be5\u6307\u4ee4\u7ec4\u7684\u5206\u652f\u9884\u6d4b\u6b63\u5e38\u8fdb\u884c \u5f53\u5206\u652f\u6307\u4ee4\u4e3a\u6307\u4ee4\u7ec4\u540e\u56db\u4e2a\u5b57\u8282\u7684\u8bdd\uff0c\u9700\u8981\u5728\u4e0b\u4e2a\u5468\u671f\u628a\u5ef6\u8fdf\u69fd\u53d6\u51fa\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\u8be5\u5206\u652f\u6307\u4ee4\u6ca1\u6709\u9884\u6d4b\u7684\u5fc5\u8981\uff0c\u59cb\u7ec8\u662f\u987a\u5e8f\u53d6\uff0c\u7b49\u5230\u540e\u9762\u7684\u5ef6\u8fdf\u69fd\u6765\u4e86\u624d\u5e94\u8be5\u771f\u6b63\u5f00\u59cb\u5206\u652f\u9884\u6d4b \u7efc\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5206\u652f\u9884\u6d4b\u5e94\u8be5\u662f\u5728\u5ef6\u8fdf\u69fd\u53d6\u6765\u7684\u90a3\u4e2a\u5468\u671f\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5206\u652f\u6307\u4ee4\u672c\u8eab\u53d6\u6765\u7684\u90a3\u4e2a\u5468\u671f\uff01\uff01\uff01 \u4f46\u662f\u5ef6\u8fdf\u69fd\u672c\u8eab\u6ca1\u6709\u8df3\u8f6c\u7684\u5730\u5740\u8fd9\u6837\u7684\u4fe1\u606f\uff0c\u9700\u8981\u4e0a\u4e2a\u5468\u671f\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u9700\u8981\u5728decode\u9636\u6bb5\u653e\u7f6e\u4e00\u4e2aBB\uff08Branch Buffer\uff09\u6765\u5b58\u50a8\u4e0a\u4e2a\u5468\u671f\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u5728\u5f53\u524d\u5468\u671f\u5904\u7406\u5ef6\u8fdf\u69fd\u7684\u540c\u65f6\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u8fdb\u884c\u5206\u652f\u9884\u6d4b\u7684\u6b63\u786e\u6027\u5224\u65ad","title":"\u6307\u4ee4\u6570\u636e\u4f20\u8f93"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#cpu_1","text":"\u4e0eCache\u7684\u4ea4\u4e92\u53ea\u5728\u53d6\u6307\u548c\u8bbf\u5b58\u4e24\u4e2a\u9636\u6bb5\u3002\u4e00\u4e0b\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5bf9\u5e94**\u65f6\u949f\u4e00\u4e2a\u5468\u671f** \u53d6\u6307\uff081\uff09\uff1a\u5c06\u8ba1\u7b97\u597d\u7684PC\u53d1\u7ed9ICache \u53d6\u6307\uff082\uff09\uff1a\u83b7\u53d6ICache\u4e2d\u7684\u6307\u4ee4\u7ec4\u548c\u5176\u5b83\u4fe1\u606f \u8bd1\u7801\uff1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u8bd1\u7801\uff0c\u5e76\u5bf9\u5206\u652f\u6307\u4ee4\u7684\u5730\u5740\u8fdb\u884c\u8ba1\u7b97 \u53d1\u5c04\uff1a\u5f80\u961f\u5217\u5c3e\u90e8\u63d2\u5165\u6307\u4ee4\u7ec4\uff0c\u5728\u5934\u90e8\u6839\u636e\u63a7\u5236\u903b\u8f91\u53d1\u5c04\u4e00\u6761\u6216\u4e24\u6761\u6307\u4ee4 \u6570\u636e\u83b7\u53d6\uff1a\u901a\u8fc7\u5bc4\u5b58\u5668\u5806\u548c\u6570\u636e\u65c1\u8def\u83b7\u53d6\u6570\u636e \u6267\u884c\uff1a\u5728 FU \u4e2d\u8ba1\u7b97\u6570\u636e \u8bbf\u5b58\uff081\uff09\uff1a\u5728 FU \u4e2d\u5411DCache\u53d1\u9001\u8bbf\u5b58\u8bf7\u6c42\uff0c\u5ef6\u8fdf\u53d6\u6570\u636e \u8bbf\u5b58\uff082\uff09\uff1a\u5728 FU \u83b7\u53d6DCache\u4e2d\u7684\u6570\u636e\u6216\u5176\u5b83\u4fe1\u606f\uff0c\u5ef6\u8fdf\u8ba1\u7b97 \u9000\u4f11\uff1a\u5c06\u6570\u636e\u5199\u56de\u5230\u5bc4\u5b58\u5668\u5806","title":"CPU\u67b6\u6784"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_7","text":"\u7b2c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u63a5\u6536\u7684\u539f\u56e0\uff1a\u8ba9CPU\u6d41\u6c34\u7ebf\u9636\u6bb5\u4e0eICache\u7684\u6d41\u6c34\u7ebf\u9636\u6bb5**\u5339\u914d**\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u5982\u679c\u5728\u540c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u5e76\u63a5\u6536\u7684\u8bdd\uff0cCPU\u6d41\u6c34\u7ebf\u5c31\u5fc5\u987b\u6682\u505c\uff0c\u964d\u4f4e\u4e86\u6548\u7387\u3002 \u53d6\u6307\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u9636\u6bb5\u5411ICache\u53d1\u9001\u5730\u5740\uff0c\u5728\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u63a5\u53d7\u6307\u4ee4\uff0c\u56e0\u4e3a\u6307\u4ee4\u4f20\u6765\u9700\u8981\u4e00\u5b9a\u65f6\u95f4\uff0c\u6240\u4ee5\u53ea\u5bf9\u4f20\u6765\u7684\u6307\u4ee4\u8fdb\u884c\u7b80\u5355\u7684\u5904\u7406\u548c\u5224\u65ad\u3002 \u7b2c\u4e00\u4e2a\u9636\u6bb5\u53d1\u9001\u7684\u6570\u636e\uff1a\u6307\u4ee4\u5730\u5740PC\u3001\u5730\u5740\u6709\u6548\u4f4d valid \u4ee5ICache\u8fd4\u56de\u7684 addr_ok \u4f5c\u4e3a\u662f\u5426\u63a5\u53d7\u5230\u7684\u6807\u5fd7\uff0c\u82e5\u672a\u63a5\u6536\u5230\uff0c\u9700\u7ee7\u7eed\u53d1\u9001\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u628a\u5f53\u524d\u5468\u671f\u7ed9stall\uff08\u6682\u505c\uff09\u4f4f\uff0c\u8fd9\u4e2a\u662f\u7528\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u5b9e\u73b0\u7684\u3002 \u6839\u636e\u5f53\u524d\u7684PC\u503c\uff0c\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u5e76\u628a\u662f\u5426\u662f\u8df3\u8f6c\u6307\u4ee4\u3001\u9884\u6d4b\u7684\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u3001\u662f\u5426\u9884\u6d4b\u8df3\u8f6c\u4ee5\u53ca\u8df3\u8f6c\u7684\u5730\u5740\u4f20\u7ed9\u540e\u7eed\u7684\u9636\u6bb5\u6765\u5224\u65ad\u5206\u652f\u9884\u6d4b\u7684\u6b63\u786e\u6027\uff0c\u4ee5\u66f4\u65b0\u5206\u652f\u9884\u6d4b\u6a21\u5757\u3002 \u7b2c\u4e8c\u4e2a\u9636\u6bb5\u4f20\u6765\u7684\u6570\u636e\uff1a\u6307\u4ee4\u7ec4\u4e2d\u7684\u6307\u4ee4\uff08\u4e24\u6761\uff09\u3001\u6307\u4ee4\u7ec4\u7684\u6709\u6548\u4f4d data_ok \u3001\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 is_branch \uff08\u4e24\u4f4d\u3001\u9700\u8981ICache\u9884\u89e3\u7801\uff09 \u540c\u65f6\u5f53\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u6ca1\u6709\u4f20\u6765 data_ok \u7684\u8bdd\uff0c\u4e14\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u662f\u6709\u6307\u4ee4\u5728\u7b49\u5f85\u8bf7\u6c42\u8fd4\u56de\u7684\uff0c\u4e5f\u5c31\u662f\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4e2d\u7684 valid \u4e3a1\uff08\u8868\u660e\u8be5\u9636\u6bb5\u662f\u6709\u6548\u7684\uff0c\u800c\u975e nop \u4e4b\u7c7b\u7684\u65e0\u6548\u6307\u4ee4\uff09\uff0c\u6b64\u65f6\u9700\u8981stall\u4f4f\u7b2c\u4e8c\u9636\u6bb5\u6765\u7b49\u5f85\u6570\u636e\u8fd4\u56de\uff0c\u7531\u4e8e\u7b2c\u4e8c\u9636\u6bb5stall\u4f4f\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u7b2c\u4e00\u9636\u6bb5\u4e5f\u662f\u6709\u6548\u7684\u5730\u5740\u8bf7\u6c42\u5373 valid \u4e3a1\uff0c\u6b64\u65f6\u4e5f\u8981\u8ddf\u7740stall\u4f4f\u3002 \u8fd4\u56de\u7684\u6307\u4ee4\u7ec48\u5b57\u8282\u5bf9\u9f50\uff0c\u5305\u542b\u4e24\u6761\u6307\u4ee4\uff0c\u82e5PC\u8bf7\u6c42\u4ec5\u4e3a4\u5b57\u8282\u5bf9\u9f50\u800c\u4e0d\u662f8\u5b57\u8282\u5bf9\u9f50\uff0c\u6b64\u65f6\u6307\u4ee4\u7ec4\u7b2c\u4e00\u6761\u6307\u4ee4\u4e3a\u65e0\u6548\u6307\u4ee4\uff0c\u56e0\u4e3aPC\u5e94\u8be5\u662f\u4ece\u7b2c\u4e8c\u6761\u6307\u4ee4\u5f00\u59cb\u53d6\u3002","title":"\u53d6\u6307"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_8","text":"\u5224\u65ad\u6307\u4ee4\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u6e90\u5bc4\u5b58\u5668\u548c\u76ee\u7684\u5bc4\u5b58\u5668\u7684\u4e0b\u6807\uff0c\u653e\u5165\u5230\u53d1\u5c04\u961f\u5217\u4e2d \u82e5\u5206\u652f\u6307\u4ee4\u53d6\u6765\u4e86\uff0c\u4f46\u662f\u5ef6\u8fdf\u69fd\u6ca1\u6709\u53d6\u6765\uff0c\u5219\u628a\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u4f20\u7ed9BB\uff0c\u7b49\u5230\u5ef6\u8fdf\u69fd\u6765\u7684\u65f6\u5019\uff0c\u628aBB\u4fdd\u5b58\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u4f20\u7ed9\u5ef6\u8fdf\u69fd\u3002","title":"\u8bd1\u7801"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_9","text":"\u4e24\u4e2a\u5199\u7aef\u53e3\u3001\u4e24\u4e2a\u8bfb\u7aef\u53e3\u7684FIFO\u7684\u53cc\u53d1\u5faa\u73af\u961f\u5217\uff0c\u7528head\u548ctail\u4e0b\u6807\u7684\u65b9\u5f0f\u6a21\u62df\u5faa\u73af\u961f\u5217\u3002 \u5b58\u653e\u7684\u6570\u636e\uff1a\u6307\u4ee4\u7684\u5730\u5740\u3001\u6307\u4ee4\u7684\u5404\u7c7b\u64cd\u4f5c\u6570\u3001\u662f\u5426\u4e3a\u8bbf\u5b58\u6307\u4ee4\u3001\u662f\u5426\u4e3a\u7279\u6743\u6307\u4ee4\u3001\u662f\u5426\u4e3a\u5206\u652f\u6307\u4ee4\u3001\u662f\u5426\u9884\u6d4b\u8df3\u8f6c\u3001\u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740 \u4ee5\u4e0b\u4e0d\u80fd\u540c\u65f6\u53d1\u5c04\u4e24\u6761\u6307\u4ee4\u7684\u60c5\u51b5\uff1a \u4e24\u6761\u8fde\u7eed\u7684\u4e58\u9664\u6cd5\u6307\u4ee4\uff1a\u53ea\u6709\u4e00\u4e2a\u4e58\u6cd5\u5668\u548c\u9664\u6cd5\u5668 \u8bbf\u5b58\u6307\u4ee4\uff1a\u53ea\u6709\u4e00\u4e2a\u8bbf\u5b58\u5355\u5143\uff0c\u800c\u4e14DCache\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u7aef\u53e3\uff0c\u6ca1\u6cd5\u540c\u65f6\u5904\u7406\u4e24\u6761\u8bbf\u5b58\u6307\u4ee4 CP0 \u3001 TLB \u7b49\u7279\u6743\u6307\u4ee4 \u4e24\u6761\u6307\u4ee4\u6709\u6570\u636e\u76f8\u5173\uff1a\u6ce8\u610f0\u53f7\u5bc4\u5b58\u5668\u7684\u5047\u76f8\u5173\u6027\uff080\u53f7\u5bc4\u5b58\u5668\u4e00\u76f4\u4e3a\u96f6\uff09 \u5206\u652f\u6307\u4ee4\u548c\u5ef6\u8fdf\u69fd\u5fc5\u987b\u4e00\u8d77\u53d1\u5c04\uff0c\u5f53\u7b2c\u4e8c\u6761\u4e3a\u5206\u652f\u6307\u4ee4\u6216\u5ef6\u8fdf\u69fd\u8fd8\u672a\u53d6\u5230\u53d1\u5c04\u961f\u5217\u7684\u65f6\u5019\u3002","title":"\u53d1\u5c04"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_10","text":"\u7528\u4e24\u6761\u6307\u4ee4\u7684\u6e90\u5bc4\u5b58\u5668\u4e0b\u6807\u83b7\u53d6\u6e90\u5bc4\u5b58\u5668\u91cc\u7684\u503c\uff0c\u540c\u65f6\u8fdb\u884c\u65c1\u8def\uff08\u8f6c\u53d1\uff09\u4ece\u800c\u83b7\u5f97\u6240\u6709\u7684\u64cd\u4f5c\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u5ef6\u8fdf\u8bfb\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f53\u524d\u5468\u671f\u8bfb\u5230\u7684\u53ef\u80fd\u65e0\u6548\uff0c\u540c\u65f6\u5bf9\u4e8e\u4e0d\u53ef\u907f\u514d\u7684\u6307\u4ee4\u76f8\u5173\u9700\u8981\u6682\u505c\u6d41\u6c34\u7ebf\u3002 \u5bc4\u5b58\u5668\u5806\u6709\u56db\u4e2a\u8bfb\u7aef\u53e3\u3001\u4e24\u4e2a\u5199\u7aef\u53e3","title":"\u6570\u636e\u83b7\u53d6"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_11","text":"\u540e\u7eed\u63d0\u5230\u7684 FU \u56ca\u62ec\u4e86\u8bfb\u64cd\u4f5c\u6570\u9636\u6bb5\u540e\u7684\u6240\u6709\u9636\u6bb5\uff0c\u4e00\u5171\u4e09\u4e2a\u9636\u6bb5\uff0c\u5bf9\u4e8e\u8bbf\u5b58\u6307\u4ee4\u6765\u8bf4\uff0c\uff0c\u603b\u5171\u4e09\u4e2a\u9636\u6bb5\uff0c\u5bf9\u4e8e\u4e00\u822c\u7684\u8ba1\u7b97\u6307\u4ee4\u6765\u8bf4\uff0c\uff0c\u5bf9\u4e8e\u4e58\u6cd5\u6307\u4ee4\u6765\u8bf4\uff0c\u4e0b\u56fe\u662f FU \u7684\u7f29\u7565\u56fe\uff0c\u4e00\u5171\u6709\u4e09\u884c\uff0c\u800c\u5b9e\u9645\u4e00\u5171\u67098\u884c\uff0c\u6bcf\u4e00\u884c\u5747\u6709\u4e09\u4e2a\u9636\u6bb5\u3002\u5b83\u4eec\u5206\u522b\u662f ALU1 \uff1a\u8ba1\u7b97\u5355\u51431\u53f7\uff0c\u5904\u7406\u4e00\u822c\u7684\u8ba1\u7b97\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\uff09\u548c\u4e24\u4e2a\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5\uff08\u5ef6\u8fdf\u8bfb\u64cd\u4f5c\u6570\u548c\u5ef6\u8fdf\u8ba1\u7b97\uff09 ALU2 \uff1a\u8ba1\u7b97\u5355\u51432\u53f7\uff0c\u540c\u4e0a BRU \uff1a\u5904\u7406\u5206\u652f\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\u5730\u5740\uff09\u548c\u4e24\u4e2a\u5ef6\u8fdf\u6267\u884c\u9636\u6bb5 AGU \uff1a\u5904\u7406\u8bbf\u5b58\u6307\u4ee4\uff0c\u6709\u4e00\u4e2a\u6267\u884c\u9636\u6bb5\uff08\u8ba1\u7b97\u5730\u5740\uff09\u548c\u4e24\u4e2a\u8bbf\u5b58\u9636\u6bb5\uff08\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\uff09 HILO \uff1a\u5904\u7406 hilo \u5bc4\u5b58\u5668\u548c\u666e\u901a\u5bc4\u5b58\u5668\u7684\u4ea4\u4e92\uff0c\u5728\u63d0\u4ea4\u5199\u6bb5\u5199\u56de\u5bc4\u5b58\u5668 MLT \uff1a\u5904\u7406\u4e58\u6cd5\u6307\u4ee4\uff0c\u4e58\u6cd5\u6307\u4ee4\u9700\u8981\u4e09\u4e2a\u5468\u671f\u624d\u80fd\u7b97\u51fa\u7ed3\u679c\uff0c\u53ef\u4ee5\u6d41\u6c34\u5316 DIV \uff1a\u5904\u7406\u9664\u6cd5\u6307\u4ee4\uff0c\u9664\u6cd5\u6307\u4ee4\u9700\u8981n\u4e2a\u5468\u671f\u624d\u80fd\u5f97\u5230\u7ed3\u679c\uff0c\u4f1a\u6682\u505c\u7b49\u5230\u7ed3\u679c\u7b97\u51fa\u3002 COP \uff1a\u5904\u7406\u5f02\u5e38\u6307\u4ee4\uff0c\u5728\u8bbf\u5b58\u9636\u6bb5\u7edf\u4e00\u5904\u7406\u6240\u6709\u7684\u5f02\u5e38","title":"\u6267\u884c\u548c\u8bbf\u5b58\u9636\u6bb5"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_12","text":"\u83b7\u5f97\u53ef\u80fd\u7684\u8f6c\u53d1\u6570\u636e\uff0c\u751f\u6210\u6307\u4ee4\u7684\u7ed3\u679c\uff0c\u8ba1\u7b97\u8bbf\u5b58\u5730\u5740 \u5bf9\u4e8e\u9700\u8981\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\uff0c\u8fd9\u4e2a\u5468\u671f\u53ef\u4ee5\u4e0d\u7ba1\u3002 \u5bf9\u4e8e\u5206\u652f\u6307\u4ee4\uff0c\u8fd9\u91cc\u53ef\u4ee5\u6700\u7ec8\u5224\u65ad\u662f\u5426\u8df3\u8f6c\u4ee5\u53ca\u8df3\u8f6c\u7684\u5730\u5740\uff0c\u66f4\u65b0\u5206\u652f\u9884\u6d4b\u6a21\u5757\u3002 \u591a\u5468\u671f\u6307\u4ee4\u4f1a\u6682\u505c\u6d41\u6c34\u7ebf","title":"\u6267\u884c"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_13","text":"\u82e5\u8bbf\u5b58\u540e\u7d27\u8ddf\u9700\u8981\u8bbf\u5b58\u6570\u636e\u7684\u6307\u4ee4\uff0c\u5373\u8bbf\u5b58\u76f8\u5173\uff0c\u5219\u9700\u8981\u6682\u505c\u6d41\u6c34\u7ebf\u5f88\u591a\u4e2a\u5468\u671f\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u5904\u7406\u5305\u62ec\u8bbf\u5b58\u76f8\u5173\u5728\u5185\u7684\u5404\u79cd\u6307\u4ee4\u76f8\u5173\uff0c\u51cf\u5c11\u6d41\u6c34\u7ebf\u6682\u505c\u7684\u5468\u671f\uff0c\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u6267\u884c\u3002\u5982\u679c\u6307\u4ee4\u5728\u8bd1\u7801\u9636\u6bb5\u540e\u4e0d\u4f1a\u4ea7\u751f\u5f02\u5e38\uff08\u4f8b\u5982 AND\uff0cXOR\uff0cADDU \u7b49\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u7c7b\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u8bfb\u53d6\u653e\u5230\u5230\u8bbf\u5b58\u7684\u7b2c\u4e00\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u653e\u5230\u8bbf\u5b58\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002\u8fd9\u6837\u8bbf\u5b58\u76f8\u5173\u7684\u6682\u505c\u6700\u77ed\u53ea\u8981\u4e00\u4e2a\u5468\u671f\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u5206\u652f\u6307\u4ee4\u4e5f\u5982\u6b64\u63a8\u8fdf\u3002\u4f46\u662f\u7531\u4e8e\u5206\u652f\u6709\u53ef\u80fd\u9884\u6d4b\u5931\u8d25\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u64a4\u9500\u5176\u540e\u7684\u6307\u4ee4\uff0c\u82e5\u5728\u8bbf\u5b58\u7b2c\u4e8c\u9636\u6bb5\u5904\u7406\u5206\u652f\u6307\u4ee4\u65f6\u53d1\u73b0\u5206\u652f\u9884\u6d4b\u5931\u8d25\uff0c\u9700\u8981\u628a\u8fd9\u4e2a\u4fe1\u606f\u4f20\u7ed9DCache\uff0c\u9632\u6b62\u6539\u53d8DCache\u3002 \u5f53\u7136\uff0c\u5982\u679c\u6307\u4ee4\u4e0d\u80fd\u5ef6\u8fdf\u6267\u884c\uff0c\u90a3\u4e48\u4ecd\u7136\u9700\u8981\u6682\u505c\u5230\u64cd\u4f5c\u6570\u5747\u53ef\u7528\u4e3a\u6b62\u3002\u6b64\u65f6\u7684\u6307\u4ee4\u76f8\u5173\u4e0d\u4ec5\u8981\u8003\u8651\u8bbf\u5b58\u6307\u4ee4\uff0c\u8fd8\u8981\u8003\u8651\u6b63\u5728\u5ef6\u8fdf\u6267\u884c\u7684\u6307\u4ee4\u3002 \u5728\u6267\u884c\u9636\u6bb5\u8ba1\u7b97\u7ed3\u679c\u3002\u5982\u679c\u6307\u4ee4\u4e4b\u95f4\u5b58\u5728\u8bbf\u5b58\u76f8\u5173\uff0c\u5e76\u4e14\u6307\u4ee4\u662f\u5206\u652f\u6216\u8005\u4e0d\u4f1a\u5728\u6267\u884c\u9636\u6bb5\u51fa\u73b0\u5f02\u5e38\uff0c\u90a3\u4e48\u5176\u53ef\u4ee5\u5728\u6d41\u6c34\u7ebf\u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u8bfb\u53d6\u64cd\u4f5c\u6570\uff0c\u5728\u540e\u4e00\u4e2a\u9636\u6bb5\u8ba1\u7b97\u7ed3\u679c\u3002 \u8bbf\u5b58\u6709\u4e24\u4e2a\u9636\u6bb5\u5bf9\u5e94\u4e8e FU \u7684\u7b2c\u4e8c\u548c\u7b2c\u4e09\u9636\u6bb5\uff0c\u4e0e\u53d6\u6307\u7684\u4e24\u4e2a\u9636\u6bb5\u7c7b\u4f3c \u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u4f1a\u53d1\u9001\u7684\u6570\u636e\uff1a\u5730\u5740\u6709\u6548\u4f4d\u3001\u662f\u5426\u4e3a\u5199\u8bf7\u6c42\u3001\u56db\u4f4d\u5b57\u8282\u5199\u4f7f\u80fd\u3001\u8bfb\u5199\u7684\u5730\u5740\u3001\u5199\u5165\u7684\u6570\u636e \u8bbf\u5b58\u7b2c\u4e00\u9636\u6bb5\u4ee5 Dache \u8fd4\u56de\u7684 addr_ok \u4f5c\u4e3a\u6210\u529f\u63a5\u6536\u7684\u6807\u5fd7 \u7b2c\u4e00\u9636\u6bb5\u8fd8\u4f1a\u5904\u7406\u5f02\u5e38\uff0c\u5e76\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u53d6\u6570\u636e \u8bbf\u5b58\u7b2c\u4e8c\u9636\u6bb5\u63a5\u53d7\u7684\u4fe1\u53f7\uff1a\u6709\u6548\u4f4d data_ok \u548c\u6570\u636e\uff0c\u5176\u4e2d data_ok \u4f5c\u4e3a\u6210\u529f\u5b8c\u6210\u5f53\u524d\u8bbf\u5b58\u7684\u4fe1\u53f7 \u7b2c\u4e8c\u9636\u6bb5\u8fd8\u4f1a\u8fdb\u884c\u90e8\u5206\u6307\u4ee4\u7684\u5ef6\u8fdf\u8ba1\u7b97","title":"\u8bbf\u5b58"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_14","text":"\u5c06\u6570\u636e\u5199\u56de\u5230\u5bc4\u5b58\u5668\u5806\u4e2d","title":"\u9000\u4f11"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_15","text":"\u4e3b\u6d41\u7684\u5904\u7406\u5668\u90fd\u662f\u57fa\u4e8e\u4e24\u4f4d\u7684\u9971\u548c\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u7684\uff0c\u91c7\u7528\uff01 \u7ecf\u6d4b\u8bd5\uff0cPHT\u4e3a2KB\u65f6\uff0c\u5373PC\u503c\u4e2d\u7528\u6765\u5bfb\u5740PHT\u7684\u4f4d\u6570\u4e3a13\u4f4d\uff0c\u6b64\u65f6\u5206\u652f\u9884\u6d4b\u51c6\u786e\u7387\u8fbe\u5230\u4e8693%\uff0c\u91c7\u7528\uff01 MIPS 74kf \u5904\u7406\u5668\uff1a\u4e0d\u8fdb\u884c\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\uff0c\u800c\u662f\u5728\u53d6\u6307\u9636\u6bb5\u6839\u636eICache\u9884\u89e3\u7801\u7684\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u76f4\u63a5\u8ba1\u7b97\u76ee\u6807\u5730\u5740\uff0c\u56e0\u4e3aMIPS\u7a0b\u5e8f\u7684\u7edd\u5927\u90e8\u5206\u5206\u652f\u6307\u4ee4\u662f\u76f4\u63a5\u8df3\u8f6c\u6307\u4ee4\uff0c\u53ef\u4ee5\u5f88\u5feb\u7b97\u51fa\u76ee\u6807\u5730\u5740\u3002 MIPS\u5904\u7406\u5668\u4e2d\u7528 JAL \u3001 BAL \u7b49\u6307\u4ee4\u4f5c\u4e3aCALL\u6307\u4ee4\uff0c\u7528 jr ra \u4f5c\u4e3aReturn\u6307\u4ee4","title":"\u5206\u652f\u9884\u6d4b\u67b6\u6784\uff08\u65e7\uff09"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_16","text":"\u90e8\u4ef6\u6709BIT\u3001PHT\u3001BTB\u3001RAS\uff0c\u4e0b\u8ff0\u7684 PC \u7d22\u5f15\u4f4d**\u4ec5\u4e3a\u793a\u4f8b**\uff0c\u5177\u4f53\u5b9e\u73b0\u8bf7\u53c2\u6570\u5316\uff08 \u65b9\u4fbf\u6324\u7259\u818f \uff09 BIT\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e\u5f53\u524d\u7684 PC[13:2] \u7d22\u5f15\uff0c\u5185\u5bb9\u6709\u4e24\u4f4d\uff08\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u3001\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff0c\u5373 jr ra \uff09 PHT\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e\u5f53\u524d\u7684 PC[13:4] \u7d22\u5f15\uff0c\u5185\u5bb9\u4e3a\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\uff0800\uff1a\u5f3a\u4e0d\u8df3\u8f6c\uff0c01\uff1a\u5f31\u4e0d\u8df3\u8f6c\uff0c10\uff1a\u5f31\u8df3\u8f6c\uff0c11\uff1a\u5f3a\u8df3\u8f6c\uff09 BTB\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u6839\u636e PC[13:4] \u7d22\u5f15\uff0c\u5185\u5bb9\u4e3a32\u4f4d\u7684\u8df3\u8f6c\u7684\u5730\u5740 \u540c\u4e00\u6761\u5206\u652f\u6307\u4ee4\u5b83\u7684PHT\u548cBTB\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 RAS\uff1a\u5728\u53d6\u6307\u7b2c\u4e00\u9636\u6bb5\u83b7\u53d6\u6808\u9876\u6570\u636e\uff0c\u6839\u636eBIT\u4e2d\u7684\u4e00\u4f4d\u4fe1\u606f\uff08\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de\uff09\u6765\u4f7f\u7528\uff0c\u4f46\u662f\u6682\u65f6\u4e0d\u66f4\u65b0\u6808\uff08\u56e0\u4e3a\u6709\u53ef\u80fdBIT\u4e2d\u7684\u4fe1\u606f\u662f\u9519\u7684\uff09\uff0c\u5728\u89e3\u7801\u9636\u6bb5\uff08\u80fd\u591f\u786e\u4fdd\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff09\u6839\u636e\u6307\u4ee4\u7684\u7c7b\u578b\uff08call\uff1a jal bal \u3001return\uff1a jr ra \uff09\u628a\u5730\u5740\u8fdb\u884c\u538b\u6808\u6216\u51fa\u6808\uff0c\u6808\u4e2d\u6bcf\u4e00\u9879\u5e26\u6709\u8ba1\u6570\u5668\uff08\u5f53\u538b\u6808\u65f6\uff0c\u628a\u6808\u9876\u548c\u9700\u8981\u538b\u6808\u7684\u5730\u5740\u6bd4\u8f83\uff0c\u76f8\u540c\u5c31\u8ba9\u8ba1\u6570\u5668\u52a0\u4e00\uff0c\u6808\u6307\u9488\u4e0d\u52a8\uff0c\u51fa\u6808\u65f6\u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u51cf\u5230\u96f6\u624d\u771f\u6b63\u8ba9\u6808\u6307\u9488\u5f80\u4e0b\u4e00\u683c\uff09","title":"\u9884\u6d4b"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_17","text":"\u5206\u652f\u9884\u6d4b\u53ef\u80fd\u51fa\u73b0\u7684\u95ee\u9898\uff1a \u7f16\u53f7 \u5177\u4f53\u8868\u8ff0 1 \u672a\u80fd\u6b63\u786e\u5224\u65ad\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 2 \u662f\u5426\u8df3\u8f6c\u9884\u6d4b\u9519\u8bef 3 \u8df3\u8f6c\u5730\u5740\u9884\u6d4b\u9519\u8bef 4 \u672a\u80fd\u6b63\u786e\u5224\u65ad\u662f\u5426\u662f\u51fd\u6570\u8fd4\u56de \u53d6\u6307\u7b2c\u4e8c\u9636\u6bb5\u6839\u636eICache\u4f20\u6765\u7684\u9884\u89e3\u7801\u7684\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f is_branch \u80fd\u591f\u5224\u65ad\u7f16\u53f7\u4e3a1\u7684\u9519\u8bef \u89e3\u7801\u9636\u6bb5\u6839\u636e\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u80fd\u591f\u5224\u65ad\u7f16\u53f72\u30014\uff08\u90e8\u5206\u5206\u652f\u6307\u4ee4\u4e00\u5b9a\u8df3\u8f6c\uff09\uff0c\u6839\u636e\u7b80\u5355\u52a0\u6cd5\u5668\u7b97\u51fa\u7684\u5730\u5740\u80fd\u591f\u5224\u65ad\u7f16\u53f73\uff0c\u6839\u636eRAS\u7684\u5730\u5740\u80fd\u591f\u5224\u65ad\u7f16\u53f73\uff0c\u540c\u65f6\u66f4\u65b0RAS\u3002 \u6267\u884c\u9636\u6bb5\u6839\u636e\u5f97\u5230\u7684\u7ed3\u679c\u80fd\u591f\u5b8c\u5168\u5224\u65ad\u7f16\u53f72\u548c3 \u5728\u9884\u6d4b\u9519\u8bef\u65f6\u9700\u8981\u7acb\u523b\u91cd\u65b0\u53d6\u6307\uff0c\u800c\u4e0a\u8ff0\u90e8\u4ef6\u7684\u66f4\u65b0\u6216\u8005\u5199\u5165\u5728\u6267\u884c\u9636\u6bb5\u7edf\u4e00\u5904\u7406\uff08\u9664\u4e86RAS\u5728\u89e3\u7801\u9636\u6bb5\u66f4\u65b0\uff09","title":"\u6b63\u786e\u6027\u5224\u65ad\u548c\u66f4\u65b0"},{"location":"competition/CPU%E8%AE%BE%E8%AE%A1/#_18","text":"store\u6307\u4ee4\u9700\u8981\u8fd4\u56de data_ok \u5417\uff1f\u76ee\u524d dcache \u5bf9\u6807 icache \uff0c\u6240\u4ee5\u662f\u9700\u8981\u8fd4\u56de data_ok BIT\uff08Branch Instruction Table\uff09\u90e8\u4ef6\u7684\u9009\u62e9\uff1a\u770b\u8fc7\u5404\u79cd\u8d44\u6599\uff0c\u5206\u652f\u9884\u6d4b\u8fd9\u5757\u7684\u67b6\u6784\u4e2d\u597d\u50cf\u90fd\u6ca1\u6709BIT\u8fd9\u4e2a\u90e8\u4ef6\uff0c\u4e5f\u5c31\u662f\u76f4\u63a5\u5224\u65ad\u4e00\u6761\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u90e8\u4ef6\u3002\u6211\u4eec\u77e5\u9053\uff0c\u5206\u652f\u9884\u6d4b\u662f\u6309\u7167\u5f53\u524dPC\u53bb\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u800c\u4e14\u56e0\u4e3a\u6709\u5927\u5c0f\u7684\u9650\u5236\uff0c\u4e0d\u53ef\u80fd\u7528PC\u7684\u6240\u6709\u7684\u4f4d\u6765\u7d22\u5f15\uff0c\u4e00\u5b9a\u4f1a\u6709\u51b2\u7a81\uff0c\u5373\u4e0d\u540c\u7684PC\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u5730\u65b9\uff0c\u800c\u5982\u679c\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684PC\u548c\u975e\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684PC\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u5730\u65b9\u4ea7\u751f\u51b2\u7a81\u7684\u8bdd\uff0c\u5373\u6bcf\u6b21\u975e\u5206\u652f\u6307\u4ee4\u90fd\u4f1a\u7528\u5230\u5206\u652f\u6307\u4ee4\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u5982\u679c\u6ca1\u6709\u529e\u6cd5\u628a\u5b83\u4eec\u533a\u5206\u5f00\u6765\uff0c\u5c31\u4f1a\u9020\u6210\u975e\u5206\u652f\u6307\u4ee4\uff0c\u4f46\u662f\u5374\u9884\u6d4b\u8df3\u8f6c\u7684\u9519\u8bef\u3002\u4e00\u822c\u67b6\u6784\u4e2d\u597d\u50cf\u662f\u7528BTB\u4e2dtag\u6bd4\u5bf9\u540e\u51fa\u73b0\u7684miss\uff08\u975e\u5206\u652f\u6307\u4ee4\u4e00\u5b9a\u4f1amiss\uff0c\u6240\u4ee5\u53ea\u80fd\u987a\u5e8f\u53d6\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u8df3\u8f6c\u7684\u9519\u8bef\uff09\u6765\u88ab\u52a8\u533a\u5206\u975e\u5206\u652f\u6307\u4ee4\u548c\u5206\u652f\u6307\u4ee4\uff0c\u8fd9\u91cc\u6211\u4eec\u6253\u7b97\u4e3b\u52a8\u533a\u5206\uff0c\u56e0\u4e3a\u6bcf\u4e2aPC\u503c\u53ea\u9700\u8981\u5b58\u653e\u4e00\u4f4d\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b58\u653e\u5f88\u591a\u3002\u540c\u65f6\u8fd8\u53ef\u4ee5\u5b58\u653e\u5206\u652f\u6307\u4ee4\u7c7b\u578b\u7684\u4fe1\u606f\u3002 \u5206\u652f\u4e0e\u975e\u5206\u652f\u6307\u4ee4\u7684\u533a\u5206\uff1f\u4e3b\u52a8\uff1aBIT\uff0c\u9700\u8981\u7684\u7a7a\u95f4\u591a\u3002\u88ab\u52a8\uff1a\u5728BTB\u4e2d\u5229\u7528tag\u6bd4\u5bf9\u4f1a\u51fa\u73b0\u7684miss\uff0c\u65f6\u95f4\u82b1\u8d39\u591a \u53d6\u6307\u65f6\u5206\u652f\u6307\u4ee4\u4e0e\u5ef6\u8fdf\u69fd\u600e\u4e48\u5904\u7406\uff1f\uff081\uff09ICache\u7ed9\u7684\u6307\u4ee4\u7ec4\u4e2d\u5206\u652f\u548c\u5ef6\u8fdf\u69fd\u7ed1\u5b9a\uff0c\u95ee\u9898\uff1a\u5206\u652f\u548c\u5ef6\u8fdf\u69fd\u4e0d\u5728\u540c\u4e00\u4e2acache line\uff082\uff09\u8bd1\u7801\u9636\u6bb5\u82e5\u53d1\u73b0\u6ca1\u6709\u53d6\u5230\u5206\u652f\u6307\u4ee4\u540e\u7684\u5ef6\u8fdf\u69fd\uff0c\u628a\u5206\u652f\u7684\u4fe1\u606f\u653e\u5728\u4e00\u4e2a\u7f13\u5b58\u4e2d\uff0c\u7b49\u5230\u4e0b\u4e00\u5468\u671f\u53d6\u6765\u4e86\u5ef6\u8fdf\u69fd\u518d\u8fdb\u884c\u5206\u652f\u9884\u6d4b\u548c\u6b63\u786e\u6027\u5224\u65ad\u3002\u76ee\u524d\u6211\u4eec\u91c7\u53d6\u7684\u662f\u65b9\u6cd5\uff082\uff09 \u53d1\u5c04\u9636\u6bb5\u82e5\u7b2c\u4e8c\u6761\u662f\u5206\u652f\u6307\u4ee4\u5219\u4e0d\u53d1\u5c04\u7684\u539f\u56e0\uff1a\u5f53\u5206\u652f\u9884\u6d4b\u5931\u8d25\u540e\u9700\u8981\u6e05\u7a7a\u4e4b\u524d\u7684\u6307\u4ee4\uff0c\u5982\u679c\u5ef6\u8fdf\u69fd\u6162\u5206\u652f\u6307\u4ee4\u4e00\u4e2a\u5468\u671f\u7684\u8bdd\uff0c\u5219\u5ef6\u8fdf\u69fd\u9700\u8981\u6267\u884c\uff0c\u800c\u548c\u5ef6\u8fdf\u69fd\u540c\u5468\u671f\u53d1\u5c04\u7684\u53e6\u4e00\u6761\u6307\u4ee4\u5219\u4e0d\u9700\u8981\u6267\u884c\uff0c\u4f46\u4ed6\u4eec\u662f\u5728\u540c\u4e00\u4e2a\u5468\u671f\u53d1\u5c04\u7684\uff0c\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002 \u9488\u5bf9\u5206\u652f\u6307\u4ee4\uff08\u5c31\u662f\u62ff\u5206\u652f\u6307\u4ee4\u7684PC\u6765\uff09\u8fdb\u884c\u5206\u652f\u9884\u6d4b\uff1a\uff081\uff09\u56e0\u4e3a\u4e00\u4e2a\u6307\u4ee4\u7ec4\u6700\u591a\u53ea\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u9700\u8981\u591a\u6b21\u9884\u6d4b\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u6307\u4ee4\u7ec4\u5bf9\u5e94\u7684PC\u503c\uff088\u5b57\u8282\u5bf9\u9f50\uff09\u6765\u9884\u6d4b\uff082\uff09\u867d\u7136\u6709\u53ef\u80fd\u4e0d\u6267\u884c\u5206\u652f\u6307\u4ee4\uff0c\u800c\u662f\u76f4\u63a5\u6267\u884c\u5206\u652f\u6307\u4ee4\u540e\u4e00\u6761\u6307\u4ee4\uff08\u5373\u5ef6\u8fdf\u69fd\uff09\uff1a\u6bd4\u5982\u8bf4\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\u8df3\u8f6c\u5230\u5ef6\u8fdf\u69fd\uff0c\u8fd9\u6837\u7528\u5206\u652f\u9884\u6d4b\u5c31\u4e0d\u6b63\u786e\u4e86\uff0c\u4e00\u4e2a\u89e3\u51b3\u65b9\u6cd5\u662f\u5b58\u653e\u6307\u4ee4\u7ec4\u4e2d\u5206\u652f\u6307\u4ee4\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4f46\u662f\u53ef\u80fd\u6027\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u4e0d\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u3002","title":"\u6743\u8861\u4e0e\u9009\u62e9"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/","text":"Cache\u8bbe\u8ba1 \u00b6 2021/7/24 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4Cache\u7684\u5177\u4f53\u8bbe\u8ba1 1. Cache\u4e0eCPU\u7684\u4ea4\u4e92\u884c\u4e3a \u00b6 \u200b CPU\u5728Core Top\u5c42\u9762\u901a\u8fc7\u56db\u4e2a\u4fe1\u53f7\u4e0eMMU\u90e8\u5206\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fdb\u884c\u6307\u4ee4\u4e0e\u6570\u636e\u7684\u4f20\u8f93\u3002MMU\u901a\u8fc7\u5bf9\u8bf7\u6c42\u7684\u5730\u5740\u7b49\u4fe1\u606f\u8fdb\u884c\u89e3\u6790\uff0c\u786e\u5b9a\u5176\u54cd\u5e94\u8def\u5f84\u4e3aibus\uff0cdbus\u6216\u8005uncached bus\u3002\u5176\u4e2dL1i Cache\u5b9e\u73b0\u4e3aICache\uff0cL1d Cache\u5b9e\u73b0\u4e3aDCache\uff0cUncached\u5b9e\u73b0\u4e3aUncached Buffer\u3002 \u200b \u4e0a\u8ff0\u4e09\u6761\u603b\u7ebf\u5747\u4e3a\u7c7bSRAM\u603b\u7ebf\uff0c\u7531\u4e8e\u6bd4\u8d5b\u8981\u6c42\u5c01\u88c5\u4e3aAXI\u603b\u7ebf\uff0c\u56e0\u6b64\u5728\u5206\u522b\u7ecf\u8fc7ICache\uff0cDCache\u548cUncached Buffer\u4e4b\u540e\u5747\u88ab\u8f6c\u6362\u6210AXI 4 \u603b\u7ebf\u3002 2. MMU \u67b6\u6784 \u00b6 //TODO \u7f13\u5b58\u76f8\u5173\u6307\u4ee4 \u00b6 \u89c1 \u652f\u6301\u64cd\u4f5c\u7cfb\u7edf\u7684\u989d\u5916\u6307\u4ee4 CACHE \u00b6 vAddr \u2190 GPR[base] + sign_extend(offset) (pAddr, uncached) \u2190 AddressTranslation(vAddr, DataReadReference) CacheOp(op, vAddr, pAddr) \u5f85\u5b9e\u73b0 pref \u00b6 \u5f85\u5b9a 3. Dcache\u67b6\u6784 \u00b6 Meta \u00b6 tag 26bits LRU\u53c2\u6570 2bits state 3bits \u8bfb \u00b6 \u63a5\u53d7\u8bf7\u6c42\uff0c\u5e76\u4e14\u8bfb\u53d6\u5bf9\u5e94\u7684 TAG\u548cdata(data\u9700\u8981\u989d\u5916\u4e00\u4e2a\u5468\u671f)\uff0c\u5224\u65ad\u662f\u5426\u547d\u4e2d\uff08\u8fd8\u8981\u67e5\u8be2\u5199\u7f13\u51b2\uff09 \u547d\u4e2d\u5219\u5904\u7406\uff0cmiss\u5982\u679c\u6709\u810f\u6570\u636e\u9001\u5165\u5199\u7f13\u51b2\uff0c\u6216\u8bbf\u5b58 \u7ed9\u51fa\u6570\u636e \u5199 \u00b6 \u67e5\u8be2TAG\u548c\u5199\u7f13\u51b2\uff0c\u5bf9\u5199\u7f13\u51b2\u5b8c\u6210\u5199\u5408\u5e76 \u5f97\u5230Bram\u4e00\u6761cache line\u7684data,\u4fee\u6539\u5b8c\u6210\u5f85\u5199\u5165\uff1b\u82e5miss\u5219\u8bbf\u5b58\uff0c\u6709\u810f\u6570\u636e\u9001\u5165\u5199\u7f13\u51b2 \u5b8c\u6210\u5bf9\u6807\u7b7e\u3001\u6570\u636e RAM \u7684\u5199\u5165\u3002 Skid Buffer \u00b6 \u6d41\u6c34\u7ebf\u548c\u7f13\u5b58\u7684\u4ea4\u4e92\u5bb9\u6613\u4ea7\u751f\u975e\u5e38\u957f\u7684\u5173\u952e\u8def\u5f84\uff0c\u4f8b\u5982\uff1a \u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u79cd\u53ef\u80fd\u7684\u5173\u952e\u8def\u5f84\uff1a \u8bbf\u5b58\u9636\u6bb5\u53d1\u51fa\u8bf7\u6c42\u3002\u5728\u53d1\u8bf7\u6c42\u524d\u9700\u8981\u505a\u4e00\u70b9\u7ec4\u5408\u903b\u8f91\u5224\u65ad\u662f\u5426\u9700\u8981\u53d1\u51fa\u8bf7\u6c42\uff08 valid \uff09\u3002 \u7f13\u5b58\u641c\u7d22\u8bf7\u6c42\u7684\u5730\u5740\u662f\u5426\u5728\u7f13\u5b58\u4e2d\uff0c\u5e76\u7531\u6b64\u51b3\u5b9a addr_ok \u3002 \u6d41\u6c34\u7ebf\u6839\u636e addr_ok \u51b3\u5b9a\u662f\u5426\u9700\u8981\u963b\u585e\uff0c\u4ea7\u751f stall \u4fe1\u53f7\u3002 stall \u4fe1\u53f7\u9700\u8981\u8de8\u8fc7\u591a\u4e2a\u6d41\u6c34\u7ebf\u9636\u6bb5\uff0c\u6240\u4ee5\u5f80\u5f80\u8d70\u7ebf\u5ef6\u65f6\u6bd4\u8f83\u957f\u3002\u8fd9\u91cc\u7684\u95ee\u9898\u4e3b\u8981\u51fa\u5728\u63e1\u624b\u4fe1\u53f7\uff08 valid \u548c addr_ok \uff09\u4e4b\u95f4\u6709\u7ec4\u5408\u903b\u8f91\u3002Skid buffer \u53ef\u4ee5\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 Skid buffer \u662f\u63d2\u5165\u5728\u603b\u7ebf\u4e4b\u95f4\u7684\u3002\u5b83\u7684\u6548\u679c\u662f\u5207\u65ad valid \u548c addr_ok \u4e4b\u95f4\u7684\u7ec4\u5408\u903b\u8f91\u3002\u5b9e\u9645\u4e0a skid buffer \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a 1 \u7684\u961f\u5217\u3002\u5728 skid buffer \u5185\u90e8\u6709\u4e00\u4e2a\u7f13\u51b2\u533a\uff1a \u5982\u679c\u7f13\u51b2\u533a\u4e0d\u4e3a\u7a7a\uff0c\u53d1\u9001\u7f13\u51b2\u533a\u5185\u7684\u8bf7\u6c42\u3002\u5426\u5219\u53d1\u9001\u6d41\u6c34\u7ebf\u7684\u8bf7\u6c42\u3002 \u5f53\u6d41\u6c34\u7ebf\u7684\u8bf7\u6c42\u5728\u5f53\u524d\u5468\u671f\u4e0d\u80fd\u53d1\u51fa\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f13\u5b58\u3002 \u5f53\u5185\u90e8\u7f13\u51b2\u533a\u88ab\u5360\u7528\u65f6\uff0c\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 addr_ok \u8bbe\u4e3a 0\uff0c\u4ece\u800c\u963b\u585e\u6d41\u6c34\u7ebf\u3002 \u5f53\u7f13\u5b58\u4e00\u4fa7\u7684 addr_ok \u4e3a 1 \u65f6\uff0c\u8bf7\u6c42\u5b8c\u6210\uff0c\u53ef\u4ee5\u6e05\u7a7a\u5185\u90e8\u7f13\u5b58\u533a\u3002 \u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u53ea\u8981\u5185\u90e8\u7f13\u5b58\u533a\u4e3a\u7a7a\uff08 empty \u4fe1\u53f7\uff09\uff0cskid buffer \u5c31\u80fd\u5c06\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 addr_ok \u62c9\u8d77\uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u7f13\u5b58\u4e00\u4fa7\u7684 addr_ok \u662f\u5426\u4e3a 1\u3002 empty \u4f7f\u7528\u4e00\u4e2a\u5bc4\u5b58\u5668\u5b58\u50a8\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 valid \u548c addr_ok \u4e4b\u95f4\u7684\u7ec4\u5408\u903b\u8f91\u5207\u5f00\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u8fc7\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u65f6\u949f\u5468\u671f\u3002 \u53c2\u8003\u5b9e\u73b0\uff1a RequestBuffer.sv Victim Buffer \u00b6 \u53e6\u5916\u8003\u8651 4. ICache \u67b6\u6784 \u00b6 5. Uncached Buffer\u67b6\u6784 \u00b6 6. \u7c7bSRAM\u603b\u7ebf\u4e0eAXI 4\u603b\u7ebf\u8f6c\u6362 \u00b6 //TODO: \u7a81\u53d1\u4f20\u8f93(INCR or WRAP)\u4ee5\u53caaxi_wrap.v","title":"Cache\u8bbe\u8ba1"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#cache","text":"2021/7/24 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4Cache\u7684\u5177\u4f53\u8bbe\u8ba1","title":"Cache\u8bbe\u8ba1"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#1-cachecpu","text":"\u200b CPU\u5728Core Top\u5c42\u9762\u901a\u8fc7\u56db\u4e2a\u4fe1\u53f7\u4e0eMMU\u90e8\u5206\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fdb\u884c\u6307\u4ee4\u4e0e\u6570\u636e\u7684\u4f20\u8f93\u3002MMU\u901a\u8fc7\u5bf9\u8bf7\u6c42\u7684\u5730\u5740\u7b49\u4fe1\u606f\u8fdb\u884c\u89e3\u6790\uff0c\u786e\u5b9a\u5176\u54cd\u5e94\u8def\u5f84\u4e3aibus\uff0cdbus\u6216\u8005uncached bus\u3002\u5176\u4e2dL1i Cache\u5b9e\u73b0\u4e3aICache\uff0cL1d Cache\u5b9e\u73b0\u4e3aDCache\uff0cUncached\u5b9e\u73b0\u4e3aUncached Buffer\u3002 \u200b \u4e0a\u8ff0\u4e09\u6761\u603b\u7ebf\u5747\u4e3a\u7c7bSRAM\u603b\u7ebf\uff0c\u7531\u4e8e\u6bd4\u8d5b\u8981\u6c42\u5c01\u88c5\u4e3aAXI\u603b\u7ebf\uff0c\u56e0\u6b64\u5728\u5206\u522b\u7ecf\u8fc7ICache\uff0cDCache\u548cUncached Buffer\u4e4b\u540e\u5747\u88ab\u8f6c\u6362\u6210AXI 4 \u603b\u7ebf\u3002","title":"1. Cache\u4e0eCPU\u7684\u4ea4\u4e92\u884c\u4e3a"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#2-mmu","text":"//TODO","title":"2. MMU \u67b6\u6784"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#_1","text":"\u89c1 \u652f\u6301\u64cd\u4f5c\u7cfb\u7edf\u7684\u989d\u5916\u6307\u4ee4","title":"\u7f13\u5b58\u76f8\u5173\u6307\u4ee4"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#cache_1","text":"vAddr \u2190 GPR[base] + sign_extend(offset) (pAddr, uncached) \u2190 AddressTranslation(vAddr, DataReadReference) CacheOp(op, vAddr, pAddr) \u5f85\u5b9e\u73b0","title":"CACHE"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#pref","text":"\u5f85\u5b9a","title":"pref"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#3-dcache","text":"","title":"3. Dcache\u67b6\u6784"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#meta","text":"tag 26bits LRU\u53c2\u6570 2bits state 3bits","title":"Meta"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#_2","text":"\u63a5\u53d7\u8bf7\u6c42\uff0c\u5e76\u4e14\u8bfb\u53d6\u5bf9\u5e94\u7684 TAG\u548cdata(data\u9700\u8981\u989d\u5916\u4e00\u4e2a\u5468\u671f)\uff0c\u5224\u65ad\u662f\u5426\u547d\u4e2d\uff08\u8fd8\u8981\u67e5\u8be2\u5199\u7f13\u51b2\uff09 \u547d\u4e2d\u5219\u5904\u7406\uff0cmiss\u5982\u679c\u6709\u810f\u6570\u636e\u9001\u5165\u5199\u7f13\u51b2\uff0c\u6216\u8bbf\u5b58 \u7ed9\u51fa\u6570\u636e","title":"\u8bfb"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#_3","text":"\u67e5\u8be2TAG\u548c\u5199\u7f13\u51b2\uff0c\u5bf9\u5199\u7f13\u51b2\u5b8c\u6210\u5199\u5408\u5e76 \u5f97\u5230Bram\u4e00\u6761cache line\u7684data,\u4fee\u6539\u5b8c\u6210\u5f85\u5199\u5165\uff1b\u82e5miss\u5219\u8bbf\u5b58\uff0c\u6709\u810f\u6570\u636e\u9001\u5165\u5199\u7f13\u51b2 \u5b8c\u6210\u5bf9\u6807\u7b7e\u3001\u6570\u636e RAM \u7684\u5199\u5165\u3002","title":"\u5199"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#skid-buffer","text":"\u6d41\u6c34\u7ebf\u548c\u7f13\u5b58\u7684\u4ea4\u4e92\u5bb9\u6613\u4ea7\u751f\u975e\u5e38\u957f\u7684\u5173\u952e\u8def\u5f84\uff0c\u4f8b\u5982\uff1a \u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u79cd\u53ef\u80fd\u7684\u5173\u952e\u8def\u5f84\uff1a \u8bbf\u5b58\u9636\u6bb5\u53d1\u51fa\u8bf7\u6c42\u3002\u5728\u53d1\u8bf7\u6c42\u524d\u9700\u8981\u505a\u4e00\u70b9\u7ec4\u5408\u903b\u8f91\u5224\u65ad\u662f\u5426\u9700\u8981\u53d1\u51fa\u8bf7\u6c42\uff08 valid \uff09\u3002 \u7f13\u5b58\u641c\u7d22\u8bf7\u6c42\u7684\u5730\u5740\u662f\u5426\u5728\u7f13\u5b58\u4e2d\uff0c\u5e76\u7531\u6b64\u51b3\u5b9a addr_ok \u3002 \u6d41\u6c34\u7ebf\u6839\u636e addr_ok \u51b3\u5b9a\u662f\u5426\u9700\u8981\u963b\u585e\uff0c\u4ea7\u751f stall \u4fe1\u53f7\u3002 stall \u4fe1\u53f7\u9700\u8981\u8de8\u8fc7\u591a\u4e2a\u6d41\u6c34\u7ebf\u9636\u6bb5\uff0c\u6240\u4ee5\u5f80\u5f80\u8d70\u7ebf\u5ef6\u65f6\u6bd4\u8f83\u957f\u3002\u8fd9\u91cc\u7684\u95ee\u9898\u4e3b\u8981\u51fa\u5728\u63e1\u624b\u4fe1\u53f7\uff08 valid \u548c addr_ok \uff09\u4e4b\u95f4\u6709\u7ec4\u5408\u903b\u8f91\u3002Skid buffer \u53ef\u4ee5\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u3002 Skid buffer \u662f\u63d2\u5165\u5728\u603b\u7ebf\u4e4b\u95f4\u7684\u3002\u5b83\u7684\u6548\u679c\u662f\u5207\u65ad valid \u548c addr_ok \u4e4b\u95f4\u7684\u7ec4\u5408\u903b\u8f91\u3002\u5b9e\u9645\u4e0a skid buffer \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u957f\u5ea6\u4e3a 1 \u7684\u961f\u5217\u3002\u5728 skid buffer \u5185\u90e8\u6709\u4e00\u4e2a\u7f13\u51b2\u533a\uff1a \u5982\u679c\u7f13\u51b2\u533a\u4e0d\u4e3a\u7a7a\uff0c\u53d1\u9001\u7f13\u51b2\u533a\u5185\u7684\u8bf7\u6c42\u3002\u5426\u5219\u53d1\u9001\u6d41\u6c34\u7ebf\u7684\u8bf7\u6c42\u3002 \u5f53\u6d41\u6c34\u7ebf\u7684\u8bf7\u6c42\u5728\u5f53\u524d\u5468\u671f\u4e0d\u80fd\u53d1\u51fa\u65f6\uff0c\u53ef\u4ee5\u5c06\u5176\u7f13\u5b58\u3002 \u5f53\u5185\u90e8\u7f13\u51b2\u533a\u88ab\u5360\u7528\u65f6\uff0c\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 addr_ok \u8bbe\u4e3a 0\uff0c\u4ece\u800c\u963b\u585e\u6d41\u6c34\u7ebf\u3002 \u5f53\u7f13\u5b58\u4e00\u4fa7\u7684 addr_ok \u4e3a 1 \u65f6\uff0c\u8bf7\u6c42\u5b8c\u6210\uff0c\u53ef\u4ee5\u6e05\u7a7a\u5185\u90e8\u7f13\u5b58\u533a\u3002 \u8fd9\u91cc\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u53ea\u8981\u5185\u90e8\u7f13\u5b58\u533a\u4e3a\u7a7a\uff08 empty \u4fe1\u53f7\uff09\uff0cskid buffer \u5c31\u80fd\u5c06\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 addr_ok \u62c9\u8d77\uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u7f13\u5b58\u4e00\u4fa7\u7684 addr_ok \u662f\u5426\u4e3a 1\u3002 empty \u4f7f\u7528\u4e00\u4e2a\u5bc4\u5b58\u5668\u5b58\u50a8\u3002\u8fd9\u6837\u5c31\u80fd\u628a\u6d41\u6c34\u7ebf\u4e00\u4fa7\u7684 valid \u548c addr_ok \u4e4b\u95f4\u7684\u7ec4\u5408\u903b\u8f91\u5207\u5f00\u3002\u540c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6574\u4e2a\u8fc7\u7a0b\u4e0d\u9700\u8981\u989d\u5916\u7684\u65f6\u949f\u5468\u671f\u3002 \u53c2\u8003\u5b9e\u73b0\uff1a RequestBuffer.sv","title":"Skid Buffer"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#victim-buffer","text":"\u53e6\u5916\u8003\u8651","title":"Victim Buffer"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#4-icache","text":"","title":"4. ICache \u67b6\u6784"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#5-uncached-buffer","text":"","title":"5. Uncached Buffer\u67b6\u6784"},{"location":"competition/Cache%E8%AE%BE%E8%AE%A1/#6-sramaxi-4","text":"//TODO: \u7a81\u53d1\u4f20\u8f93(INCR or WRAP)\u4ee5\u53caaxi_wrap.v","title":"6. \u7c7bSRAM\u603b\u7ebf\u4e0eAXI 4\u603b\u7ebf\u8f6c\u6362"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/","text":"Soc\u6846\u67b6\u8bbe\u8ba1 \u00b6 2021/7/24 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u7684Soc\u8bbe\u8ba1\u67b6\u6784\u4ecb\u7ecd 1. \u521d\u8d5bSoc\u67b6\u6784 \u00b6 \u200b \u7531\u4e8e\u5728\u521d\u8d5b\u4e2d\u5e76\u4e0d\u8981\u6c42\u5bf9\u4e8e\u5916\u8bbe\u7b49\u8bbe\u5907\u7684\u63a5\u5165\uff0c\u56e0\u6b64\u521d\u8d5bSoc\u8bbe\u8ba1\u4fa7\u91cd\u4e8e\u5bf9\u4e8eFPGA\u4e0a\u7684\u8d44\u6e90\u5e94\u7528\uff0c\u67b6\u6784\u5982\u4e0b\u56fe\u3002 1.1 CPU Top\u8bbe\u8ba1 \u00b6 \u200b \u521d\u8d5b\u90e8\u5206\u7684\u91cd\u70b9\u4e3aCPU Top\u90e8\u5206\u7684\u8bbe\u8ba1\u3002Core Top\u90e8\u5206\u4e3a\u8bbe\u8ba1\u7684CPU\u4e3b\u4f53\u90e8\u5206\uff0c\u6211\u4eec\u7684\u67b6\u6784\u4e3a\u987a\u5e8f\u53cc\u53d1\u5c04CPU\uff0c\u5177\u4f53\u62a5\u544a\u89c1CPU\u8bbe\u8ba1\u6587\u6863\u3002 \u200b CPU\u5728Core Top\u5c42\u9762\u901a\u8fc7\u56db\u4e2a\u4fe1\u53f7\u4e0eMMU\u90e8\u5206\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fdb\u884c\u6307\u4ee4\u4e0e\u6570\u636e\u7684\u4f20\u8f93\u3002MMU\u901a\u8fc7\u5bf9\u8bf7\u6c42\u7684\u5730\u5740\u7b49\u4fe1\u606f\u8fdb\u884c\u89e3\u6790\uff0c\u786e\u5b9a\u5176\u54cd\u5e94\u8def\u5f84\u4e3aibus\uff0cdbus\u6216\u8005uncached bus\u3002\u5176\u4e2dL1i Cache\u5b9e\u73b0\u4e3aICache\uff0cL1d Cache\u5b9e\u73b0\u4e3aDCache\uff0cUncached\u5b9e\u73b0\u4e3aUncached Buffer\u3002\u5177\u4f53\u62a5\u544a\u89c1Cache\u8bbe\u8ba1\u6587\u6863\u3002 \u200b \u4e0a\u8ff0\u4e09\u6761\u54cd\u5e94\u603b\u7ebf\u8def\u5f84\u5747\u4e3a\u81ea\u5b9a\u4e49\u7c7bSRAM\u603b\u7ebf\uff0c\u5728\u7ecf\u8fc7ICacheDCache\uff0cUncached Buffer\u540e\u8f6c\u5316\u6210\u7b26\u5408AXI 4\u6807\u51c6\u7684\u603b\u7ebf\uff0c\u5e76\u4eceXilinx Vivado\u63d0\u4f9b\u7684IP\u6838AXI Crossbar\u7684Slave\u7aef\u8f93\u5165\uff0c\u5728Master\u7aef\u8f93\u51fa\u4e3a\u7b26\u5408AXI4\u6807\u51c6\u7684\u603b\u7ebf\u3002\u53e6\u5916AXI Crossbar\u63d0\u4f9b\u4ef2\u88c1\u529f\u80fd\uff0c\u4e09\u6761Slave\u603b\u7ebf\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4e3auncached bus > dbus > ibus. \u200b \u4e0a\u8ff0\u51e0\u4e2a\u90e8\u5206\u88ab\u5c01\u88c5\u4e3aCPU Top\u5c42\u9762\uff0c\u901a\u8fc7AXI 4\u603b\u7ebf\u4e0e\u5176\u4ed6FPGA\u8d44\u6e90\u4ea4\u4e92\u3002 1.2 Memory IPs\u89e3\u91ca \u00b6 \u200b \u521d\u8d5b\u90e8\u5206\u63d0\u4f9b\u7684\u6d4b\u8bd5\u6846\u67b6\u4e2d\u5305\u542b\u4e86Memory IPs\u4e2d\u5c55\u793a\u7684\u6240\u6709IP\u53ca\u6a21\u5757\uff0c\u5177\u4f53\u4ecb\u7ecd\u8be6\u89c1\u53d1\u5e03\u5305\u6587\u6863A11_Trace\u6bd4\u5bf9\u673a\u5236\u4f7f\u7528\u8bf4\u660e_v1.00.pdf\u3002 2. \u51b3\u8d5bSoc\u67b6\u6784 \u00b6 \u200b \u5728\u672c\u90e8\u5206\u7684\u8bbe\u8ba1\u4fa7\u91cd\u70b9\u4e3b\u8981\u96c6\u4e2d\u5728\u7cfb\u7edf\u542f\u52a8\u548c\u5916\u8bbe\u63a5\u5165\u65b9\u9762\uff0c\u65e8\u5728\u5145\u5206\u5229\u7528\u5f00\u53d1\u677f\u4e0a\u6240\u6709\u8d44\u6e90\uff0c\u67b6\u6784\u5982\u4e0b\u56fe\u3002","title":"Soc\u6846\u67b6\u8bbe\u8ba1"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/#soc","text":"2021/7/24 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u7684Soc\u8bbe\u8ba1\u67b6\u6784\u4ecb\u7ecd","title":"Soc\u6846\u67b6\u8bbe\u8ba1"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/#1-soc","text":"\u200b \u7531\u4e8e\u5728\u521d\u8d5b\u4e2d\u5e76\u4e0d\u8981\u6c42\u5bf9\u4e8e\u5916\u8bbe\u7b49\u8bbe\u5907\u7684\u63a5\u5165\uff0c\u56e0\u6b64\u521d\u8d5bSoc\u8bbe\u8ba1\u4fa7\u91cd\u4e8e\u5bf9\u4e8eFPGA\u4e0a\u7684\u8d44\u6e90\u5e94\u7528\uff0c\u67b6\u6784\u5982\u4e0b\u56fe\u3002","title":"1. \u521d\u8d5bSoc\u67b6\u6784"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/#11-cpu-top","text":"\u200b \u521d\u8d5b\u90e8\u5206\u7684\u91cd\u70b9\u4e3aCPU Top\u90e8\u5206\u7684\u8bbe\u8ba1\u3002Core Top\u90e8\u5206\u4e3a\u8bbe\u8ba1\u7684CPU\u4e3b\u4f53\u90e8\u5206\uff0c\u6211\u4eec\u7684\u67b6\u6784\u4e3a\u987a\u5e8f\u53cc\u53d1\u5c04CPU\uff0c\u5177\u4f53\u62a5\u544a\u89c1CPU\u8bbe\u8ba1\u6587\u6863\u3002 \u200b CPU\u5728Core Top\u5c42\u9762\u901a\u8fc7\u56db\u4e2a\u4fe1\u53f7\u4e0eMMU\u90e8\u5206\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fdb\u884c\u6307\u4ee4\u4e0e\u6570\u636e\u7684\u4f20\u8f93\u3002MMU\u901a\u8fc7\u5bf9\u8bf7\u6c42\u7684\u5730\u5740\u7b49\u4fe1\u606f\u8fdb\u884c\u89e3\u6790\uff0c\u786e\u5b9a\u5176\u54cd\u5e94\u8def\u5f84\u4e3aibus\uff0cdbus\u6216\u8005uncached bus\u3002\u5176\u4e2dL1i Cache\u5b9e\u73b0\u4e3aICache\uff0cL1d Cache\u5b9e\u73b0\u4e3aDCache\uff0cUncached\u5b9e\u73b0\u4e3aUncached Buffer\u3002\u5177\u4f53\u62a5\u544a\u89c1Cache\u8bbe\u8ba1\u6587\u6863\u3002 \u200b \u4e0a\u8ff0\u4e09\u6761\u54cd\u5e94\u603b\u7ebf\u8def\u5f84\u5747\u4e3a\u81ea\u5b9a\u4e49\u7c7bSRAM\u603b\u7ebf\uff0c\u5728\u7ecf\u8fc7ICacheDCache\uff0cUncached Buffer\u540e\u8f6c\u5316\u6210\u7b26\u5408AXI 4\u6807\u51c6\u7684\u603b\u7ebf\uff0c\u5e76\u4eceXilinx Vivado\u63d0\u4f9b\u7684IP\u6838AXI Crossbar\u7684Slave\u7aef\u8f93\u5165\uff0c\u5728Master\u7aef\u8f93\u51fa\u4e3a\u7b26\u5408AXI4\u6807\u51c6\u7684\u603b\u7ebf\u3002\u53e6\u5916AXI Crossbar\u63d0\u4f9b\u4ef2\u88c1\u529f\u80fd\uff0c\u4e09\u6761Slave\u603b\u7ebf\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u4e3auncached bus > dbus > ibus. \u200b \u4e0a\u8ff0\u51e0\u4e2a\u90e8\u5206\u88ab\u5c01\u88c5\u4e3aCPU Top\u5c42\u9762\uff0c\u901a\u8fc7AXI 4\u603b\u7ebf\u4e0e\u5176\u4ed6FPGA\u8d44\u6e90\u4ea4\u4e92\u3002","title":"1.1 CPU Top\u8bbe\u8ba1"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/#12-memory-ips","text":"\u200b \u521d\u8d5b\u90e8\u5206\u63d0\u4f9b\u7684\u6d4b\u8bd5\u6846\u67b6\u4e2d\u5305\u542b\u4e86Memory IPs\u4e2d\u5c55\u793a\u7684\u6240\u6709IP\u53ca\u6a21\u5757\uff0c\u5177\u4f53\u4ecb\u7ecd\u8be6\u89c1\u53d1\u5e03\u5305\u6587\u6863A11_Trace\u6bd4\u5bf9\u673a\u5236\u4f7f\u7528\u8bf4\u660e_v1.00.pdf\u3002","title":"1.2 Memory IPs\u89e3\u91ca"},{"location":"competition/Soc%E6%A1%86%E6%9E%B6%E8%AE%BE%E8%AE%A1/#2-soc","text":"\u200b \u5728\u672c\u90e8\u5206\u7684\u8bbe\u8ba1\u4fa7\u91cd\u70b9\u4e3b\u8981\u96c6\u4e2d\u5728\u7cfb\u7edf\u542f\u52a8\u548c\u5916\u8bbe\u63a5\u5165\u65b9\u9762\uff0c\u65e8\u5728\u5145\u5206\u5229\u7528\u5f00\u53d1\u677f\u4e0a\u6240\u6709\u8d44\u6e90\uff0c\u67b6\u6784\u5982\u4e0b\u56fe\u3002","title":"2. \u51b3\u8d5bSoc\u67b6\u6784"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/","text":"\u5916\u8bbe\u90e8\u5206\u8bbe\u8ba1 \u00b6 2021/8/11 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u5916\u8bbe\u7684\u5177\u4f53\u8bbe\u8ba1 1. \u6982\u8ff0 \u00b6 \u5173\u4e8e\u5916\u8bbe\u90e8\u5206\u8bbe\u8ba1\uff0c\u5b9e\u9645\u6d89\u53ca\u5230\u6574\u4e2aSoc\u7684\u67b6\u6784\u3001\u4e0d\u540c\u6a21\u5757\u7684\u5c01\u88c5\u4ee5\u53ca\u591a\u4e2aIP\u6838\u7684\u8c03\u7528\u3002\u5176\u4e2d\u4e3b\u8981\u4f7f\u7528\u7684\u529f\u80fd\u4e3aVivado\u7684IP INTEGRATOR\u4e2d\u7684Block Design\uff08\u7b80\u79f0bd\uff09\u529f\u80fd\uff0c\u4ee5\u5b9e\u73b0\u8fd1\u4e4enocode\u7684\u5f00\u53d1\u6a21\u5f0f\u3002 2. \u5177\u4f53\u6b65\u9aa4 \u00b6 2.1 \u5c01\u88c5cpu \u00b6 \u200b \u9996\u5148\u9700\u8981\u5c06CPU\u4e0e\u4e24\u4e2aCache\u6574\u4f53\u5c01\u88c5\u4e3a\u5bf9\u5916\u4e3aAXI4 \u63a5\u53e3\u7684\u4e00\u4e2aIP\u6838\uff0c \u200b \u5177\u4f53\u5c01\u88c5\u6b65\u9aa4\u89c1\u53c2\u8003\u8d44\u6599\u7b2c\u4e00\u6761\u89c6\u9891\u76f8\u5173\u5185\u5bb9\uff08\u4ece\u7b2c24min\u8d77\u4e3a\u6709\u7528\u5185\u5bb9\uff0c53min\u8d77\u7684gpioled\u6a21\u5757\u5199\u6cd5\u53ef\u4ee5\u8df3\u8fc7\uff0c\u76f4\u52301h07min\u4e4b\u540e\u662f\u5c01\u88c5\u7684\u5177\u4f53\u64cd\u4f5c\uff0c1h27min\u4e4b\u540e\u57fa\u672c\u65e0\u91cd\u8981\u5185\u5bb9\uff09\u3002 \u200b \u4f7f\u7528create block design\uff0c\u5728tools\u4e2d\u9009\u62e9create and package new ip \u9009\u62e9\u9700\u8981\u5c01\u88c5\u7684\u5185\u5bb9\uff08packaging options\uff0c\u5efa\u8bae\u9009\u62e9\u7b2c\u4e09\u9879\uff0c\u5c01\u88c5\u65f6\u6ce8\u610f\uff0cbd\u529f\u80fd\u4e0d\u652f\u6301\u5c06systemverilog\u6587\u4ef6\u5c01\u88c5\uff0c\u9700\u8981\u628acpu_top\u5305\u88c5\u4e3averilog\u7684.v\u6587\u4ef6\uff09\uff0c\u6b64\u65f6\u4f1a\u6253\u5f00\u65b0\u9875\u9762edit_ip\uff0c\u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u5c01\u88c5\uff08ILA\u5c01\u88c5\u53ef\u9009\uff09\u3002\u5728\u6bcf\u6b21\u4fee\u6539\u4e86IP\u6838\u7684\u6e90\u7801\u4e4b\u540e\u9700\u8981\u66f4\u65b0Package IP\u4e2d\u7684\u66f4\u65b0\u9009\u9879\u3002\u6b64\u65f6\u56de\u5230bd\u754c\u9762\u5c31\u53ef\u4ee5\u53f3\u952eadd IP\uff0c\u4e4b\u540e\u53ef\u4ee5\u6109\u5feb\u5212\u7ebf\u8fde\u63a5\u7aef\u53e3\u4e86[doge]\ud83d\ude05\u3002 \u200b \u9700\u8981\u7ed9bd\u6a21\u5757\u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u6587\u4ef6\uff0c\u624d\u53ef\u4ee5\u8fdb\u884c\u540e\u7eed\u76f8\u5e94\u7684\u5f15\u811a\u7ed1\u5b9a\u3002\u53f3\u952e.bd\u6587\u4ef6\uff0c\u9009\u62e9Create HDL Wrapper\uff0c\u9ed8\u8ba4\u9009\u62e9ok\uff0c\u4e4b\u540e\u521b\u5efa\u7ea6\u675f\u6587\u4ef6\uff08\u5728Constraints/constrs\u76ee\u5f55\u4e0b\u53f3\u952eAdd Sources\uff0c\u521b\u5efa\u6587\u4ef6.xdc\uff0c\u5982\u679c\u4e0d\u61c2xdc\u8bed\u6cd5\uff0c\u53ef\u4ee5\u518dPROJECT MANAGER \u4e0b\u7684Language Template\u4e2d\u9884\u89c8XDC\u6587\u4ef6\u7684\u4e00\u4e9b\u7ea6\u675f\u5199\u6cd5\uff0c\u914d\u7f6eiopins\uff09\uff0c\u6216\u8005\u53ef\u4ee5nocode\u8d2f\u5f7b\u5230\u5e95\uff0c\u8dd1\u8fc7\u7efc\u5408\u4e4b\u540eopen synthesized Design \u70b9\u51fbI/O ports\u914d\u7f6e\u5f15\u811a\u7ea6\u675f\u8fde\u63a5\u5176\u4ed6\u6a21\u5757\uff08\u4f8b\u5982\u5c01\u88c5\u597d\u7684\u5916\u8bbeIP\u6838\u6216\u8005AXI Interconnect\u6a21\u5757\u7b49\uff09\u3002 2.2 \u91cd\u65b0\u8bbe\u8ba1Soc\u67b6\u6784 \u00b6 //TODO : \u5728\u5c01\u88c5\u597dcpu\u4e4b\u540e\u8003\u8651\u66b4\u9732\u7684\u7aef\u53e3\u4ee5\u53ca\u662f\u5426\u4f7f\u7528JTAG\u4fbf\u4e8e\u8c03\u8bd5\u6765\u91cd\u65b0\u4fee\u6539cpu\uff0cJTAG\uff0cAXI Interconnect\uff0cMems\u4ee5\u53ca\u5916\u8bbe\u4e4b\u95f4\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u91cd\u65b0\u8bbe\u8ba1\u67b6\u6784\u3002 2.3 \u5b9a\u5236\u5916\u8bbe \u00b6 \u200b \u5b9a\u5236\u5916\u8bbe\u7684\u91cd\u70b9\u4efb\u52a1\u5728\u4e8e\u5bf9\u6bcf\u4e2a\u9700\u8981\u7684\u5916\u8bbe\u914d\u7f6e\u4e00\u4e2acontroller\u4ee5\u8fde\u63a5\u5916\u8bbe\u672c\u8eab\u548c\u6574\u4e2aSoc\u8fdb\u884c\u901a\u4fe1\uff0c\u5728\u5b8c\u6210\u54cd\u5e94\u914d\u7f6e\uff0c\u5c01\u88c5\u4e3a\u76f8\u5e94\u7684IP\u6838\u5e76\u6dfb\u52a0\uff0c\u589e\u52a0\u5f15\u811a\u914d\u7f6e\u4e4b\u540e\uff0c\u9700\u8981\u5728block design\u754c\u9762\u7684\u54cd\u5e94\u6a21\u5757\u7684\u8fde\u7ebf\u5904\u53f3\u952e\u70b9\u51fbmake external\u5b8c\u6210\u548c\u5916\u8bbe\u771f\u6b63\u7684\u8fde\u63a5\u3002 \u200b \u4e0b\u9762\u5bf9\u4e8e\u53ef\u4ee5\u9009\u914d\u7684\u5916\u8bbe\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5efa\u8bae\u6839\u636e\u96be\u6613\u7a0b\u5ea6\u8fdb\u884c\u9009\u62e9\u6027\u5b9e\u73b0\u3002 2.3.1 \u4e32\u53e3\u63a7\u5236\u5668 \u00b6 \u200b \u677f\u8f7d\u4e32\u53e3\u4e3aRS-232\u63a5\u53e3\uff0c\u5df2\u7ecf\u5b9e\u73b0\u57fa\u672c\u7684\u4e32\u53e3\u901a\u4fe1\u529f\u80fd\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7AXI UART 16550 IP\u5b9e\u73b0\u6807\u51c6\u7684NS16550 UART\u63a7\u5236\u5668\uff0c\u4ee5\u652f\u6301\u8f83\u4e3a\u5b8c\u6574\u7684\u4e32\u53e3\u534f\u8bae\u3002\u5b9e\u73b0\u62ec\u53ef\u53d8\u6ce2\u7279\u7387\u3001\u6d41\u91cf\u63a7\u5236 \u548c\u8bfb\u5199\u7f13\u51b2\u533a\u3002 \u200b \u5728\u8f6f\u4ef6\u4f7f\u7528\u4e32\u53e3\u524d\uff0c\u9700\u8981\u9996\u5148\u5bf9\u591a\u4e2a\u914d\u7f6e\u5bc4\u5b58\u5668\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u914d\u7f6e\u6ce2\u7279\u7387\u3001 \u4e2d\u65ad\u7b49\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u65b9\u53ef\u6b63\u5e38\u4e0e PC \u8fdb\u884c\u901a\u4fe1\u3002 \u200b \u4e32\u53e3\u63a7\u5236\u5668\u6709\u4e00\u4e2a\u4e2d\u65ad\uff0c\u6307\u793a\u6536\u5230\u4e86\u6570\u636e\uff0c \u6e05\u534e\u8bbe\u8ba1\u4e2d\u88ab\u76f4\u63a5\u8fde\u63a5\u5230 CPU \u7684\u7b2c\u4e00\u4e2a\u786c\u4ef6\u4e2d\u65ad\u4e0a\u3002 2.3.2 USB\u63a7\u5236\u5668\uff08\u96be\u5ea6\u8f83\u5927\uff09 \u00b6 \u200b \u677f\u8f7dUSB\u63a5\u53e3\u4e3aMicrochip USB 3500\uff0c\u63d0\u4f9b\u7684\u662fUTMI+ Level3.0\u63a5\u53e3\uff0c\u4ec5\u5b9e\u73b0\u4e86\u7269\u7406\u5c42\u7684\u6536\u53d1\u903b\u8f91\u3002\u81f3\u4e8e\u5177\u4f53\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\u8fd8\u8981\u6839\u636e\u540e\u7eed\u7684\u5b9e\u9645\u529f\u80fd\u8fdb\u884c\u8bbe\u8ba1\u3002 2.3.3 \u4ee5\u592a\u7f51\u63a7\u5236\u5668 \u00b6 \u200b \u53ef\u4ee5\u901a\u8fc7AXI Ethernet Lite IP\u5b9e\u73b0\u8be5\u63a7\u5236\u5668\u3002 2.3.4 Flash\u63a7\u5236\u5668 \u00b6 \u200b \u677f\u8f7d\u4e24\u5757SPI NOR Flash\u82af\u7247\uff0c\u5176\u4e2d\u4e00\u5757\u4e3aCFG Flash\uff0c\u56fa\u5316\u8fde\u63a5\u81f3FPGA\u914d\u7f6e\u4e13\u7528\u786c\u4ef6\u903b\u8f91\uff0c\u53e6\u4e00\u7247\u4e3aSPI Flash\uff0c\u662f\u53ef\u63d2\u62d4\u666e\u901aSPI I/O\u5f15\u811a\uff0c\u5747\u53ef\u901a\u8fc7AXI Quad SPI IP\u8fdb\u884c\u63a7\u5236\u3002 \u200b \u5bf9\u4e8eCFG Flash\uff0c\u4e3b\u8981\u4f5c\u7528\u4e3a\u5b58\u50a8bitstream\uff0c\u6b64\u5916\u8fd8\u6709\u4f59\u91cf\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8U-Boot\u548cLinux Kernal\u7684ELF\u683c\u5f0f\u6587\u4ef6\u7528\u4e8e\u7cfb\u7edf\u542f\u52a8\uff0c\u5177\u4f53\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u542f\u52a8POMN\u65f6\u7684\u4e32\u53e3\u4e0b\u8f7d\u65b9\u5f0f\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0c\u901a\u8fc7 IP \u7684 XIP\uff08Execute In Place\uff09\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6620\u5c04\u4e3a\u4e00\u5757\u53ea\u8bfb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u52a0\u8f7dU-Boot \u4e5f\u80fd\u52a0\u8f7d Linux \u5185\u6838\u3002 \u200b \u5bf9\u4e8eSPI Flash\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u666e\u901a\u5b58\u50a8\uff0c XIP \u7684\u53ea\u8bfb\u6a21\u5f0f\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u3002\u6211\u4eec\u5c06\u5176\u66b4\u9732\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 SPI \u63a7\u5236\u5668\uff0c\u7531\u8f6f\u4ef6\u6765\u8fdb\u884c\u76f8\u5e94\u7684\u7ba1\u7406\u3002\u9700\u8981\u80fd\u591f\u5b9e\u73b0\u5bf9Flash\u7684\u64e6\u9664\u3001\u8bfb\u53d6\u548c\u5199\u5165\u7b49\u64cd\u4f5c\u3002\u540c\u65f6\u4e3a\u63d0\u9ad8IO\u6548\u7387\uff0c\u9700\u8981\u5b9e\u73b0\u4e2d\u65ad\u3002 2.3.5 LCD\u63a7\u5236\u5668\uff0cVGA\u63a7\u5236\u5668\uff08\u5b8c\u5168\u65e0\u601d\u8def\uff0c\u5efa\u8bae\u4e0d\u5b9e\u73b0\uff09 \u00b6 2.3.6 PS/2\u63a7\u5236\u5668 \u00b6 \u200b \u5b9e\u9a8c\u677f\u8f7d\u4e00\u4e2a PS/2 \u7269\u7406\u63a5\u53e3\uff0c\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u8f83\u8001\u7684\u9f20\u6807/\u952e\u76d8\u7b49\u8bbe\u5907\u3002\u6211\u4eec\u4f7f\u7528 Altera \u63d0\u4f9b\u7684 University Program PS/2 IP \u5bf9\u5176\u8fdb\u884c\u63a7\u5236\uff0c\u5728 Linux \u4e2d\u4e5f\u6709\u5bf9\u5e94\u7684\u9a71\u52a8\u652f\u6301\u3002\u7531 \u4e8e\u5176\u4e3a APB \u603b\u7ebf\uff0c\u540c\u6837\u9700\u8981 Bridge \u8fdb\u884c\u8f6c\u6362\uff1b\u5b83\u7684\u4e2d\u65ad\u4fe1\u53f7\u88ab\u76f4\u63a5\u8fde\u63a5\u5230 CPU \u7684 3 \u53f7 \u4e2d\u65ad\u5f15\u811a\u3002 \u200b \u5177\u4f53\u5b9e\u73b0\u9700\u8981\u627e\u5230\u8be5IP\u6838\u3002\u6216\u8005\u53c2\u8003https://blog.csdn.net/qimoDIY/article/details/99711354\u535a\u6587\u5185\u5bb9\u3002 2.3.7 GPIO\u63a7\u5236\u5668 \u00b6 \u200b \u9f99\u82af\u63d0\u4f9b\u4e86confreg\u6a21\u5757\uff0c\u5df2\u7ecf\u8f83\u597d\u5730\u5b9e\u73b0\u4e86\u5bf9GPIO\u5f15\u811a\u7684\u63a7\u5236\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u4f46\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u53c2\u6570\u3002 2.4 \u5730\u5740\u5206\u914d\u53ca\u4e2d\u65ad\u8fde\u63a5 \u00b6 \u200b \u5904\u7406\u5730\u5740\u6620\u5c04\u53ef\u4ee5\u901a\u8fc7vivado\u4e2dwindow/address editor\u5de5\u5177\u6765\u5b9e\u73b0\uff0c\u5177\u4f53\u914d\u7f6e\u53ef\u53c2\u8003\u4e0b\u56fe\u3002 \u200b \u4e2d\u65ad\u5904\u7406\u5177\u4f53\u53c2\u8003\u6e05\u534eNonTrivalMIPS\u62a5\u544a3.1.3\u5185\u5bb9\u3002 3.\u53c2\u8003\u8d44\u6599 \u00b6 https://www.bilibili.com/video/BV1u4411P7pL\u89c6\u989124min\u5f00\u59cb \u6e05\u534e\u5927\u5b66NonTrivalMIPS\u8d44\u6599\u53ca\u6e90\u4ee3\u7801 https://blog.csdn.net/qq_33231534/article/details/105364361\u7cfb\u5217\u535a\u6587","title":"\u5916\u8bbe\u8bbe\u8ba1"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#_1","text":"2021/8/11 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u5916\u8bbe\u7684\u5177\u4f53\u8bbe\u8ba1","title":"\u5916\u8bbe\u90e8\u5206\u8bbe\u8ba1"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#1","text":"\u5173\u4e8e\u5916\u8bbe\u90e8\u5206\u8bbe\u8ba1\uff0c\u5b9e\u9645\u6d89\u53ca\u5230\u6574\u4e2aSoc\u7684\u67b6\u6784\u3001\u4e0d\u540c\u6a21\u5757\u7684\u5c01\u88c5\u4ee5\u53ca\u591a\u4e2aIP\u6838\u7684\u8c03\u7528\u3002\u5176\u4e2d\u4e3b\u8981\u4f7f\u7528\u7684\u529f\u80fd\u4e3aVivado\u7684IP INTEGRATOR\u4e2d\u7684Block Design\uff08\u7b80\u79f0bd\uff09\u529f\u80fd\uff0c\u4ee5\u5b9e\u73b0\u8fd1\u4e4enocode\u7684\u5f00\u53d1\u6a21\u5f0f\u3002","title":"1. \u6982\u8ff0"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#2","text":"","title":"2. \u5177\u4f53\u6b65\u9aa4"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#21-cpu","text":"\u200b \u9996\u5148\u9700\u8981\u5c06CPU\u4e0e\u4e24\u4e2aCache\u6574\u4f53\u5c01\u88c5\u4e3a\u5bf9\u5916\u4e3aAXI4 \u63a5\u53e3\u7684\u4e00\u4e2aIP\u6838\uff0c \u200b \u5177\u4f53\u5c01\u88c5\u6b65\u9aa4\u89c1\u53c2\u8003\u8d44\u6599\u7b2c\u4e00\u6761\u89c6\u9891\u76f8\u5173\u5185\u5bb9\uff08\u4ece\u7b2c24min\u8d77\u4e3a\u6709\u7528\u5185\u5bb9\uff0c53min\u8d77\u7684gpioled\u6a21\u5757\u5199\u6cd5\u53ef\u4ee5\u8df3\u8fc7\uff0c\u76f4\u52301h07min\u4e4b\u540e\u662f\u5c01\u88c5\u7684\u5177\u4f53\u64cd\u4f5c\uff0c1h27min\u4e4b\u540e\u57fa\u672c\u65e0\u91cd\u8981\u5185\u5bb9\uff09\u3002 \u200b \u4f7f\u7528create block design\uff0c\u5728tools\u4e2d\u9009\u62e9create and package new ip \u9009\u62e9\u9700\u8981\u5c01\u88c5\u7684\u5185\u5bb9\uff08packaging options\uff0c\u5efa\u8bae\u9009\u62e9\u7b2c\u4e09\u9879\uff0c\u5c01\u88c5\u65f6\u6ce8\u610f\uff0cbd\u529f\u80fd\u4e0d\u652f\u6301\u5c06systemverilog\u6587\u4ef6\u5c01\u88c5\uff0c\u9700\u8981\u628acpu_top\u5305\u88c5\u4e3averilog\u7684.v\u6587\u4ef6\uff09\uff0c\u6b64\u65f6\u4f1a\u6253\u5f00\u65b0\u9875\u9762edit_ip\uff0c\u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u5c01\u88c5\uff08ILA\u5c01\u88c5\u53ef\u9009\uff09\u3002\u5728\u6bcf\u6b21\u4fee\u6539\u4e86IP\u6838\u7684\u6e90\u7801\u4e4b\u540e\u9700\u8981\u66f4\u65b0Package IP\u4e2d\u7684\u66f4\u65b0\u9009\u9879\u3002\u6b64\u65f6\u56de\u5230bd\u754c\u9762\u5c31\u53ef\u4ee5\u53f3\u952eadd IP\uff0c\u4e4b\u540e\u53ef\u4ee5\u6109\u5feb\u5212\u7ebf\u8fde\u63a5\u7aef\u53e3\u4e86[doge]\ud83d\ude05\u3002 \u200b \u9700\u8981\u7ed9bd\u6a21\u5757\u521b\u5efa\u4e00\u4e2a\u9876\u5c42\u6587\u4ef6\uff0c\u624d\u53ef\u4ee5\u8fdb\u884c\u540e\u7eed\u76f8\u5e94\u7684\u5f15\u811a\u7ed1\u5b9a\u3002\u53f3\u952e.bd\u6587\u4ef6\uff0c\u9009\u62e9Create HDL Wrapper\uff0c\u9ed8\u8ba4\u9009\u62e9ok\uff0c\u4e4b\u540e\u521b\u5efa\u7ea6\u675f\u6587\u4ef6\uff08\u5728Constraints/constrs\u76ee\u5f55\u4e0b\u53f3\u952eAdd Sources\uff0c\u521b\u5efa\u6587\u4ef6.xdc\uff0c\u5982\u679c\u4e0d\u61c2xdc\u8bed\u6cd5\uff0c\u53ef\u4ee5\u518dPROJECT MANAGER \u4e0b\u7684Language Template\u4e2d\u9884\u89c8XDC\u6587\u4ef6\u7684\u4e00\u4e9b\u7ea6\u675f\u5199\u6cd5\uff0c\u914d\u7f6eiopins\uff09\uff0c\u6216\u8005\u53ef\u4ee5nocode\u8d2f\u5f7b\u5230\u5e95\uff0c\u8dd1\u8fc7\u7efc\u5408\u4e4b\u540eopen synthesized Design \u70b9\u51fbI/O ports\u914d\u7f6e\u5f15\u811a\u7ea6\u675f\u8fde\u63a5\u5176\u4ed6\u6a21\u5757\uff08\u4f8b\u5982\u5c01\u88c5\u597d\u7684\u5916\u8bbeIP\u6838\u6216\u8005AXI Interconnect\u6a21\u5757\u7b49\uff09\u3002","title":"2.1 \u5c01\u88c5cpu"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#22-soc","text":"//TODO : \u5728\u5c01\u88c5\u597dcpu\u4e4b\u540e\u8003\u8651\u66b4\u9732\u7684\u7aef\u53e3\u4ee5\u53ca\u662f\u5426\u4f7f\u7528JTAG\u4fbf\u4e8e\u8c03\u8bd5\u6765\u91cd\u65b0\u4fee\u6539cpu\uff0cJTAG\uff0cAXI Interconnect\uff0cMems\u4ee5\u53ca\u5916\u8bbe\u4e4b\u95f4\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u91cd\u65b0\u8bbe\u8ba1\u67b6\u6784\u3002","title":"2.2 \u91cd\u65b0\u8bbe\u8ba1Soc\u67b6\u6784"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#23","text":"\u200b \u5b9a\u5236\u5916\u8bbe\u7684\u91cd\u70b9\u4efb\u52a1\u5728\u4e8e\u5bf9\u6bcf\u4e2a\u9700\u8981\u7684\u5916\u8bbe\u914d\u7f6e\u4e00\u4e2acontroller\u4ee5\u8fde\u63a5\u5916\u8bbe\u672c\u8eab\u548c\u6574\u4e2aSoc\u8fdb\u884c\u901a\u4fe1\uff0c\u5728\u5b8c\u6210\u54cd\u5e94\u914d\u7f6e\uff0c\u5c01\u88c5\u4e3a\u76f8\u5e94\u7684IP\u6838\u5e76\u6dfb\u52a0\uff0c\u589e\u52a0\u5f15\u811a\u914d\u7f6e\u4e4b\u540e\uff0c\u9700\u8981\u5728block design\u754c\u9762\u7684\u54cd\u5e94\u6a21\u5757\u7684\u8fde\u7ebf\u5904\u53f3\u952e\u70b9\u51fbmake external\u5b8c\u6210\u548c\u5916\u8bbe\u771f\u6b63\u7684\u8fde\u63a5\u3002 \u200b \u4e0b\u9762\u5bf9\u4e8e\u53ef\u4ee5\u9009\u914d\u7684\u5916\u8bbe\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5efa\u8bae\u6839\u636e\u96be\u6613\u7a0b\u5ea6\u8fdb\u884c\u9009\u62e9\u6027\u5b9e\u73b0\u3002","title":"2.3 \u5b9a\u5236\u5916\u8bbe"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#231","text":"\u200b \u677f\u8f7d\u4e32\u53e3\u4e3aRS-232\u63a5\u53e3\uff0c\u5df2\u7ecf\u5b9e\u73b0\u57fa\u672c\u7684\u4e32\u53e3\u901a\u4fe1\u529f\u80fd\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7AXI UART 16550 IP\u5b9e\u73b0\u6807\u51c6\u7684NS16550 UART\u63a7\u5236\u5668\uff0c\u4ee5\u652f\u6301\u8f83\u4e3a\u5b8c\u6574\u7684\u4e32\u53e3\u534f\u8bae\u3002\u5b9e\u73b0\u62ec\u53ef\u53d8\u6ce2\u7279\u7387\u3001\u6d41\u91cf\u63a7\u5236 \u548c\u8bfb\u5199\u7f13\u51b2\u533a\u3002 \u200b \u5728\u8f6f\u4ef6\u4f7f\u7528\u4e32\u53e3\u524d\uff0c\u9700\u8981\u9996\u5148\u5bf9\u591a\u4e2a\u914d\u7f6e\u5bc4\u5b58\u5668\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u914d\u7f6e\u6ce2\u7279\u7387\u3001 \u4e2d\u65ad\u7b49\u4e0d\u540c\u7684\u5c5e\u6027\uff0c\u65b9\u53ef\u6b63\u5e38\u4e0e PC \u8fdb\u884c\u901a\u4fe1\u3002 \u200b \u4e32\u53e3\u63a7\u5236\u5668\u6709\u4e00\u4e2a\u4e2d\u65ad\uff0c\u6307\u793a\u6536\u5230\u4e86\u6570\u636e\uff0c \u6e05\u534e\u8bbe\u8ba1\u4e2d\u88ab\u76f4\u63a5\u8fde\u63a5\u5230 CPU \u7684\u7b2c\u4e00\u4e2a\u786c\u4ef6\u4e2d\u65ad\u4e0a\u3002","title":"2.3.1 \u4e32\u53e3\u63a7\u5236\u5668"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#232-usb","text":"\u200b \u677f\u8f7dUSB\u63a5\u53e3\u4e3aMicrochip USB 3500\uff0c\u63d0\u4f9b\u7684\u662fUTMI+ Level3.0\u63a5\u53e3\uff0c\u4ec5\u5b9e\u73b0\u4e86\u7269\u7406\u5c42\u7684\u6536\u53d1\u903b\u8f91\u3002\u81f3\u4e8e\u5177\u4f53\u63a7\u5236\u5668\u7684\u8bbe\u8ba1\u8fd8\u8981\u6839\u636e\u540e\u7eed\u7684\u5b9e\u9645\u529f\u80fd\u8fdb\u884c\u8bbe\u8ba1\u3002","title":"2.3.2 USB\u63a7\u5236\u5668\uff08\u96be\u5ea6\u8f83\u5927\uff09"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#233","text":"\u200b \u53ef\u4ee5\u901a\u8fc7AXI Ethernet Lite IP\u5b9e\u73b0\u8be5\u63a7\u5236\u5668\u3002","title":"2.3.3 \u4ee5\u592a\u7f51\u63a7\u5236\u5668"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#234-flash","text":"\u200b \u677f\u8f7d\u4e24\u5757SPI NOR Flash\u82af\u7247\uff0c\u5176\u4e2d\u4e00\u5757\u4e3aCFG Flash\uff0c\u56fa\u5316\u8fde\u63a5\u81f3FPGA\u914d\u7f6e\u4e13\u7528\u786c\u4ef6\u903b\u8f91\uff0c\u53e6\u4e00\u7247\u4e3aSPI Flash\uff0c\u662f\u53ef\u63d2\u62d4\u666e\u901aSPI I/O\u5f15\u811a\uff0c\u5747\u53ef\u901a\u8fc7AXI Quad SPI IP\u8fdb\u884c\u63a7\u5236\u3002 \u200b \u5bf9\u4e8eCFG Flash\uff0c\u4e3b\u8981\u4f5c\u7528\u4e3a\u5b58\u50a8bitstream\uff0c\u6b64\u5916\u8fd8\u6709\u4f59\u91cf\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8U-Boot\u548cLinux Kernal\u7684ELF\u683c\u5f0f\u6587\u4ef6\u7528\u4e8e\u7cfb\u7edf\u542f\u52a8\uff0c\u5177\u4f53\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u542f\u52a8POMN\u65f6\u7684\u4e32\u53e3\u4e0b\u8f7d\u65b9\u5f0f\u3002\u4e3a\u65b9\u4fbf\u4f7f\u7528\uff0c\u901a\u8fc7 IP \u7684 XIP\uff08Execute In Place\uff09\u7279\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u6620\u5c04\u4e3a\u4e00\u5757\u53ea\u8bfb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u52a0\u8f7dU-Boot \u4e5f\u80fd\u52a0\u8f7d Linux \u5185\u6838\u3002 \u200b \u5bf9\u4e8eSPI Flash\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u666e\u901a\u5b58\u50a8\uff0c XIP \u7684\u53ea\u8bfb\u6a21\u5f0f\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u3002\u6211\u4eec\u5c06\u5176\u66b4\u9732\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 SPI \u63a7\u5236\u5668\uff0c\u7531\u8f6f\u4ef6\u6765\u8fdb\u884c\u76f8\u5e94\u7684\u7ba1\u7406\u3002\u9700\u8981\u80fd\u591f\u5b9e\u73b0\u5bf9Flash\u7684\u64e6\u9664\u3001\u8bfb\u53d6\u548c\u5199\u5165\u7b49\u64cd\u4f5c\u3002\u540c\u65f6\u4e3a\u63d0\u9ad8IO\u6548\u7387\uff0c\u9700\u8981\u5b9e\u73b0\u4e2d\u65ad\u3002","title":"2.3.4  Flash\u63a7\u5236\u5668"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#235-lcdvga","text":"","title":"2.3.5 LCD\u63a7\u5236\u5668\uff0cVGA\u63a7\u5236\u5668\uff08\u5b8c\u5168\u65e0\u601d\u8def\uff0c\u5efa\u8bae\u4e0d\u5b9e\u73b0\uff09"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#236-ps2","text":"\u200b \u5b9e\u9a8c\u677f\u8f7d\u4e00\u4e2a PS/2 \u7269\u7406\u63a5\u53e3\uff0c\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u8f83\u8001\u7684\u9f20\u6807/\u952e\u76d8\u7b49\u8bbe\u5907\u3002\u6211\u4eec\u4f7f\u7528 Altera \u63d0\u4f9b\u7684 University Program PS/2 IP \u5bf9\u5176\u8fdb\u884c\u63a7\u5236\uff0c\u5728 Linux \u4e2d\u4e5f\u6709\u5bf9\u5e94\u7684\u9a71\u52a8\u652f\u6301\u3002\u7531 \u4e8e\u5176\u4e3a APB \u603b\u7ebf\uff0c\u540c\u6837\u9700\u8981 Bridge \u8fdb\u884c\u8f6c\u6362\uff1b\u5b83\u7684\u4e2d\u65ad\u4fe1\u53f7\u88ab\u76f4\u63a5\u8fde\u63a5\u5230 CPU \u7684 3 \u53f7 \u4e2d\u65ad\u5f15\u811a\u3002 \u200b \u5177\u4f53\u5b9e\u73b0\u9700\u8981\u627e\u5230\u8be5IP\u6838\u3002\u6216\u8005\u53c2\u8003https://blog.csdn.net/qimoDIY/article/details/99711354\u535a\u6587\u5185\u5bb9\u3002","title":"2.3.6 PS/2\u63a7\u5236\u5668"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#237-gpio","text":"\u200b \u9f99\u82af\u63d0\u4f9b\u4e86confreg\u6a21\u5757\uff0c\u5df2\u7ecf\u8f83\u597d\u5730\u5b9e\u73b0\u4e86\u5bf9GPIO\u5f15\u811a\u7684\u63a7\u5236\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u4f46\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u53c2\u6570\u3002","title":"2.3.7 GPIO\u63a7\u5236\u5668"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#24","text":"\u200b \u5904\u7406\u5730\u5740\u6620\u5c04\u53ef\u4ee5\u901a\u8fc7vivado\u4e2dwindow/address editor\u5de5\u5177\u6765\u5b9e\u73b0\uff0c\u5177\u4f53\u914d\u7f6e\u53ef\u53c2\u8003\u4e0b\u56fe\u3002 \u200b \u4e2d\u65ad\u5904\u7406\u5177\u4f53\u53c2\u8003\u6e05\u534eNonTrivalMIPS\u62a5\u544a3.1.3\u5185\u5bb9\u3002","title":"2.4 \u5730\u5740\u5206\u914d\u53ca\u4e2d\u65ad\u8fde\u63a5"},{"location":"competition/%E5%A4%96%E8%AE%BE%E9%83%A8%E5%88%86%E8%AE%BE%E8%AE%A1/#3","text":"https://www.bilibili.com/video/BV1u4411P7pL\u89c6\u989124min\u5f00\u59cb \u6e05\u534e\u5927\u5b66NonTrivalMIPS\u8d44\u6599\u53ca\u6e90\u4ee3\u7801 https://blog.csdn.net/qq_33231534/article/details/105364361\u7cfb\u5217\u535a\u6587","title":"3.\u53c2\u8003\u8d44\u6599"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/","text":"\u53c2\u8003\u4e66\u7c4d\uff1a \u8d85\u6807\u91cf\u5904\u7406\u5668 \u7b2c\u4e00\u7ae0 \u00b6 1.3.1\u987a\u5e8f\u6267\u884c \u00b6 \u5982\u679c\u5c06\u53d1\u5c04\u7684\u8fc7\u7a0b\u653e\u5230\u6307\u4ee4\u7684\u89e3\u7801\u9636\u6bb5\uff0c\u4f1a\u4e25\u91cd\u5f71\u54cd\u5904\u7406\u5668\u7684\u5468\u671f\u65f6\u95f4\uff0c\u56e0\u6b64\u5c06\u53d1\u5c04\u7684\u8fc7\u7a0b\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u6d41\u6c34\u6bb5 \u56e0\u4e3a\u8981\u4fdd\u8bc1\u6d41\u6c34\u7ebf\u7684\u5199\u56de\u9636\u6bb5\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684 FU \u90fd\u9700\u8981\u7ecf\u5386\u540c\u6837\u5468\u671f\u6570\u7684\u6d41\u6c34\u7ebf ScoreBoard \uff1a\u8bb0\u5f55\u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u60c5\u51b5\uff08\u8be6\u89c1P23\uff09 \u6bcf\u6761\u6307\u4ee4\u90fd\u53ef\u4ee5\u4ece\u65c1\u8def\u7f51\u7edc\uff08bypassing network\uff09\u83b7\u5f97\u64cd\u4f5c\u6570\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u6e90\u5bc4\u5b58\u5668\u5199\u56de \u7b2c\u4e8c\u7ae0 \u00b6 2.1 Cache\u7684\u4e00\u822c\u8bbe\u8ba1 \u00b6 \u4f8b\u5982TLB\u548cVictim Cache\u591a\u91c7\u7528\u5168\u76f8\u8054\u7ed3\u6784\uff0c\u800c\u666e\u901a\u7684I-cache\u548cD-cache\u5219\u91c7\u7528\u7ec4\u76f8\u8054\u7ed3\u6784 \u5f3a\u5236\u7f3a\u5931\uff1a\u9884\u53d6\uff08prefetching\uff09 \u51b2\u7a81\u7f3a\u5931\uff1a\u53ef\u4ee5\u7528Victim Cache\u6765\u7f13\u89e3 2.1.1 Cache\u7684\u7ec4\u6210\u65b9\u5f0f \u00b6 \u7ec4\u76f8\u8fde\uff1a\u56e0\u4e3a\u9700\u8981\u4ece\u591a\u4e2aCache line\u4e2d\u9009\u62e9\u4e00\u4e2a\u5339\u914d\u7684\u7ed3\u679c\uff0c\u5ef6\u8fdf\u4f1a\u589e\u5927\uff0c\u751a\u81f3\u53ef\u80fd\u9700\u8981\u6d41\u6c34\u7ebf\uff0c\u4f46\u662f\u5176\u663e\u8457\u5730\u589e\u52a0\u4e86Cache\u547d\u4e2d\uff0c\u6240\u4ee5\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528 Cache\u7684\u8bbf\u95ee\u4e00\u822c\u4f1a\u6bd4\u8f83\u6162\uff0c\u60f3\u63d0\u9ad8\u9891\u7387\uff0cCache\u7684\u8bbf\u95ee\u5c31\u9700\u8981\u4f7f\u7528\u6d41\u6c34\u7ebf\uff0c\u5bf9\u4e8e\u6307\u4ee4cache\u5f71\u54cd\u4e0d\u5927\uff0c\u4f46\u662f\u5bf9\u4e8e\u6570\u636ecache\u4f1a\u589e\u5927load\u6307\u4ee4\u7684\u5ef6\u8fdf\u3002 \u8bbf\u95ee\u65b9\u5f0f\uff1a \u4e32\u884c\uff1a\u5bf9\u4e8e\u8d85\u6807\u91cf\u5904\u7406\u5668\u6765\u8bf4\uff0c\u7531\u4e8e\u53ef\u4ee5\u8c03\u5ea6\u5176\u4ed6\u6307\u4ee4\uff0c\u6240\u4ee5\u5c31\u7b97\u4e32\u884c\u65b9\u5f0f\u589e\u52a0\u4e00\u4e2acache\u9636\u6bb5\u7684\u65f6\u949f\u5468\u671f\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u5f15\u8d77\u6027\u80fd\u7684\u660e\u663e\u964d\u4f4e \u5168\u76f8\u8fde\uff1aTLB\u7684\u5b9e\u73b0\u65b9\u6cd5 2.1.3 Cache\u7684\u66ff\u6362\u7b56\u7565 \u00b6 \u4f2aLRU\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1aP41 \u9700\u8981\u6bd4\u8f83**\u968f\u673a**\u66ff\u6362\u548c**\u4f2aLRU**\u6240\u82b1\u7684\u65f6\u95f4 2.2 \u63d0\u9ad8Cache\u7684\u6027\u80fd \u00b6 2.2.1 \u5199\u7f13\u5b58 \u00b6 \u56e0\u4e3a\u5185\u5b58\u4e00\u822c\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u7aef\u53e3\uff0c\u6240\u4ee5\u5199\u56de\u810f\u6570\u636e\u5c31\u4f1a\u9700\u8981\u4e24\u6b21\u4e32\u884c\u7684\u8bbf\u5b58\uff0c\u6548\u7387\u4f4e\uff0c\u53ef\u4ee5\u5148\u5199\u9053\u5199\u7f13\u5b58\uff08write buffer\uff09\u4e2d\uff0c\u5bf9\u4e8e\u5199\u901a\uff08write through\uff09\u7684Dcache\u6765\u8bf4\uff0c\u5199\u7f13\u5b58\u5c24\u4e3a\u5fc5\u8981 2.2.2 \u6d41\u6c34\u7ebf \u00b6 \u8bfbDcache\u53ef\u4ee5\u5e76\u884c\u8bfb\u53d6Tag SRAM\u548cData SRAM\u7684\u6570\u636e\uff0c\u4f46\u662f\u5199Dcache\u53ea\u80fd\u4e32\u884c\uff0c\u6240\u4ee5\u5199\u7684\u65f6\u5019\u9700\u8981\u7528\u6d41\u6c34\u7ebf \u6ce8\u610f\u989d\u5916\u7684\u8f6c\u53d1 2.2.3 \u591a\u7ea7\u7ed3\u6784 \u00b6 \u73b0\u4ee3\u5904\u7406\u5668\u591a\u91c7\u7528inclusive\u7c7b\u578b\u7684Cache 2.2.4 Victim Cache \u00b6 \u9632\u6b62\u88ab\u8e22\u51fa\u7684\u6570\u636e\u9a6c\u4e0a\u88ab\u5229\u7528\uff0c\u800cFilter Cache\u5219\u662f\u9632\u6b62\u4e0d\u4f1a\u518d\u7528\u7684\u6570\u636e\u4e00\u76f4\u4e0d\u88ab\u8e22\u51fa 2.2.5 \u9884\u53d6 \u00b6 \u786c\u4ef6\u9884\u53d6\uff1aICache\u9884\u53d6\u7684\u6548\u679c\u8981\u6bd4Dcache\u8981\u597d\uff0c\u53ef\u4ee5\u5c06\u9884\u53d6\u7684\u6307\u4ee4\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58\u4e2d 2.3 \u591a\u7aef\u53e3Cache \u00b6 Multi-banking\uff1a\u9700\u8981\u5c3d\u91cf\u51cf\u5c11bank\u7684\u51b2\u7a81\uff08\u7a7a\u95f4\u5c40\u90e8\u6027\uff09\uff0c\u4ee5\u53ca\u9047\u5230\u51b2\u7a81\u7684\u5904\u7406\uff0c\u5176\u5b83\u90e8\u4ef6\u4e5f\u8981\u5b9e\u73b0\u591a\u7aef\u53e3\uff08Tag SRAM\u548cTLB\u7684\u590d\u5236\uff0c\u53ef\u4ee5\u53c2\u8003Opteron\u5904\u7406\u5668\uff09 2.4 \u8d85\u6807\u91cf\u5904\u7406\u5668\u7684\u53d6\u6307\u4ee4 \u00b6 \u6bcf\u5468\u671f\u53d6\u66f4\u591a\u7684\u6307\u4ee4\uff0c\u591a\u4f59\u7684\u653e\u5728**\u6307\u4ee4\u7f13\u5b58**\u4e2d\uff082\u8def\u5904\u7406\u5668\u6700\u591a\u53ef\u4ee5\u53d64\u6761\u6307\u4ee4\uff09 \u7b2c\u4e09\u7ae0 \u00b6 3.4 TLB \u00b6 TLB\u5c31\u662f\u9875\u8868\u7684Cache \u7b2c\u56db\u7ae0 \u00b6 \u5bf9**\u65b9\u5411**\u548c**\u76ee\u6807\u5730\u5740**\u90fd\u9700\u8981\u9884\u6d4b \u53ef\u4ee5\u5c06\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u5728\u6307\u4ee4\u4eceL2 cache\u5199\u5165\u5230Icache\u4e4b\u524d\u8fdb\u884c**\u9884\u89e3\u7801**\uff08pre-decode\uff09\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u4fe1\u606f\u4e00\u8d77\u5199\u5230Icache\u4e2d \u5206\u652f\u9884\u6d4b\u6700\u597d\u65f6\u673a\u5c31\u662f\u5728\u5f53\u524d\u5468\u671f\u5f97\u5230\u53d6\u6307\u4ee4\u5730\u5740\u7684\u65f6\u5019 \u9700\u8981\u6839\u636ePC\u503c\u5224\u65ad\u672c\u5468\u671f\u7684**\u6307\u4ee4\u7ec4**\uff08fetch group\uff09\u4e2d\u662f\u5426\u5b58\u5728\u8df3\u8f6c\u6307\u4ee4 \u56e0\u4e3a\u6211\u4eec\u662f\u987a\u5e8f\u53cc\u53d1\uff0c\u6240\u4ee5\u672c\u5468\u671f\u7684\u6307\u4ee4\u7ec4\u53ea\u6709\u4e24\u4e2a\u6307\u4ee4 4.2.1\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\u7684\u5206\u652f\u9884\u6d4b \u00b6 \u521d\u59cb\u72b6\u6001\u4e00\u822c\u4e3a weakly not taken \u6216 strongly not taken \u4f7f\u7528\u683c\u96f7\u7801\u5bf9\u72b6\u6001\u673a\u8fdb\u884c\u7f16\u7801\uff0c\u51cf\u5c11\u51fa\u9519\u3001\u964d\u4f4e\u529f\u8017 PHT(Pattern History Table) \u5927\u5c0f\u4e3a2KB\u5c31\u6709\u5f88\u9ad8\u7684\u51c6\u786e\u7387\uff0893%\uff09 \u7531\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u7684\u6b63\u786e\u7387\u6709\u4e00\u4e2a\u6781\u9650\u503c\uff0c\u5f88\u96be\u8fbe\u523098%\u4ee5\u4e0a\u7684\u6b63\u786e\u7387\uff0c\u73b0\u4ee3\u5904\u7406\u5668\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002 4.2.2\u5c40\u90e8\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b \u00b6 \u5f53\u4e00\u6761\u5206\u652f\u6307\u4ee4\u5f97\u5230\u7ed3\u679c\u65f6\uff0c\u5c06PHT\u4e2d\u5bf9\u5e94\u7684\u8ba1\u6570\u5668\u8bfb\u51fa\u6765\uff0c\u66f4\u65b0\u597d\u540e\u518d\u5199\u56de\u5373\u53ef\u3002 \u5229\u7528BHT(branch history table)\u548cPHT\uff1a\u5c06\u5206\u652f\u6b64\u524d\u7684\u8df3\u8f6c\u60c5\u51b5\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u7d22\u5f15\u5bf9\u5e94\u60c5\u51b5\u7684PHT \u7531\u4e8e\u5bb9\u91cf\u7684\u9650\u5236\uff0cPC\u9700\u8981\u8fdb\u884chash\uff0c\u7136\u540e\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u6709\u4e24\u79cd\u51b2\u7a81\uff0c\u5982\u4e0b\u3002\u89e3\u51b3\u65b9\u6cd5\u6709\u4f4d\u62fc\u63a5\u6216**\u5f02\u6216\u6cd5** \u4e24\u6761\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u4e00\u4e2aBHR(branch history register) \u4e24\u6761\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u4e24\u4e2aBHR\uff0c\u4f46\u662f\u5b83\u4eecBHR\u7684\u5185\u5bb9\u4e00\u6837\uff0c\u5bf9\u5e94PHT\u4e2d\u7684\u540c\u4e00\u4e2a\u9971\u548c\u8ba1\u6570\u5668 4.2.3\u5168\u5c40\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b \u00b6 \u7528GHR(global history register)\u8bb0\u5f55\u6240\u6709\u7684\u5206\u652f\u8df3\u8f6c\u60c5\u51b5 \u4e24\u6761PC\u7684GHR\u76f8\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684PC\u503c\u4e0d\u540c\uff0c\u540c\u6837\u5e94\u5bf9\u51b2\u7a81\u53ef\u4ee5\u7528\uff1a\u4f4d\u62fc\u63a5\u6216**\u5f02\u6216\u6cd5** 4.2.4\u7ade\u4e89\u7684\u5206\u652f\u9884\u6d4b \u00b6 \u53c2\u8003\u56fe4.25 \u5229\u7528CPHT(Choice PHT)\u6765\u5224\u65ad\u9009\u62e9GHR\u8fd8\u662fBHR \u540c\u6837\u7684\uff0c\u4e3a\u4e86\u51cf\u5c11\u51b2\u7a81\uff0c\u53ef\u4ee5\u628aGHR\u7684\u503c\u548cPC\u7684\u503c\u5f02\u6216\u540e\u5bf9CPHT\u8fdb\u884c\u7d22\u5f15 4.2.5\u5206\u652f\u9884\u6d4b\u7684\u66f4\u65b0 \u00b6 commit\u9636\u6bb5\u518d\u66f4\u65b0\u4f1a\u5bfc\u81f4\u540e\u7eed\u8ddf\u7684\u6bd4\u8f83\u7d27\u7684\u5176\u4ed6\u8df3\u8f6c\u6307\u4ee4\u83b7\u53d6\u4e0d\u4e86\u6700\u65b0\u7684GHR\uff0c\u4e0d\u81f3\u4e8e\u5f62\u540c\u865a\u8bbe\uff08\u4e66\u4e0a\u7684\u8bf4\u4f1a\u201c\u5f62\u540c\u865a\u8bbe\u201d\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u4e0d\u81f3\u4e8e\uff09\uff0c\u4f46\u662f\u4f1a\u6709\u4e00\u5b9a\u5f71\u54cd \u7efc\u5408\u6765\u770b\uff0c\u5728**\u53d6\u6307\u4ee4\u9636\u6bb5\u7528\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u5bf9GHR\u8fdb\u884c\u66f4\u65b0**\u662f\u4e0d\u9519\u7684\u505a\u6cd5\uff0c\u5c31\u7b97\u5f53\u524d\u9884\u6d4b\u9519\u4e86\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u5206\u652f\u6307\u4ee4\u4e5f\u4f1a\u56e0\u4e3a\u5f53\u524d\u5206\u652f\u9884\u6d4b\u5931\u8d25\u800c\u88ab\u51b2\u5237\u6389\uff0c\u4e0d\u4f1a\u6709\u8d1f\u9762\u5f71\u54cd\u3002\u4e0d\u8fc7\u7531\u4e8eGHR\u5199\u5165\u4e86\u4e00\u4e2a\u9519\u8bef\u503c\uff0c\u9700\u8981\u8fdb\u884c\u4fee\u590d \u7528FIFO\u7684Checkpoint GHR\u6765\u4f9d\u6b21\u4fdd\u5b58GHR\u7684\u503c \u5f53\u9884\u6d4b\u9519\u8bef\u65f6\u7528 \u66f4\u65b0BHR\u7684\u65f6\u5019\u53ef\u4ee5\u5728\u9000\u4f11\u7684\u518d\u66f4\u65b0\uff0c\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316\u8bbe\u7f6e\uff0c\u4e5f\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u8d1f\u9762\u5f71\u54cd\uff1b\u800c\u9971\u548c\u8ba1\u6570\u5668\u7531\u4e8e\u4e00\u822c\u4f1a\u5904\u4e8e\u9971\u548c\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u6307\u4ee4\u5728\u9000\u4f11\u7684\u65f6\u5019\u518d\u66f4\u65b0 4.3\u5206\u652f\u6307\u4ee4\u7684\u76ee\u6807\u5730\u5740\u9884\u6d4b \u00b6 4.3.1\u76f4\u63a5\u8df3\u8f6c\uff08PC-relative\uff09 \u00b6 \u53d6\u503c\u9636\u6bb5\u9700\u8981n+1\u7ea7\u6d41\u6c34\u7ebf\uff08\u82e5ICache \u9700\u8981n\u4e2a\u5468\u671f\u8fd4\u56de\u6307\u4ee4\uff09 BTB(branch target buffer)\uff1a\u5b58\u50a8\u8df3\u8f6c\u6307\u4ee4\u5bf9\u5e94\u7684PC\u503c\uff0c\u4e0ecache\u7c7b\u4f3c\u3002 \u51cf\u5c11tag\u4f4d\u6570\uff08\u53ef\u4ee5\u4f4d\u622a\u53d6\uff0c\u6216\u8005**\u5f02\u6216\u8fd0\u7b97**\uff0cyyds\uff09\u4e0d\u4ec5\u8282\u7701BTB\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u4f1a\u5f15\u8d77\u5206\u652f\u9884\u6d4b\u4e89\u53d6\u7387\u7684\u964d\u4f4e\u3002 \u4e00\u822c\u53ea\u5c06**\u9884\u6d4b\u53d1\u751f\u8df3\u8f6c**\u7684\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684\u5730\u5740\u653e\u5230BTB\u4e2d BTB\u7f3a\u5931\u7684\u5904\u7406 \u505c\u6b62\u6267\u884c\uff1a\u9700\u8981\u52a0\u5165\u6c14\u6ce1\uff0c\u5c24\u5176\u662f\u95f4\u63a5\u8df3\u8f6c\u6307\u4ee4 \u7ee7\u7eed\u6267\u884c\uff1a\u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740\u53ef\u80fd\u4e0d\u8df3\u8f6c\uff0c\u7ee7\u7eed\u6267\u884c\u53ef\u80fd\u4f1a\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u529f\u8017\u5927 4.3.2 \u95f4\u63a5\u8df3\u8f6c\uff08absolute\uff09 \u00b6 \u5927\u90e8\u5206\u95f4\u63a5\u8df3\u8f6c\u90fd\u662fCALL/Return\u6307\u4ee4\uff0c\u5b83\u4eec\u662f\u6709\u8ff9\u53ef\u5faa\u7684 RAS(Return Address Stack)\uff1a\u4fdd\u5b58\u6bcf\u6b21CALL\u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4 \u5728BTB\u4e2d\u4fdd\u5b58\u6307\u4ee4\u7684\u7c7b\u578b\uff08CALL\u3001Return\u6216\u5176\u5b83\uff09\uff0c\u56e0\u6b64\u5728\u5206\u652f\u9884\u6d4b\u9636\u6bb5\uff08\u7b2c\u4e00\u4e2a\u53d6\u503c\u9636\u6bb5\uff09\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u6307\u4ee4\u662f\u54ea\u4e00\u4e2a\u6307\u4ee4\uff0c\u8fdb\u800c\u5f97\u5230\u4e0b\u4e00\u4e2a\u6307\u4ee4\u7684\u5730\u5740 \u7528\u5e26**\u8ba1\u6570\u5668**\u7684RAS\u6765\u89e3\u51b3\u91cd\u590d\u7684\u9012\u5f52\u51fd\u6570 \u4f7f\u7528Target Cache\u9884\u6d4b\u5176\u5b83\u7c7b\u578b\u7684\u5206\u652f\u6307\u4ee4\u7684\u8df3\u8f6c\u5730\u5740\uff08\u4e0e\u9884\u6d4b\u662f\u5426\u8df3\u8f6c\u7c7b\u4f3c\uff09 4.3.3\u5c0f\u7ed3 \u00b6 \u53c2\u8003\u56fe4.49 \u4f7f\u7528BHR\u3001GHR\u548c\u9971\u548c\u8ba1\u6570\u5668\u6765\u9884\u6d4b\u5206\u652f\u6307\u4ee4\u7684\u65b9\u5411\uff1b\u4f7f\u7528BTB\u3001RAS\u548cTarget Cache\u9884\u6d4b\u5206\u652f\u6307\u4ee4\u7684\u76ee\u6807\u5730\u5740\uff1b\u5b83\u4eec\u90fd\u662f\u57fa\u4e8e\u53d6\u503c\u9636\u6bb5\u7684PC\u503c\u6765\u9884\u6d4b\u7684 4.4\u5206\u652f\u9884\u6d4b\u5931\u8d25\u7684\u6062\u590d \u00b6 \u8be6\u89c1\u4e66\uff1a\u975e\u4e71\u5e8f\u6d41\u6c34\u7ebf\u5e94\u8be5\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6 4.5\u8d85\u6807\u91cf\u5904\u7406\u5668\u7684\u5206\u652f\u9884\u6d4b \u00b6 \u5bf9\u4e8e\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u590d\u6742 **MIPS**\u4e2d\uff0c\u7a0b\u5e8f\u7edd\u5927\u90e8\u5206\u51fa\u73b0\u7684\u5206\u652f\u6307\u4ee4\u90fd\u662f\u76f4\u63a5\u8df3\u8f6c\uff08PC-relative\uff09\uff0c\u5b83\u4eec\u7684\u76ee\u6807\u5730\u5740\u53ef\u4ee5\u5f88\u5feb\u7b97\u51fa\u6765\uff0c\u4e0d\u5fc5\u8fdb\u884c\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\uff0c\u800c\u662f\u5728\u53d6\u503c\u9636\u6bb5\u7b97\u51fa\u76ee\u6807\u5730\u5740\uff1b\u5f53\u7136\u5bf9\u4e8e\u975eReturn\u7684\u95f4\u63a5\u8df3\u8f6c\u5c31\u4e0d\u884c\u4e86\u3002 \u4f7f\u7528**\u4ea4\u53e0\u65b9\u5f0f**\uff08interleaving\uff09\u5b9e\u73b0\u591a\u7aef\u53e3\u8bbe\u8ba1\uff0c\u5728\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u5f88\u5e38\u7528\uff0c\u5982\u91cd\u6392\u5e8f\u7f13\u5b58\uff08ROB\uff09\u3001\u53d1\u5c04\u961f\u5217\uff08Issue Queue\uff09\u548c\u6307\u4ee4\u7f13\u5b58\uff08Instruction Buffer\uff09\u7b49 \u7b2c\u4e94\u7ae0 \u00b6 \u4e58\u6cd5/\u4e58\u7d2f\u52a0\u6307\u4ee4\u5728MIPS\u6307\u4ee4\u96c6\u4e2d\u4fdd\u5b58\u5728\u7279\u6b8a\u5bc4\u5b58\u5668Hi\u548cLo\u4e2d\uff0c\u4f46\u662f\u5728\u8d85\u6807\u91cf\u5bc4\u5b58\u5668\u91cc\u88ab\u8ba4\u4e3a\u662f33\u548c34\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u5bf9\u5b83\u4eec\u53ef\u4ee5\u8fdb\u884c\u6b63\u5e38\u7684\u5bc4\u5b58\u5668\u91cd\u547d\u540d \u7c7b\u4f3c\u7684\u6307\u4ee4\u53ef\u4ee5\u8fdb\u884c\u6307\u4ee4\u66f4\u6539\uff0c\u6bd4\u5982MULT\uff1a 31:26 25:21 20:16 15:6 5:0 Special 000000 rs rt 0 0000000000 MULT 011000 \u6211\u4eec\u53d1\u73b0\u5176\u4e2d[15:6]\u4f4d\u662f\u6ca1\u6709\u610f\u4e49\u7684, \u6b63\u597d\u53ef\u4ee5\u7f16\u7801\u4e24\u4e2a\u5bc4\u5b58\u5668, \u6240\u4ee5\u5c06\u6307\u4ee4\u6539\u6210\u5982\u4e0b 31:26 25:21 20:16 15:11 10:6 5:0 Special 000000 rs rt RdHi RdLo MULT 011000 \u7b2c\u516d\u7ae0 \u00b6 6.1 \u6307\u4ee4\u7f13\u5b58 \u00b6 \u6bcf\u5468\u671f\u7684\u53d6\u6307\u6570\u548c\u89e3\u7801\u6570\u4e0d\u5339\u914d \u5728\u53d6\u6307\u9636\u6bb5\u548c\u89e3\u7801\u9636\u6bb5\u4e4b\u95f4\u7684\u7f13\u5b58 \u6709\u6548\u6307\u4ee4\u7684\u4e2a\u6570\uff0c\u544a\u8bc9\u7f13\u5b58\u54ea\u4e9b\u6307\u4ee4\u662f\u6709\u6548\u7684 \u4e3a\u4e86\u51cf\u5c11\u5bf9\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u9636\u6bb5\u7684\u5f71\u54cd\uff0c\u4e00\u822c\u4f1a\u5c06\u7279\u6b8a\u6307\u4ee4\uff08\u7d2f\u4e58\u52a0\uff1a madd \uff09\u62c6\u5206\u6210\u4e24\u6761\u666e\u901a\u7684\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u53ea\u6709**\u4e00\u4e2a**\u76ee\u7684\u5bc4\u5b58\u5668 \u7528**\u4ea4\u53e0**\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u591a\u4e2a\u5355\u7aef\u53e3\u7684SRAM\u6765\u5b9e\u73b0\u6307\u4ee4\u5185\u5b58\u8fd9\u4e2a\u591a\u7aef\u53e3FIFO 6.2\u4e00\u822c\u60c5\u51b5 \u00b6 \u4ece\u6307\u4ee4\u7f13\u5b58\u4e2d\u8bfb\u53d6\u7684\u56db\u6761\u6307\u4ee4\u672a\u5fc5\u662f\u56db\u5b57\u5bf9\u9f50\u7684\uff0c\u9700\u8981\u6309\u987a\u5e8f\u6392\u5217\u597d 6.3\u7279\u6b8a\u60c5\u51b5 \u00b6 6.3.1 \u5206\u652f\u6307\u4ee4\u7684\u5904\u7406 \u00b6 \u6bcf\u5468\u671f\u6700\u591a\u53ea\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\uff08MIPS\u6307\u4ee4\u96c6\u6709\u5ef6\u8fdf\u69fd\uff0c\u6240\u4ee5\u987a\u5e8f\u53cc\u53d1\u4e0d\u53ef\u80fd\u9700\u8981\u5904\u7406\u4e24\u6761\uff09 \u89e3\u7801\u9636\u6bb5\u5bf9\u5206\u652f\u6307\u4ee4\u7684\u9884\u6d4b\u7684\u68c0\u67e5 6.3.2\u4e58\u7d2f\u52a0/\u4e58\u6cd5\u6307\u4ee4\u7684\u5904\u7406 \u00b6 \u5728\u5904\u7406\u5668\u5185\u90e8\uff0c\u88ab\u62c6\u5206\u7684\u4e58\u7d2f\u52a0\u5728\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u9636\u6bb5\uff0c\u4ecd\u7136\u4ee5\u4e00\u4e2a\u5b8c\u6574\u7684\u4e58\u7d2f\u52a0\u6307\u4ee4\u5b8c\u6210\uff1b\u62c6\u5206\u53ea\u662f\u66f4\u6709\u5229\u4e8e\u8fdb\u884c\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u548c\u4fbf\u4e8e\u5728ROB\u4e2d\u7684\u5b58\u653e\uff1b\u5728\u5199\u53d1\u5c04\u961f\u5217\u7684\u65f6\u5019\uff0c\u5c06\u4e24\u6761\u6307\u4ee4\u8fdb\u884c\u4e86\u878d\u5408\uff0c\u6700\u7ec8\u53d8\u6210\u4e00\u6761\u5b8c\u6574\u7684\u4e58\u7d2f\u52a0\u6216\u4e58\u6cd5\u6307\u4ee4 \u4e00\u4e2a\u5468\u671f\u591a\u4e2a\u590d\u6742\u6307\u4ee4\uff1a\u62c6\u5206\u5b8c\u540e\u53ea\u8fdb\u884c\u90e8\u5206\u89e3\u7801 \u7b2c\u4e03\u7ae0 \u00b6 7.1\u6982\u8ff0 \u00b6 \u6709\u9650\u4e2a\u6570\u7684\u5bc4\u5b58\u5668\u5bfc\u81f4\u4e86\u4e0a\u8ff0\u7684\u5047\u76f8\u5173\u6027 \u5047\u7684\u76f8\u5173\u6027\u5236\u7ea6\u4e86\u539f\u59cb\u7a0b\u5e8f\u83b7\u5f97\u7684\u5e76\u884c\u6027 \u7b2c\u516b\u7ae0 \u00b6 \u91c7\u7528\u96c6\u4e2d\u5f0f\u53d1\u5c04\u961f\u5217\uff08Centralized Issue Queue\uff0cCIQ\uff09 \u91c7\u7528\u975e\u6570\u636e\u6355\u6349\uff08MIPS R10000\u548cAlpha 21264\uff09 \u65c1\u8def\u7f51\u7edc \u7b2c\u4e5d\u7ae0 \u00b6 \u9000\u4f11\u7684\u65f6\u5019\u624d\u771f\u6b63\u66f4\u65b0\u5bc4\u5b58\u5668\u72b6\u6001 \u7528cluster\u5b9e\u73b0\u591a\u7aef\u53e3 CLZ\u6307\u4ee4\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff08\u5728MIPS\u4e2d\u5141\u8bb8\u6240\u6709\u7684\u4f4d\u4e3a0\uff09 AGU\uff08Address Generate Unit\uff09\u7528\u6765\u8ba1\u7b97\u5730\u5740\uff0c\u5728\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u7531\u4e8e\u5e76\u884c\u5904\u7406\u7684\u9700\u8981\u4ee5\u53ca\u8bbf\u5b58\u5bf9\u5904\u7406\u5668\u7684\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u5355\u72ec\u7528\u4e86\u4e00\u4e2aFU\u6765\u8ba1\u7b97\u5730\u5740\uff0c\u540c\u65f6\u8fdb\u884c\u5206\u652f\u68c0\u67e5 BRU\uff08Branch Unit\uff09\u8d1f\u8d23\u8ba1\u7b97\u5206\u652f\u6307\u4ee4\u7684\u76ee\u7684\u5730\u5740\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426 9.3\u65c1\u8def\u7f51\u7edc \u00b6 \u4ece\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u7684\u6570\u636e\u9700\u8981\u4e00\u5468\u671f\u7684\u65f6\u95f4\uff08 Source Drive \uff09\u624d\u80fd\u8fdb\u5165FU\u7684\u8f93\u5165\u7aef\uff1b\u540c\u7406FU\u8ba1\u7b97\u51fa\u7ed3\u679c\u4e5f\u9700\u8981\u4e00\u4e2a\u9636\u6bb5\uff08 Result Drive \uff09\u624d\u80fd\u5230\u8fbe\u6240\u6709\u7684FU\u7684\u8f93\u5165\u7aef \u4ece\u4e00\u4e2a\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u8f93\u5165\u5982\u679c\u65f6\u95f4\u5f88\u957f\u4f1a\u8ba9execute\u7684\u65f6\u95f4\u53d8\u5c11\uff0c\u53ef\u4ee5\u7528\uff08Cluster\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u4e24\u6761\u6307\u4ee4\u540c\u65f6\u60f3\u8981\u5360\u6709\u65c1\u8def\u7f51\u7edc\u53bb\u8f6c\u53d1\u6570\u636e\uff0c\u4f1a\u4ea7\u751f\u51b2\u7a81 \u4e0d\u9700\u8981\u5728\u6240\u6709\u7684FU\u4e4b\u95f4\u90fd\u8bbe\u7f6e\u65c1\u8def\u7f51\u7edc AGU\u8fdb\u884c\u5730\u5740\u8ba1\u7b97\u65f6\uff0c\u4e00\u822c\u90fd\u4f1a\u7528\u5230ALU\u7684\u7ed3\u679c\uff0c\u5c24\u5176\u662f\u95f4\u63a5\u8df3\u8f6c\uff08\u5bc4\u5b58\u5668\u8df3\u8f6c\uff09 load/store\u5355\u5143\u4e2dstore\u5355\u5143\u4e5f\u4e0d\u9700\u8981\u65c1\u8def 9.4 \u64cd\u4f5c\u6570\u7684\u9009\u62e9 \u00b6 \u5bc4\u5b58\u5668\u7684\u4fe1\u606f\u9700\u8981\u4fdd\u5b58\u5728\u4e00\u4e2a\u8868\u683c\u4e2d\uff08ScoreBoard\uff09 \u5c06ScoreBoard\u7684\u8bfb\u53d6\u653e\u5230\u6d41\u6c34\u7ebf\u7684RF Read\u9636\u6bb5\u53ef\u4ee5\u51cf\u5c11\u5bf9\u5468\u671f\u65f6\u95f4\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u9700\u8981\u989d\u5916\u7684\u6bd4\u8f83\u7535\u8def\uff0c\u6b64\u5916\uff0cScoreBoard\u7684\u7535\u8def\u672c\u8eab\u5c31\u6bd4\u8f83\u590d\u6742 \u6709\u4e9b\u65f6\u5019**\u7b80\u5355\u7684\u5c31\u662f\u597d\u7684**\uff0c\u6bcf\u6761FU\u8ba1\u7b97\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u90fd\u8fdb\u884c\u5e7f\u64ad\uff08\u7c7b\u4f3c\u5355\u6307\u4ee4\u6d41\u6c34\u7ebf\u7684\u8f6c\u53d1\uff09 9.5 Cluster \u00b6 \u548c\u4ea4\u53e0\uff08interleaving\uff09\u7c7b\u4f3c \u53d1\u5c04\u961f\u5217\u7684Cluster\u7ed3\u6784\uff1a\u5206\u5e03\u5f0f\u53d1\u5c04\u961f\u5217\uff08\u591a\u7aef\u53e3\u4f1a\u8017\u8d39\u5927\u91cf\u8d44\u6e90\uff0c\u540c\u65f6\u4f1a\u964d\u4f4e\u901f\u5ea6\uff09 9.5.1 Cluster IQ \u00b6 \u4e0d\u540c\u7684\u5206\u5e03\u5f0f\u53d1\u5c04\u961f\u5217\u5904\u7406\u4e0d\u540c\u7684\u6307\u4ee4\uff0c\u5bf9\u5e94\u5c11\u6570\u7684\u4ef2\u88c1\u7535\u8def\u548cFU 9.5.2 Cluster Bypass \u00b6 \u65c1\u8def\u7f51\u7edc\u53ea\u5206\u5e03\u5728\u6bcf\u4e2aCluster\u5185\u90e8\uff0c\u8fdb\u800c\u51cf\u5c11\u5927\u91cf\u7684\u65c1\u8def\u7535\u8def \u5bf9\u4e8e\u4e71\u5e8f\u5904\u7406\u5668\u6765\u8bf4\uff0c\u4e0d\u540cCluster\u4e2d\u7684\u76f8\u90bb\u6307\u4ee4\u4e4b\u95f4\u53ef\u4ee5\u8c03\u5ea6\u5176\u5b83\u6307\u4ee4\u586b\u8865\u7a7a\u767d\uff1b\u4f46\u662f\u5bf9\u4e8e\u987a\u5e8f\u5904\u7406\u5668\uff0c\u65e0\u6cd5\u8c03\u5ea6\u53ea\u80fdbubble\u7684\u60c5\u51b5\u96be\u4ee5\u63a5\u53d7\uff0c\u4e00\u822c\u4f1a\u5c3d\u91cf\u91c7\u7528\u5b8c\u5168\u7684\u65c1\u8def\u7f51\u7edc\uff08Intel\u7684Atom\u5904\u7406\u5668\uff09\uff0c 9.6 \u5b58\u50a8\u5668\u6307\u4ee4\u7684\u52a0\u901f \u00b6 9.6.1 Memory Disambiguation \u00b6 \u4e3a\u4e86\u964d\u4f4e\u8bbe\u8ba1\u96be\u5ea6\u548c\u5904\u7406\u5668\u4e2d\u5b58\u50a8\u5668\u7684\u6b63\u786e\u6027\uff0c\u5927\u90e8\u5206\u5904\u7406\u5668\u7684store\u6307\u4ee4\u662f\u987a\u5e8f\u6267\u884c\uff08in-order\uff09\uff0c\u800cload\u6307\u4ee4\u4e3b\u8981\u6709\u4e09\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5b8c\u5168\u7684\u987a\u5e8f\u6267\u884c \u5b8c\u5168\u7684\u987a\u5e8f\u6267\u884c\uff1a\u6700\u4fdd\u5b88\uff0c\u6027\u80fd\u4f4e\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u57fa\u672c\u4e0d\u4f1a\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff08\u3002\u3002\u3002\u6211\u4eec\u5e94\u8be5\u662f\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff09 9.6.2 \u975e\u963b\u585eCache \u00b6 \u975e\u963b\u585e\uff08Non-blocking\uff09Cache\uff1a\u5728\u53d1\u751fD-Cache\u7f3a\u5931\u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684load/store\u6307\u4ee4 9.6.3 \u5173\u952e\u5b57\u4f18\u5148 \u00b6 \u4ece\u4e0b\u7ea7\u6d41\u6c34\u7ebf\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5148\u8bfb\u6307\u4ee4\u6240\u9700\u8981\u7684\u6570\u636e\u5230cache line\u4e2d\uff0c\u8fd9\u6837CPU\u5c31\u5f97\u5230\u4e86\u60f3\u8981\u7684\u6570\u636e\uff0c\u800cD-cache\u4f1a\u7ee7\u7eed\u5b8c\u6210\u5176\u5b83\u6570\u636e\u7684\u586b\u5145\u3002\u4f46\u9700\u8981\u5728\u5b58\u50a8\u5668\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u786c\u4ef6\u624d\u80fd\u5b9e\u73b0 \u5173\u952e\u8bcd\u4f18\u5148\u548c\u63d0\u524d\u5f00\u59cb\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8eI-Cache\uff0c\u4f46\u662f\u8981\u4fdd\u8bc1\u539f\u59cb\u987a\u5e8f \u7b2c\u5341\u7ae0 \u00b6 10.1 \u6982\u8ff0 \u00b6 \u4ece\u5916\u90e8\u6765\u770b\uff0c\u5904\u7406\u5668\u603b\u65f6\u6309\u7167\u7a0b\u5e8f\u6307\u5b9a\u7684\u987a\u5e8f\u6267\u884c\uff1b\u4ece\u5185\u90e8\u6765\u770b\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\uff0c\u5c24\u5176\u662f\u4e71\u5e8f\u7684\uff0c\u5728\u5206\u53d1\u9636\u6bb5\uff08Dispatch\uff09\u6253\u4e71\u6307\u4ee4\uff0c\u7136\u540e\u5728\u63d0\u4ea4\u9636\u6bb5\uff08Commit\uff09\u62c9\u56de\u5230\u987a\u5e8f\u6267\u884c\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\u582a\u79f0\u4e00\u4e2a\u4f2a\u88c5\u9ad8\u624b\u3002 10.4 \u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406 \u00b6 \u7531\u4e8estore\u6307\u4ee4\u6539\u53d8\u7a0b\u5e8f\u5458\u53ef\u89c1\u72b6\u6001\uff08architecture state\uff09\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5176\u5728\u6267\u884c\u9636\u6bb5\uff08\u5c24\u5176\u662f\u5199DCache\u7684\u65f6\u5019\u7684\uff09\u7684\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u67b6\u6784\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u5b58\u5728\u5728\u63d0\u4ea4\u9636\u6bb5\u624d\u68c0\u6d4b\u5230\u5206\u652f\u9884\u6d4b\u9519\u8bef\u7684\u53ef\u80fd\u6027\uff0c\u90a3\u4e48\u6b64\u524d\u7684\u6240\u6709\u6307\u4ee4\u90fd\u4e0d\u8be5\u88ab\u6267\u884c\uff0c\u8fd9\u70b9\u9700\u8981\u6ce8\u610f\u3002 \u5206\u652f\u9884\u6d4b\u4f7f\u5f97\u539f\u672c\u6d41\u6c34\u7ebf\u4e2d\u6307\u4ee4\u7684\u72b6\u6001\u53d8\u4e3a\u4e09\u79cd\uff08\u6b63\u5e38\u3001\u5f02\u5e38\u3001\u4e0d\u6267\u884c\uff09\uff0c\u589e\u52a0\u4e86\u5f02\u5e38\u5904\u7406\u7684\u590d\u6742\u3002 store\u6307\u4ee4\u7684\u5904\u7406\uff1a\u56e0\u4e3astore\u6307\u4ee4\u9000\u4f11\u7684\u65f6\u5019\u624d\u80fd\u5199\u56de\uff0c\u6b64\u65f6\u6216\u51fa\u73b0\u7f13\u5b58\u7f3a\u5931\uff0c\u5835\u585e\u4e86\u4e4b\u540e\u7684\u6307\u4ee4\u4f1a\u5bfc\u81f4\u5904\u7406\u5668\u6027\u80fd\u7684\u964d\u4f4e\u3002\u89e3\u51b3\u65b9\u6cd5\u4e3a\u5728Store Buffer\u4e2d\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\u4f4d\u3002 RISC\u5904\u7406\u5668\u7684\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff1a\u4e0d\u4e3a\u4e0d\u7ecf\u5e38\u51fa\u73b0\u7684\u60c5\u51b5\u6d6a\u8d39\u786c\u4ef6\u8d44\u6e90 \u7b2c\u5341\u4e00\u7ae0 \u00b6 11.2 \u53d6\u6307\u4ee4\u548c\u5206\u652f\u9884\u6d4b \u00b6 Alpha 21264\u91c7\u7528\u4e24\u7ea7\u6d41\u6c34\u7ebf\u6765\u8bbf\u95eeICache\uff0c\u7b2c\u4e00\u7ea7\u5f97\u5230ICache\u4e2d\u7684\u6307\u4ee4\u548cTag\uff0c\u7b2c\u4e8c\u7ea7\u8fdb\u884cTag\u6bd4\u8f83\uff0c\u540c\u65f6\u628a\u6307\u4ee4\u9001\u5230\u89e3\u7801\u5668\u7b49\u76f8\u5173\u90e8\u4ef6\u4e2d \u4e24\u79cd\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff1a\u7b2c\u4e00\u79cd\u7b80\u5355\uff0c\u7b2c\u4e8c\u79cd\u590d\u6742\u9700\u4e24\u4e2a\u5468\u671f\uff0c\u5982\u679c\u4e24\u79cd\u65b9\u6cd5\u590d\u6d4b\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u5219bubble\u6389\u7b80\u5355\u9884\u6d4b\u7684\u6307\u4ee4\uff0c\u91c7\u7528\u590d\u6742\u65b9\u5f0f\u9884\u6d4b\u7684\u6307\u4ee4\u3002 11.2.1 line/way\u7684\u9884\u6d4b \u00b6 \u672c\u8d28\u4e0a\u5c31\u662f\u628aBTB\u653e\u5230\u4e86ICache\u4e2d\uff0c\u56e0\u4e3a21264\u5904\u7406\u5668\u6bcf\u5468\u671f\u53d6\u51fa\u7684\u56db\u6761\u6307\u4ee4\u5728\u56db\u5b57\u5bf9\u9f50\u7684\u8fb9\u754c\u4e4b\u5185\uff0c\u6240\u4ee5\u6bcf\u56db\u6761\u6307\u4ee4\u7528\u4e00\u4e2aline/way\u9884\u6d4b \u9884\u6d4b\u4fe1\u606f\u5305\u542b\u4e09\u4e2a\u5185\u5bb9\uff1a\uff081\uff09successor way\uff1a\u4e0b\u4e2a\u5468\u671f\u53d6\u51fa\u7684fetch group\u5728ICache\u4e2d\u7684way\uff0c\uff082\uff09successor index\uff1a\u4e0b\u4e2a\u5468\u671f\u8981\u53d6\u51fa\u7684\u4e00\u7ec4\u6307\u4ee4\u4e2d\u5728Cache line\u4e2d\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u5148\u627e\u5230Cache line\uff0c\u7136\u540e\u518d\u627e\u5176\u5728Cache line\u4e2d\u7684\u4f4d\u7f6e\u3002\uff083\uff09branch position\uff1a\u672c\u5468\u671f\u53d6\u51fa\u7684\u6307\u4ee4\u7ec4\u4e2d\uff0c\u82e5\u5b58\u5728\u9884\u6d4b\u8df3\u8f6c\u7684\u5206\u652f\u6307\u4ee4\uff0c\u5b58\u50a8\u8be5\u6307\u4ee4\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u50a8\u5206\u652f\u6307\u4ee4\u7684\u4f4d\u7f6e\u662f\u56e0\u4e3a\uff1a\u4e00\u3001\u66f4\u5bb9\u6613\u627e\u5230\u672c\u5468\u671f\u4e2d\u54ea\u4e9b\u6307\u4ee4\u4e0d\u8be5\u8fdb\u5165\u6d41\u6c34\u7ebf\uff1b\u4e8c\u3001\u752800\u5c31\u53ef\u4ee5\u8868\u793a\u51fa\u201c\u672c\u5468\u671f\u53d6\u51fa\u7684\u6307\u4ee4\u90fd\u9700\u8981\u8fdb\u5165\u6d41\u6c34\u7ebf\u201d\u8fd9\u4e2a\u4fe1\u606f\u3002 \u53ef\u4ee5\u7528\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\u7684\u65b9\u5f0f\u6765\u7ba1\u7406line/way\u7684\u9884\u6d4b\u503c \u540c\u65f6\u4e5f\u6709\u4e09\u4e2a\u95ee\u9898\uff1a\uff081\uff09\u5f88\u591aCache line\u6ca1\u6709\u5206\u652f\u6307\u4ee4\uff0c\u6d6a\u8d39\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u800c\u72ec\u7acb\u7684BTB\u53ea\u4f1a\u628a\u9884\u6d4b\u7ed3\u679c\u662f\u8df3\u8f6c\u7684\u6307\u4ee4\u653e\u5728BTB\u4e2d\uff082\uff09Cache\u5360\u7528\u66f4\u591a\u7684\u8d44\u6e90\uff083\uff09\u6bcf\u5f53Cache line\u88ab\u66ff\u6362\uff0c\u5b83\u5305\u542b\u7684\u9884\u6d4b\u4fe1\u606f\u5c31\u6d88\u5931\u4e86\uff0c\u800c\u72ec\u7acb\u7684BTB\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\u3002 \u914d\u5408\u4f7f\u7528virtually-indexed\uff0cvirtually-tagged\u7ed3\u6784\u7684Cache\u66f4\u5408\u7406 11.2.2 \u5206\u652f\u9884\u6d4b \u00b6 21264\u5904\u7406\u5668\u7684\u590d\u6742\u5206\u652f\u9884\u6d4b\u4e0e\u7b80\u5355\u5206\u652f\u9884\u6d4b\u7684\u51b2\u7a81 \u57fa\u4e8e\u5168\u5c40\u5386\u53f2\u7684\u9884\u6d4b\u548c\u5c40\u90e8\u5386\u53f2\u7684\u9884\u6d4b\u7684\u51b2\u7a81 \u5bf9\u4e8e\u57fa\u4e8e\u5c40\u90e8\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff0c\u4f7f\u7528\u975e\u63a8\u6d4b\uff08non-speculative\uff09\u7684\u65b9\u5f0f\u66f4\u65b0\uff1b\u5bf9\u4e8e\u57fa\u4e8e\u5168\u5c40\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e86\u63a8\u6d4b\u7684\u5206\u5f0f\u66f4\u65b0\uff0c\u6240\u4ee5GHR\u7684\u72b6\u6001\u53ef\u80fd\u4e0d\u6b63\u786e\uff0c\u6240\u4ee5\u9700\u8981\u7528\u7c7b\u4f3c\u4e8eCheckpoint\u7684\u65b9\u6cd5\u8fdb\u884c\u66f4\u65b0\u3002 11.4 \u53d1\u5c04 \u00b6 \u5c06\u5bc4\u5b58\u5668\u5806\u590d\u5236\u7684\u65b9\u6cd5\u662fCluster\u7ed3\u6784\u4e2d\u5e38\u7528\u7684\u65b9\u6cd5\u4e4b\u4e00\uff0c\u51cf\u5c11\u4e86\u5bc4\u5b58\u5668\u5bf9\u7684\u8bfb\u7aef\u53e3\uff0c\u8bbf\u95ee\u5bc4\u5b58\u5668\u9000\u7684\u901f\u5ea6\u4f1a\u63d0\u9ad8\uff0c\u603b\u7684\u9762\u79ef\u4e5f\u4e0d\u4f1a\u663e\u8457\u589e\u591a\u3002 11.5 \u6267\u884c\u5355\u5143 \u00b6 11.5.1 \u6574\u6570\u7684\u6267\u884c\u5355\u5143 \u00b6 Cluster\u7ed3\u6784\u4e2d\uff0c\u82e5\u4e24\u6761\u76f8\u90bb\u7684\u76f8\u5173\u6307\u4ee4\u662f\u5728\u540c\u4e00Cluster\u5185\u6267\u884c\u7684\uff0c\u5c31\u53ef\u4ee5\u80cc\u9760\u80cc\u6267\u884c\uff1b\u82e5\u5728\u4e0d\u540c\u7684Cluster\uff0c\u5219\u9700\u8981\u8de8\u8d8aCluster\uff0c\u9700\u8981\u5355\u72ec\u7684\u4e00\u4e2a\u5468\u671f\u6765\u4f20\u9012 \u5bc4\u5b58\u5668\u5806\u6709\u4e13\u95e8\u4f9bload\u6307\u4ee4\u4f7f\u7528\u7684\u5199\u7aef\u53e3\uff0c\u4ee5\u6b64\u6765\u63d0\u9ad8load\u6307\u4ee4\u7684\u6267\u884c\u6548\u7387 11.5.2 \u6d6e\u70b9\u6570\u7684\u6267\u884c\u5355\u5143 \u00b6 \u6d6e\u70b9\u6570\u6709\u4e13\u95e8\u7684\u5904\u7406\u5355\u5143\uff0c\u5305\u62ec\u52a0\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u7b49 11.8 \u7ed3\u8bba \u00b6 Alpha 21264 \u5904\u7406\u5668\u5728\u5f88\u591a\u65b9\u9762\u505a\u51fa\u4e86\u6709\u76ca\u7684\u5c1d\u8bd5","title":"\u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u300b\u7b14\u8bb0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_1","text":"","title":"\u7b2c\u4e00\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#131","text":"\u5982\u679c\u5c06\u53d1\u5c04\u7684\u8fc7\u7a0b\u653e\u5230\u6307\u4ee4\u7684\u89e3\u7801\u9636\u6bb5\uff0c\u4f1a\u4e25\u91cd\u5f71\u54cd\u5904\u7406\u5668\u7684\u5468\u671f\u65f6\u95f4\uff0c\u56e0\u6b64\u5c06\u53d1\u5c04\u7684\u8fc7\u7a0b\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u6d41\u6c34\u6bb5 \u56e0\u4e3a\u8981\u4fdd\u8bc1\u6d41\u6c34\u7ebf\u7684\u5199\u56de\u9636\u6bb5\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u56e0\u6b64\u6240\u6709\u7684 FU \u90fd\u9700\u8981\u7ecf\u5386\u540c\u6837\u5468\u671f\u6570\u7684\u6d41\u6c34\u7ebf ScoreBoard \uff1a\u8bb0\u5f55\u6bcf\u6761\u6307\u4ee4\u7684\u6267\u884c\u60c5\u51b5\uff08\u8be6\u89c1P23\uff09 \u6bcf\u6761\u6307\u4ee4\u90fd\u53ef\u4ee5\u4ece\u65c1\u8def\u7f51\u7edc\uff08bypassing network\uff09\u83b7\u5f97\u64cd\u4f5c\u6570\uff0c\u4e0d\u9700\u8981\u7b49\u5f85\u6e90\u5bc4\u5b58\u5668\u5199\u56de","title":"1.3.1\u987a\u5e8f\u6267\u884c"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u7b2c\u4e8c\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#21-cache","text":"\u4f8b\u5982TLB\u548cVictim Cache\u591a\u91c7\u7528\u5168\u76f8\u8054\u7ed3\u6784\uff0c\u800c\u666e\u901a\u7684I-cache\u548cD-cache\u5219\u91c7\u7528\u7ec4\u76f8\u8054\u7ed3\u6784 \u5f3a\u5236\u7f3a\u5931\uff1a\u9884\u53d6\uff08prefetching\uff09 \u51b2\u7a81\u7f3a\u5931\uff1a\u53ef\u4ee5\u7528Victim Cache\u6765\u7f13\u89e3","title":"2.1 Cache\u7684\u4e00\u822c\u8bbe\u8ba1"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#211-cache","text":"\u7ec4\u76f8\u8fde\uff1a\u56e0\u4e3a\u9700\u8981\u4ece\u591a\u4e2aCache line\u4e2d\u9009\u62e9\u4e00\u4e2a\u5339\u914d\u7684\u7ed3\u679c\uff0c\u5ef6\u8fdf\u4f1a\u589e\u5927\uff0c\u751a\u81f3\u53ef\u80fd\u9700\u8981\u6d41\u6c34\u7ebf\uff0c\u4f46\u662f\u5176\u663e\u8457\u5730\u589e\u52a0\u4e86Cache\u547d\u4e2d\uff0c\u6240\u4ee5\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528 Cache\u7684\u8bbf\u95ee\u4e00\u822c\u4f1a\u6bd4\u8f83\u6162\uff0c\u60f3\u63d0\u9ad8\u9891\u7387\uff0cCache\u7684\u8bbf\u95ee\u5c31\u9700\u8981\u4f7f\u7528\u6d41\u6c34\u7ebf\uff0c\u5bf9\u4e8e\u6307\u4ee4cache\u5f71\u54cd\u4e0d\u5927\uff0c\u4f46\u662f\u5bf9\u4e8e\u6570\u636ecache\u4f1a\u589e\u5927load\u6307\u4ee4\u7684\u5ef6\u8fdf\u3002 \u8bbf\u95ee\u65b9\u5f0f\uff1a \u4e32\u884c\uff1a\u5bf9\u4e8e\u8d85\u6807\u91cf\u5904\u7406\u5668\u6765\u8bf4\uff0c\u7531\u4e8e\u53ef\u4ee5\u8c03\u5ea6\u5176\u4ed6\u6307\u4ee4\uff0c\u6240\u4ee5\u5c31\u7b97\u4e32\u884c\u65b9\u5f0f\u589e\u52a0\u4e00\u4e2acache\u9636\u6bb5\u7684\u65f6\u949f\u5468\u671f\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u5f15\u8d77\u6027\u80fd\u7684\u660e\u663e\u964d\u4f4e \u5168\u76f8\u8fde\uff1aTLB\u7684\u5b9e\u73b0\u65b9\u6cd5","title":"2.1.1 Cache\u7684\u7ec4\u6210\u65b9\u5f0f"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#213-cache","text":"\u4f2aLRU\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff1aP41 \u9700\u8981\u6bd4\u8f83**\u968f\u673a**\u66ff\u6362\u548c**\u4f2aLRU**\u6240\u82b1\u7684\u65f6\u95f4","title":"2.1.3 Cache\u7684\u66ff\u6362\u7b56\u7565"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#22-cache","text":"","title":"2.2 \u63d0\u9ad8Cache\u7684\u6027\u80fd"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#221","text":"\u56e0\u4e3a\u5185\u5b58\u4e00\u822c\u53ea\u6709\u4e00\u4e2a\u8bfb\u5199\u7aef\u53e3\uff0c\u6240\u4ee5\u5199\u56de\u810f\u6570\u636e\u5c31\u4f1a\u9700\u8981\u4e24\u6b21\u4e32\u884c\u7684\u8bbf\u5b58\uff0c\u6548\u7387\u4f4e\uff0c\u53ef\u4ee5\u5148\u5199\u9053\u5199\u7f13\u5b58\uff08write buffer\uff09\u4e2d\uff0c\u5bf9\u4e8e\u5199\u901a\uff08write through\uff09\u7684Dcache\u6765\u8bf4\uff0c\u5199\u7f13\u5b58\u5c24\u4e3a\u5fc5\u8981","title":"2.2.1 \u5199\u7f13\u5b58"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#222","text":"\u8bfbDcache\u53ef\u4ee5\u5e76\u884c\u8bfb\u53d6Tag SRAM\u548cData SRAM\u7684\u6570\u636e\uff0c\u4f46\u662f\u5199Dcache\u53ea\u80fd\u4e32\u884c\uff0c\u6240\u4ee5\u5199\u7684\u65f6\u5019\u9700\u8981\u7528\u6d41\u6c34\u7ebf \u6ce8\u610f\u989d\u5916\u7684\u8f6c\u53d1","title":"2.2.2 \u6d41\u6c34\u7ebf"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#223","text":"\u73b0\u4ee3\u5904\u7406\u5668\u591a\u91c7\u7528inclusive\u7c7b\u578b\u7684Cache","title":"2.2.3 \u591a\u7ea7\u7ed3\u6784"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#224-victim-cache","text":"\u9632\u6b62\u88ab\u8e22\u51fa\u7684\u6570\u636e\u9a6c\u4e0a\u88ab\u5229\u7528\uff0c\u800cFilter Cache\u5219\u662f\u9632\u6b62\u4e0d\u4f1a\u518d\u7528\u7684\u6570\u636e\u4e00\u76f4\u4e0d\u88ab\u8e22\u51fa","title":"2.2.4 Victim Cache"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#225","text":"\u786c\u4ef6\u9884\u53d6\uff1aICache\u9884\u53d6\u7684\u6548\u679c\u8981\u6bd4Dcache\u8981\u597d\uff0c\u53ef\u4ee5\u5c06\u9884\u53d6\u7684\u6307\u4ee4\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58\u4e2d","title":"2.2.5 \u9884\u53d6"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#23-cache","text":"Multi-banking\uff1a\u9700\u8981\u5c3d\u91cf\u51cf\u5c11bank\u7684\u51b2\u7a81\uff08\u7a7a\u95f4\u5c40\u90e8\u6027\uff09\uff0c\u4ee5\u53ca\u9047\u5230\u51b2\u7a81\u7684\u5904\u7406\uff0c\u5176\u5b83\u90e8\u4ef6\u4e5f\u8981\u5b9e\u73b0\u591a\u7aef\u53e3\uff08Tag SRAM\u548cTLB\u7684\u590d\u5236\uff0c\u53ef\u4ee5\u53c2\u8003Opteron\u5904\u7406\u5668\uff09","title":"2.3 \u591a\u7aef\u53e3Cache"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#24","text":"\u6bcf\u5468\u671f\u53d6\u66f4\u591a\u7684\u6307\u4ee4\uff0c\u591a\u4f59\u7684\u653e\u5728**\u6307\u4ee4\u7f13\u5b58**\u4e2d\uff082\u8def\u5904\u7406\u5668\u6700\u591a\u53ef\u4ee5\u53d64\u6761\u6307\u4ee4\uff09","title":"2.4 \u8d85\u6807\u91cf\u5904\u7406\u5668\u7684\u53d6\u6307\u4ee4"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_3","text":"","title":"\u7b2c\u4e09\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#34-tlb","text":"TLB\u5c31\u662f\u9875\u8868\u7684Cache","title":"3.4 TLB"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_4","text":"\u5bf9**\u65b9\u5411**\u548c**\u76ee\u6807\u5730\u5740**\u90fd\u9700\u8981\u9884\u6d4b \u53ef\u4ee5\u5c06\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\u5728\u6307\u4ee4\u4eceL2 cache\u5199\u5165\u5230Icache\u4e4b\u524d\u8fdb\u884c**\u9884\u89e3\u7801**\uff08pre-decode\uff09\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u4fe1\u606f\u4e00\u8d77\u5199\u5230Icache\u4e2d \u5206\u652f\u9884\u6d4b\u6700\u597d\u65f6\u673a\u5c31\u662f\u5728\u5f53\u524d\u5468\u671f\u5f97\u5230\u53d6\u6307\u4ee4\u5730\u5740\u7684\u65f6\u5019 \u9700\u8981\u6839\u636ePC\u503c\u5224\u65ad\u672c\u5468\u671f\u7684**\u6307\u4ee4\u7ec4**\uff08fetch group\uff09\u4e2d\u662f\u5426\u5b58\u5728\u8df3\u8f6c\u6307\u4ee4 \u56e0\u4e3a\u6211\u4eec\u662f\u987a\u5e8f\u53cc\u53d1\uff0c\u6240\u4ee5\u672c\u5468\u671f\u7684\u6307\u4ee4\u7ec4\u53ea\u6709\u4e24\u4e2a\u6307\u4ee4","title":"\u7b2c\u56db\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#421","text":"\u521d\u59cb\u72b6\u6001\u4e00\u822c\u4e3a weakly not taken \u6216 strongly not taken \u4f7f\u7528\u683c\u96f7\u7801\u5bf9\u72b6\u6001\u673a\u8fdb\u884c\u7f16\u7801\uff0c\u51cf\u5c11\u51fa\u9519\u3001\u964d\u4f4e\u529f\u8017 PHT(Pattern History Table) \u5927\u5c0f\u4e3a2KB\u5c31\u6709\u5f88\u9ad8\u7684\u51c6\u786e\u7387\uff0893%\uff09 \u7531\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u7684\u6b63\u786e\u7387\u6709\u4e00\u4e2a\u6781\u9650\u503c\uff0c\u5f88\u96be\u8fbe\u523098%\u4ee5\u4e0a\u7684\u6b63\u786e\u7387\uff0c\u73b0\u4ee3\u5904\u7406\u5668\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002","title":"4.2.1\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#422","text":"\u5f53\u4e00\u6761\u5206\u652f\u6307\u4ee4\u5f97\u5230\u7ed3\u679c\u65f6\uff0c\u5c06PHT\u4e2d\u5bf9\u5e94\u7684\u8ba1\u6570\u5668\u8bfb\u51fa\u6765\uff0c\u66f4\u65b0\u597d\u540e\u518d\u5199\u56de\u5373\u53ef\u3002 \u5229\u7528BHT(branch history table)\u548cPHT\uff1a\u5c06\u5206\u652f\u6b64\u524d\u7684\u8df3\u8f6c\u60c5\u51b5\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u7d22\u5f15\u5bf9\u5e94\u60c5\u51b5\u7684PHT \u7531\u4e8e\u5bb9\u91cf\u7684\u9650\u5236\uff0cPC\u9700\u8981\u8fdb\u884chash\uff0c\u7136\u540e\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u6709\u4e24\u79cd\u51b2\u7a81\uff0c\u5982\u4e0b\u3002\u89e3\u51b3\u65b9\u6cd5\u6709\u4f4d\u62fc\u63a5\u6216**\u5f02\u6216\u6cd5** \u4e24\u6761\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u4e00\u4e2aBHR(branch history register) \u4e24\u6761\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u4e24\u4e2aBHR\uff0c\u4f46\u662f\u5b83\u4eecBHR\u7684\u5185\u5bb9\u4e00\u6837\uff0c\u5bf9\u5e94PHT\u4e2d\u7684\u540c\u4e00\u4e2a\u9971\u548c\u8ba1\u6570\u5668","title":"4.2.2\u5c40\u90e8\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#423","text":"\u7528GHR(global history register)\u8bb0\u5f55\u6240\u6709\u7684\u5206\u652f\u8df3\u8f6c\u60c5\u51b5 \u4e24\u6761PC\u7684GHR\u76f8\u540c\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684PC\u503c\u4e0d\u540c\uff0c\u540c\u6837\u5e94\u5bf9\u51b2\u7a81\u53ef\u4ee5\u7528\uff1a\u4f4d\u62fc\u63a5\u6216**\u5f02\u6216\u6cd5**","title":"4.2.3\u5168\u5c40\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#424","text":"\u53c2\u8003\u56fe4.25 \u5229\u7528CPHT(Choice PHT)\u6765\u5224\u65ad\u9009\u62e9GHR\u8fd8\u662fBHR \u540c\u6837\u7684\uff0c\u4e3a\u4e86\u51cf\u5c11\u51b2\u7a81\uff0c\u53ef\u4ee5\u628aGHR\u7684\u503c\u548cPC\u7684\u503c\u5f02\u6216\u540e\u5bf9CPHT\u8fdb\u884c\u7d22\u5f15","title":"4.2.4\u7ade\u4e89\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#425","text":"commit\u9636\u6bb5\u518d\u66f4\u65b0\u4f1a\u5bfc\u81f4\u540e\u7eed\u8ddf\u7684\u6bd4\u8f83\u7d27\u7684\u5176\u4ed6\u8df3\u8f6c\u6307\u4ee4\u83b7\u53d6\u4e0d\u4e86\u6700\u65b0\u7684GHR\uff0c\u4e0d\u81f3\u4e8e\u5f62\u540c\u865a\u8bbe\uff08\u4e66\u4e0a\u7684\u8bf4\u4f1a\u201c\u5f62\u540c\u865a\u8bbe\u201d\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u4e0d\u81f3\u4e8e\uff09\uff0c\u4f46\u662f\u4f1a\u6709\u4e00\u5b9a\u5f71\u54cd \u7efc\u5408\u6765\u770b\uff0c\u5728**\u53d6\u6307\u4ee4\u9636\u6bb5\u7528\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u5bf9GHR\u8fdb\u884c\u66f4\u65b0**\u662f\u4e0d\u9519\u7684\u505a\u6cd5\uff0c\u5c31\u7b97\u5f53\u524d\u9884\u6d4b\u9519\u4e86\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u5206\u652f\u6307\u4ee4\u4e5f\u4f1a\u56e0\u4e3a\u5f53\u524d\u5206\u652f\u9884\u6d4b\u5931\u8d25\u800c\u88ab\u51b2\u5237\u6389\uff0c\u4e0d\u4f1a\u6709\u8d1f\u9762\u5f71\u54cd\u3002\u4e0d\u8fc7\u7531\u4e8eGHR\u5199\u5165\u4e86\u4e00\u4e2a\u9519\u8bef\u503c\uff0c\u9700\u8981\u8fdb\u884c\u4fee\u590d \u7528FIFO\u7684Checkpoint GHR\u6765\u4f9d\u6b21\u4fdd\u5b58GHR\u7684\u503c \u5f53\u9884\u6d4b\u9519\u8bef\u65f6\u7528 \u66f4\u65b0BHR\u7684\u65f6\u5019\u53ef\u4ee5\u5728\u9000\u4f11\u7684\u518d\u66f4\u65b0\uff0c\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316\u8bbe\u7f6e\uff0c\u4e5f\u4e0d\u4f1a\u6709\u592a\u5927\u7684\u8d1f\u9762\u5f71\u54cd\uff1b\u800c\u9971\u548c\u8ba1\u6570\u5668\u7531\u4e8e\u4e00\u822c\u4f1a\u5904\u4e8e\u9971\u548c\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u6307\u4ee4\u5728\u9000\u4f11\u7684\u65f6\u5019\u518d\u66f4\u65b0","title":"4.2.5\u5206\u652f\u9884\u6d4b\u7684\u66f4\u65b0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#43","text":"","title":"4.3\u5206\u652f\u6307\u4ee4\u7684\u76ee\u6807\u5730\u5740\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#431pc-relative","text":"\u53d6\u503c\u9636\u6bb5\u9700\u8981n+1\u7ea7\u6d41\u6c34\u7ebf\uff08\u82e5ICache \u9700\u8981n\u4e2a\u5468\u671f\u8fd4\u56de\u6307\u4ee4\uff09 BTB(branch target buffer)\uff1a\u5b58\u50a8\u8df3\u8f6c\u6307\u4ee4\u5bf9\u5e94\u7684PC\u503c\uff0c\u4e0ecache\u7c7b\u4f3c\u3002 \u51cf\u5c11tag\u4f4d\u6570\uff08\u53ef\u4ee5\u4f4d\u622a\u53d6\uff0c\u6216\u8005**\u5f02\u6216\u8fd0\u7b97**\uff0cyyds\uff09\u4e0d\u4ec5\u8282\u7701BTB\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u4f1a\u5f15\u8d77\u5206\u652f\u9884\u6d4b\u4e89\u53d6\u7387\u7684\u964d\u4f4e\u3002 \u4e00\u822c\u53ea\u5c06**\u9884\u6d4b\u53d1\u751f\u8df3\u8f6c**\u7684\u5206\u652f\u6307\u4ee4\u5bf9\u5e94\u7684\u5730\u5740\u653e\u5230BTB\u4e2d BTB\u7f3a\u5931\u7684\u5904\u7406 \u505c\u6b62\u6267\u884c\uff1a\u9700\u8981\u52a0\u5165\u6c14\u6ce1\uff0c\u5c24\u5176\u662f\u95f4\u63a5\u8df3\u8f6c\u6307\u4ee4 \u7ee7\u7eed\u6267\u884c\uff1a\u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740\u53ef\u80fd\u4e0d\u8df3\u8f6c\uff0c\u7ee7\u7eed\u6267\u884c\u53ef\u80fd\u4f1a\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u529f\u8017\u5927","title":"4.3.1\u76f4\u63a5\u8df3\u8f6c\uff08PC-relative\uff09"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#432-absolute","text":"\u5927\u90e8\u5206\u95f4\u63a5\u8df3\u8f6c\u90fd\u662fCALL/Return\u6307\u4ee4\uff0c\u5b83\u4eec\u662f\u6709\u8ff9\u53ef\u5faa\u7684 RAS(Return Address Stack)\uff1a\u4fdd\u5b58\u6bcf\u6b21CALL\u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4 \u5728BTB\u4e2d\u4fdd\u5b58\u6307\u4ee4\u7684\u7c7b\u578b\uff08CALL\u3001Return\u6216\u5176\u5b83\uff09\uff0c\u56e0\u6b64\u5728\u5206\u652f\u9884\u6d4b\u9636\u6bb5\uff08\u7b2c\u4e00\u4e2a\u53d6\u503c\u9636\u6bb5\uff09\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u6307\u4ee4\u662f\u54ea\u4e00\u4e2a\u6307\u4ee4\uff0c\u8fdb\u800c\u5f97\u5230\u4e0b\u4e00\u4e2a\u6307\u4ee4\u7684\u5730\u5740 \u7528\u5e26**\u8ba1\u6570\u5668**\u7684RAS\u6765\u89e3\u51b3\u91cd\u590d\u7684\u9012\u5f52\u51fd\u6570 \u4f7f\u7528Target Cache\u9884\u6d4b\u5176\u5b83\u7c7b\u578b\u7684\u5206\u652f\u6307\u4ee4\u7684\u8df3\u8f6c\u5730\u5740\uff08\u4e0e\u9884\u6d4b\u662f\u5426\u8df3\u8f6c\u7c7b\u4f3c\uff09","title":"4.3.2 \u95f4\u63a5\u8df3\u8f6c\uff08absolute\uff09"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#433","text":"\u53c2\u8003\u56fe4.49 \u4f7f\u7528BHR\u3001GHR\u548c\u9971\u548c\u8ba1\u6570\u5668\u6765\u9884\u6d4b\u5206\u652f\u6307\u4ee4\u7684\u65b9\u5411\uff1b\u4f7f\u7528BTB\u3001RAS\u548cTarget Cache\u9884\u6d4b\u5206\u652f\u6307\u4ee4\u7684\u76ee\u6807\u5730\u5740\uff1b\u5b83\u4eec\u90fd\u662f\u57fa\u4e8e\u53d6\u503c\u9636\u6bb5\u7684PC\u503c\u6765\u9884\u6d4b\u7684","title":"4.3.3\u5c0f\u7ed3"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#44","text":"\u8be6\u89c1\u4e66\uff1a\u975e\u4e71\u5e8f\u6d41\u6c34\u7ebf\u5e94\u8be5\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6","title":"4.4\u5206\u652f\u9884\u6d4b\u5931\u8d25\u7684\u6062\u590d"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#45","text":"\u5bf9\u4e8e\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u8fd9\u4e48\u590d\u6742 **MIPS**\u4e2d\uff0c\u7a0b\u5e8f\u7edd\u5927\u90e8\u5206\u51fa\u73b0\u7684\u5206\u652f\u6307\u4ee4\u90fd\u662f\u76f4\u63a5\u8df3\u8f6c\uff08PC-relative\uff09\uff0c\u5b83\u4eec\u7684\u76ee\u6807\u5730\u5740\u53ef\u4ee5\u5f88\u5feb\u7b97\u51fa\u6765\uff0c\u4e0d\u5fc5\u8fdb\u884c\u76ee\u6807\u5730\u5740\u7684\u9884\u6d4b\uff0c\u800c\u662f\u5728\u53d6\u503c\u9636\u6bb5\u7b97\u51fa\u76ee\u6807\u5730\u5740\uff1b\u5f53\u7136\u5bf9\u4e8e\u975eReturn\u7684\u95f4\u63a5\u8df3\u8f6c\u5c31\u4e0d\u884c\u4e86\u3002 \u4f7f\u7528**\u4ea4\u53e0\u65b9\u5f0f**\uff08interleaving\uff09\u5b9e\u73b0\u591a\u7aef\u53e3\u8bbe\u8ba1\uff0c\u5728\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u5f88\u5e38\u7528\uff0c\u5982\u91cd\u6392\u5e8f\u7f13\u5b58\uff08ROB\uff09\u3001\u53d1\u5c04\u961f\u5217\uff08Issue Queue\uff09\u548c\u6307\u4ee4\u7f13\u5b58\uff08Instruction Buffer\uff09\u7b49","title":"4.5\u8d85\u6807\u91cf\u5904\u7406\u5668\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_5","text":"\u4e58\u6cd5/\u4e58\u7d2f\u52a0\u6307\u4ee4\u5728MIPS\u6307\u4ee4\u96c6\u4e2d\u4fdd\u5b58\u5728\u7279\u6b8a\u5bc4\u5b58\u5668Hi\u548cLo\u4e2d\uff0c\u4f46\u662f\u5728\u8d85\u6807\u91cf\u5bc4\u5b58\u5668\u91cc\u88ab\u8ba4\u4e3a\u662f33\u548c34\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u5bf9\u5b83\u4eec\u53ef\u4ee5\u8fdb\u884c\u6b63\u5e38\u7684\u5bc4\u5b58\u5668\u91cd\u547d\u540d \u7c7b\u4f3c\u7684\u6307\u4ee4\u53ef\u4ee5\u8fdb\u884c\u6307\u4ee4\u66f4\u6539\uff0c\u6bd4\u5982MULT\uff1a 31:26 25:21 20:16 15:6 5:0 Special 000000 rs rt 0 0000000000 MULT 011000 \u6211\u4eec\u53d1\u73b0\u5176\u4e2d[15:6]\u4f4d\u662f\u6ca1\u6709\u610f\u4e49\u7684, \u6b63\u597d\u53ef\u4ee5\u7f16\u7801\u4e24\u4e2a\u5bc4\u5b58\u5668, \u6240\u4ee5\u5c06\u6307\u4ee4\u6539\u6210\u5982\u4e0b 31:26 25:21 20:16 15:11 10:6 5:0 Special 000000 rs rt RdHi RdLo MULT 011000","title":"\u7b2c\u4e94\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_6","text":"","title":"\u7b2c\u516d\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#61","text":"\u6bcf\u5468\u671f\u7684\u53d6\u6307\u6570\u548c\u89e3\u7801\u6570\u4e0d\u5339\u914d \u5728\u53d6\u6307\u9636\u6bb5\u548c\u89e3\u7801\u9636\u6bb5\u4e4b\u95f4\u7684\u7f13\u5b58 \u6709\u6548\u6307\u4ee4\u7684\u4e2a\u6570\uff0c\u544a\u8bc9\u7f13\u5b58\u54ea\u4e9b\u6307\u4ee4\u662f\u6709\u6548\u7684 \u4e3a\u4e86\u51cf\u5c11\u5bf9\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u9636\u6bb5\u7684\u5f71\u54cd\uff0c\u4e00\u822c\u4f1a\u5c06\u7279\u6b8a\u6307\u4ee4\uff08\u7d2f\u4e58\u52a0\uff1a madd \uff09\u62c6\u5206\u6210\u4e24\u6761\u666e\u901a\u7684\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u53ea\u6709**\u4e00\u4e2a**\u76ee\u7684\u5bc4\u5b58\u5668 \u7528**\u4ea4\u53e0**\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u591a\u4e2a\u5355\u7aef\u53e3\u7684SRAM\u6765\u5b9e\u73b0\u6307\u4ee4\u5185\u5b58\u8fd9\u4e2a\u591a\u7aef\u53e3FIFO","title":"6.1 \u6307\u4ee4\u7f13\u5b58"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#62","text":"\u4ece\u6307\u4ee4\u7f13\u5b58\u4e2d\u8bfb\u53d6\u7684\u56db\u6761\u6307\u4ee4\u672a\u5fc5\u662f\u56db\u5b57\u5bf9\u9f50\u7684\uff0c\u9700\u8981\u6309\u987a\u5e8f\u6392\u5217\u597d","title":"6.2\u4e00\u822c\u60c5\u51b5"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#63","text":"","title":"6.3\u7279\u6b8a\u60c5\u51b5"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#631","text":"\u6bcf\u5468\u671f\u6700\u591a\u53ea\u6709\u4e00\u6761\u5206\u652f\u6307\u4ee4\uff08MIPS\u6307\u4ee4\u96c6\u6709\u5ef6\u8fdf\u69fd\uff0c\u6240\u4ee5\u987a\u5e8f\u53cc\u53d1\u4e0d\u53ef\u80fd\u9700\u8981\u5904\u7406\u4e24\u6761\uff09 \u89e3\u7801\u9636\u6bb5\u5bf9\u5206\u652f\u6307\u4ee4\u7684\u9884\u6d4b\u7684\u68c0\u67e5","title":"6.3.1 \u5206\u652f\u6307\u4ee4\u7684\u5904\u7406"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#632","text":"\u5728\u5904\u7406\u5668\u5185\u90e8\uff0c\u88ab\u62c6\u5206\u7684\u4e58\u7d2f\u52a0\u5728\u6d41\u6c34\u7ebf\u7684\u6267\u884c\u9636\u6bb5\uff0c\u4ecd\u7136\u4ee5\u4e00\u4e2a\u5b8c\u6574\u7684\u4e58\u7d2f\u52a0\u6307\u4ee4\u5b8c\u6210\uff1b\u62c6\u5206\u53ea\u662f\u66f4\u6709\u5229\u4e8e\u8fdb\u884c\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u548c\u4fbf\u4e8e\u5728ROB\u4e2d\u7684\u5b58\u653e\uff1b\u5728\u5199\u53d1\u5c04\u961f\u5217\u7684\u65f6\u5019\uff0c\u5c06\u4e24\u6761\u6307\u4ee4\u8fdb\u884c\u4e86\u878d\u5408\uff0c\u6700\u7ec8\u53d8\u6210\u4e00\u6761\u5b8c\u6574\u7684\u4e58\u7d2f\u52a0\u6216\u4e58\u6cd5\u6307\u4ee4 \u4e00\u4e2a\u5468\u671f\u591a\u4e2a\u590d\u6742\u6307\u4ee4\uff1a\u62c6\u5206\u5b8c\u540e\u53ea\u8fdb\u884c\u90e8\u5206\u89e3\u7801","title":"6.3.2\u4e58\u7d2f\u52a0/\u4e58\u6cd5\u6307\u4ee4\u7684\u5904\u7406"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_7","text":"","title":"\u7b2c\u4e03\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#71","text":"\u6709\u9650\u4e2a\u6570\u7684\u5bc4\u5b58\u5668\u5bfc\u81f4\u4e86\u4e0a\u8ff0\u7684\u5047\u76f8\u5173\u6027 \u5047\u7684\u76f8\u5173\u6027\u5236\u7ea6\u4e86\u539f\u59cb\u7a0b\u5e8f\u83b7\u5f97\u7684\u5e76\u884c\u6027","title":"7.1\u6982\u8ff0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_8","text":"\u91c7\u7528\u96c6\u4e2d\u5f0f\u53d1\u5c04\u961f\u5217\uff08Centralized Issue Queue\uff0cCIQ\uff09 \u91c7\u7528\u975e\u6570\u636e\u6355\u6349\uff08MIPS R10000\u548cAlpha 21264\uff09 \u65c1\u8def\u7f51\u7edc","title":"\u7b2c\u516b\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_9","text":"\u9000\u4f11\u7684\u65f6\u5019\u624d\u771f\u6b63\u66f4\u65b0\u5bc4\u5b58\u5668\u72b6\u6001 \u7528cluster\u5b9e\u73b0\u591a\u7aef\u53e3 CLZ\u6307\u4ee4\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff08\u5728MIPS\u4e2d\u5141\u8bb8\u6240\u6709\u7684\u4f4d\u4e3a0\uff09 AGU\uff08Address Generate Unit\uff09\u7528\u6765\u8ba1\u7b97\u5730\u5740\uff0c\u5728\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u7531\u4e8e\u5e76\u884c\u5904\u7406\u7684\u9700\u8981\u4ee5\u53ca\u8bbf\u5b58\u5bf9\u5904\u7406\u5668\u7684\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u5355\u72ec\u7528\u4e86\u4e00\u4e2aFU\u6765\u8ba1\u7b97\u5730\u5740\uff0c\u540c\u65f6\u8fdb\u884c\u5206\u652f\u68c0\u67e5 BRU\uff08Branch Unit\uff09\u8d1f\u8d23\u8ba1\u7b97\u5206\u652f\u6307\u4ee4\u7684\u76ee\u7684\u5730\u5740\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u6761\u4ef6\u6765\u51b3\u5b9a\u662f\u5426","title":"\u7b2c\u4e5d\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#93","text":"\u4ece\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u7684\u6570\u636e\u9700\u8981\u4e00\u5468\u671f\u7684\u65f6\u95f4\uff08 Source Drive \uff09\u624d\u80fd\u8fdb\u5165FU\u7684\u8f93\u5165\u7aef\uff1b\u540c\u7406FU\u8ba1\u7b97\u51fa\u7ed3\u679c\u4e5f\u9700\u8981\u4e00\u4e2a\u9636\u6bb5\uff08 Result Drive \uff09\u624d\u80fd\u5230\u8fbe\u6240\u6709\u7684FU\u7684\u8f93\u5165\u7aef \u4ece\u4e00\u4e2a\u8f93\u51fa\u5230\u53e6\u4e00\u4e2a\u8f93\u5165\u5982\u679c\u65f6\u95f4\u5f88\u957f\u4f1a\u8ba9execute\u7684\u65f6\u95f4\u53d8\u5c11\uff0c\u53ef\u4ee5\u7528\uff08Cluster\uff09\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898 \u4e24\u6761\u6307\u4ee4\u540c\u65f6\u60f3\u8981\u5360\u6709\u65c1\u8def\u7f51\u7edc\u53bb\u8f6c\u53d1\u6570\u636e\uff0c\u4f1a\u4ea7\u751f\u51b2\u7a81 \u4e0d\u9700\u8981\u5728\u6240\u6709\u7684FU\u4e4b\u95f4\u90fd\u8bbe\u7f6e\u65c1\u8def\u7f51\u7edc AGU\u8fdb\u884c\u5730\u5740\u8ba1\u7b97\u65f6\uff0c\u4e00\u822c\u90fd\u4f1a\u7528\u5230ALU\u7684\u7ed3\u679c\uff0c\u5c24\u5176\u662f\u95f4\u63a5\u8df3\u8f6c\uff08\u5bc4\u5b58\u5668\u8df3\u8f6c\uff09 load/store\u5355\u5143\u4e2dstore\u5355\u5143\u4e5f\u4e0d\u9700\u8981\u65c1\u8def","title":"9.3\u65c1\u8def\u7f51\u7edc"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#94","text":"\u5bc4\u5b58\u5668\u7684\u4fe1\u606f\u9700\u8981\u4fdd\u5b58\u5728\u4e00\u4e2a\u8868\u683c\u4e2d\uff08ScoreBoard\uff09 \u5c06ScoreBoard\u7684\u8bfb\u53d6\u653e\u5230\u6d41\u6c34\u7ebf\u7684RF Read\u9636\u6bb5\u53ef\u4ee5\u51cf\u5c11\u5bf9\u5468\u671f\u65f6\u95f4\u7684\u5f71\u54cd\uff0c\u4f46\u662f\u9700\u8981\u989d\u5916\u7684\u6bd4\u8f83\u7535\u8def\uff0c\u6b64\u5916\uff0cScoreBoard\u7684\u7535\u8def\u672c\u8eab\u5c31\u6bd4\u8f83\u590d\u6742 \u6709\u4e9b\u65f6\u5019**\u7b80\u5355\u7684\u5c31\u662f\u597d\u7684**\uff0c\u6bcf\u6761FU\u8ba1\u7b97\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u90fd\u8fdb\u884c\u5e7f\u64ad\uff08\u7c7b\u4f3c\u5355\u6307\u4ee4\u6d41\u6c34\u7ebf\u7684\u8f6c\u53d1\uff09","title":"9.4 \u64cd\u4f5c\u6570\u7684\u9009\u62e9"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#95-cluster","text":"\u548c\u4ea4\u53e0\uff08interleaving\uff09\u7c7b\u4f3c \u53d1\u5c04\u961f\u5217\u7684Cluster\u7ed3\u6784\uff1a\u5206\u5e03\u5f0f\u53d1\u5c04\u961f\u5217\uff08\u591a\u7aef\u53e3\u4f1a\u8017\u8d39\u5927\u91cf\u8d44\u6e90\uff0c\u540c\u65f6\u4f1a\u964d\u4f4e\u901f\u5ea6\uff09","title":"9.5 Cluster"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#951-cluster-iq","text":"\u4e0d\u540c\u7684\u5206\u5e03\u5f0f\u53d1\u5c04\u961f\u5217\u5904\u7406\u4e0d\u540c\u7684\u6307\u4ee4\uff0c\u5bf9\u5e94\u5c11\u6570\u7684\u4ef2\u88c1\u7535\u8def\u548cFU","title":"9.5.1 Cluster IQ"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#952-cluster-bypass","text":"\u65c1\u8def\u7f51\u7edc\u53ea\u5206\u5e03\u5728\u6bcf\u4e2aCluster\u5185\u90e8\uff0c\u8fdb\u800c\u51cf\u5c11\u5927\u91cf\u7684\u65c1\u8def\u7535\u8def \u5bf9\u4e8e\u4e71\u5e8f\u5904\u7406\u5668\u6765\u8bf4\uff0c\u4e0d\u540cCluster\u4e2d\u7684\u76f8\u90bb\u6307\u4ee4\u4e4b\u95f4\u53ef\u4ee5\u8c03\u5ea6\u5176\u5b83\u6307\u4ee4\u586b\u8865\u7a7a\u767d\uff1b\u4f46\u662f\u5bf9\u4e8e\u987a\u5e8f\u5904\u7406\u5668\uff0c\u65e0\u6cd5\u8c03\u5ea6\u53ea\u80fdbubble\u7684\u60c5\u51b5\u96be\u4ee5\u63a5\u53d7\uff0c\u4e00\u822c\u4f1a\u5c3d\u91cf\u91c7\u7528\u5b8c\u5168\u7684\u65c1\u8def\u7f51\u7edc\uff08Intel\u7684Atom\u5904\u7406\u5668\uff09\uff0c","title":"9.5.2 Cluster Bypass"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#96","text":"","title":"9.6 \u5b58\u50a8\u5668\u6307\u4ee4\u7684\u52a0\u901f"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#961-memory-disambiguation","text":"\u4e3a\u4e86\u964d\u4f4e\u8bbe\u8ba1\u96be\u5ea6\u548c\u5904\u7406\u5668\u4e2d\u5b58\u50a8\u5668\u7684\u6b63\u786e\u6027\uff0c\u5927\u90e8\u5206\u5904\u7406\u5668\u7684store\u6307\u4ee4\u662f\u987a\u5e8f\u6267\u884c\uff08in-order\uff09\uff0c\u800cload\u6307\u4ee4\u4e3b\u8981\u6709\u4e09\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5b8c\u5168\u7684\u987a\u5e8f\u6267\u884c \u5b8c\u5168\u7684\u987a\u5e8f\u6267\u884c\uff1a\u6700\u4fdd\u5b88\uff0c\u6027\u80fd\u4f4e\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\u57fa\u672c\u4e0d\u4f1a\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff08\u3002\u3002\u3002\u6211\u4eec\u5e94\u8be5\u662f\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff09","title":"9.6.1 Memory Disambiguation"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#962-cache","text":"\u975e\u963b\u585e\uff08Non-blocking\uff09Cache\uff1a\u5728\u53d1\u751fD-Cache\u7f3a\u5931\u7684\u65f6\u5019\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684load/store\u6307\u4ee4","title":"9.6.2 \u975e\u963b\u585eCache"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#963","text":"\u4ece\u4e0b\u7ea7\u6d41\u6c34\u7ebf\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5148\u8bfb\u6307\u4ee4\u6240\u9700\u8981\u7684\u6570\u636e\u5230cache line\u4e2d\uff0c\u8fd9\u6837CPU\u5c31\u5f97\u5230\u4e86\u60f3\u8981\u7684\u6570\u636e\uff0c\u800cD-cache\u4f1a\u7ee7\u7eed\u5b8c\u6210\u5176\u5b83\u6570\u636e\u7684\u586b\u5145\u3002\u4f46\u9700\u8981\u5728\u5b58\u50a8\u5668\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u786c\u4ef6\u624d\u80fd\u5b9e\u73b0 \u5173\u952e\u8bcd\u4f18\u5148\u548c\u63d0\u524d\u5f00\u59cb\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8eI-Cache\uff0c\u4f46\u662f\u8981\u4fdd\u8bc1\u539f\u59cb\u987a\u5e8f","title":"9.6.3 \u5173\u952e\u5b57\u4f18\u5148"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_10","text":"","title":"\u7b2c\u5341\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#101","text":"\u4ece\u5916\u90e8\u6765\u770b\uff0c\u5904\u7406\u5668\u603b\u65f6\u6309\u7167\u7a0b\u5e8f\u6307\u5b9a\u7684\u987a\u5e8f\u6267\u884c\uff1b\u4ece\u5185\u90e8\u6765\u770b\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\uff0c\u5c24\u5176\u662f\u4e71\u5e8f\u7684\uff0c\u5728\u5206\u53d1\u9636\u6bb5\uff08Dispatch\uff09\u6253\u4e71\u6307\u4ee4\uff0c\u7136\u540e\u5728\u63d0\u4ea4\u9636\u6bb5\uff08Commit\uff09\u62c9\u56de\u5230\u987a\u5e8f\u6267\u884c\uff0c\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u8d85\u6807\u91cf\u5904\u7406\u5668\u582a\u79f0\u4e00\u4e2a\u4f2a\u88c5\u9ad8\u624b\u3002","title":"10.1 \u6982\u8ff0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#104","text":"\u7531\u4e8estore\u6307\u4ee4\u6539\u53d8\u7a0b\u5e8f\u5458\u53ef\u89c1\u72b6\u6001\uff08architecture state\uff09\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5176\u5728\u6267\u884c\u9636\u6bb5\uff08\u5c24\u5176\u662f\u5199DCache\u7684\u65f6\u5019\u7684\uff09\u7684\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u67b6\u6784\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u5b58\u5728\u5728\u63d0\u4ea4\u9636\u6bb5\u624d\u68c0\u6d4b\u5230\u5206\u652f\u9884\u6d4b\u9519\u8bef\u7684\u53ef\u80fd\u6027\uff0c\u90a3\u4e48\u6b64\u524d\u7684\u6240\u6709\u6307\u4ee4\u90fd\u4e0d\u8be5\u88ab\u6267\u884c\uff0c\u8fd9\u70b9\u9700\u8981\u6ce8\u610f\u3002 \u5206\u652f\u9884\u6d4b\u4f7f\u5f97\u539f\u672c\u6d41\u6c34\u7ebf\u4e2d\u6307\u4ee4\u7684\u72b6\u6001\u53d8\u4e3a\u4e09\u79cd\uff08\u6b63\u5e38\u3001\u5f02\u5e38\u3001\u4e0d\u6267\u884c\uff09\uff0c\u589e\u52a0\u4e86\u5f02\u5e38\u5904\u7406\u7684\u590d\u6742\u3002 store\u6307\u4ee4\u7684\u5904\u7406\uff1a\u56e0\u4e3astore\u6307\u4ee4\u9000\u4f11\u7684\u65f6\u5019\u624d\u80fd\u5199\u56de\uff0c\u6b64\u65f6\u6216\u51fa\u73b0\u7f13\u5b58\u7f3a\u5931\uff0c\u5835\u585e\u4e86\u4e4b\u540e\u7684\u6307\u4ee4\u4f1a\u5bfc\u81f4\u5904\u7406\u5668\u6027\u80fd\u7684\u964d\u4f4e\u3002\u89e3\u51b3\u65b9\u6cd5\u4e3a\u5728Store Buffer\u4e2d\u589e\u52a0\u4e00\u4e2a\u72b6\u6001\u4f4d\u3002 RISC\u5904\u7406\u5668\u7684\u4e00\u4e2a\u8bbe\u8ba1\u601d\u60f3\uff1a\u4e0d\u4e3a\u4e0d\u7ecf\u5e38\u51fa\u73b0\u7684\u60c5\u51b5\u6d6a\u8d39\u786c\u4ef6\u8d44\u6e90","title":"10.4 \u7279\u6b8a\u60c5\u51b5\u7684\u5904\u7406"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#_11","text":"","title":"\u7b2c\u5341\u4e00\u7ae0"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#112","text":"Alpha 21264\u91c7\u7528\u4e24\u7ea7\u6d41\u6c34\u7ebf\u6765\u8bbf\u95eeICache\uff0c\u7b2c\u4e00\u7ea7\u5f97\u5230ICache\u4e2d\u7684\u6307\u4ee4\u548cTag\uff0c\u7b2c\u4e8c\u7ea7\u8fdb\u884cTag\u6bd4\u8f83\uff0c\u540c\u65f6\u628a\u6307\u4ee4\u9001\u5230\u89e3\u7801\u5668\u7b49\u76f8\u5173\u90e8\u4ef6\u4e2d \u4e24\u79cd\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff1a\u7b2c\u4e00\u79cd\u7b80\u5355\uff0c\u7b2c\u4e8c\u79cd\u590d\u6742\u9700\u4e24\u4e2a\u5468\u671f\uff0c\u5982\u679c\u4e24\u79cd\u65b9\u6cd5\u590d\u6d4b\u7ed3\u679c\u4e0d\u4e00\u6837\uff0c\u5219bubble\u6389\u7b80\u5355\u9884\u6d4b\u7684\u6307\u4ee4\uff0c\u91c7\u7528\u590d\u6742\u65b9\u5f0f\u9884\u6d4b\u7684\u6307\u4ee4\u3002","title":"11.2 \u53d6\u6307\u4ee4\u548c\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#1121-lineway","text":"\u672c\u8d28\u4e0a\u5c31\u662f\u628aBTB\u653e\u5230\u4e86ICache\u4e2d\uff0c\u56e0\u4e3a21264\u5904\u7406\u5668\u6bcf\u5468\u671f\u53d6\u51fa\u7684\u56db\u6761\u6307\u4ee4\u5728\u56db\u5b57\u5bf9\u9f50\u7684\u8fb9\u754c\u4e4b\u5185\uff0c\u6240\u4ee5\u6bcf\u56db\u6761\u6307\u4ee4\u7528\u4e00\u4e2aline/way\u9884\u6d4b \u9884\u6d4b\u4fe1\u606f\u5305\u542b\u4e09\u4e2a\u5185\u5bb9\uff1a\uff081\uff09successor way\uff1a\u4e0b\u4e2a\u5468\u671f\u53d6\u51fa\u7684fetch group\u5728ICache\u4e2d\u7684way\uff0c\uff082\uff09successor index\uff1a\u4e0b\u4e2a\u5468\u671f\u8981\u53d6\u51fa\u7684\u4e00\u7ec4\u6307\u4ee4\u4e2d\u5728Cache line\u4e2d\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u5148\u627e\u5230Cache line\uff0c\u7136\u540e\u518d\u627e\u5176\u5728Cache line\u4e2d\u7684\u4f4d\u7f6e\u3002\uff083\uff09branch position\uff1a\u672c\u5468\u671f\u53d6\u51fa\u7684\u6307\u4ee4\u7ec4\u4e2d\uff0c\u82e5\u5b58\u5728\u9884\u6d4b\u8df3\u8f6c\u7684\u5206\u652f\u6307\u4ee4\uff0c\u5b58\u50a8\u8be5\u6307\u4ee4\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u50a8\u5206\u652f\u6307\u4ee4\u7684\u4f4d\u7f6e\u662f\u56e0\u4e3a\uff1a\u4e00\u3001\u66f4\u5bb9\u6613\u627e\u5230\u672c\u5468\u671f\u4e2d\u54ea\u4e9b\u6307\u4ee4\u4e0d\u8be5\u8fdb\u5165\u6d41\u6c34\u7ebf\uff1b\u4e8c\u3001\u752800\u5c31\u53ef\u4ee5\u8868\u793a\u51fa\u201c\u672c\u5468\u671f\u53d6\u51fa\u7684\u6307\u4ee4\u90fd\u9700\u8981\u8fdb\u5165\u6d41\u6c34\u7ebf\u201d\u8fd9\u4e2a\u4fe1\u606f\u3002 \u53ef\u4ee5\u7528\u4e24\u4f4d\u9971\u548c\u8ba1\u6570\u5668\u7684\u65b9\u5f0f\u6765\u7ba1\u7406line/way\u7684\u9884\u6d4b\u503c \u540c\u65f6\u4e5f\u6709\u4e09\u4e2a\u95ee\u9898\uff1a\uff081\uff09\u5f88\u591aCache line\u6ca1\u6709\u5206\u652f\u6307\u4ee4\uff0c\u6d6a\u8d39\u5206\u652f\u6307\u4ee4\u7684\u4fe1\u606f\uff0c\u800c\u72ec\u7acb\u7684BTB\u53ea\u4f1a\u628a\u9884\u6d4b\u7ed3\u679c\u662f\u8df3\u8f6c\u7684\u6307\u4ee4\u653e\u5728BTB\u4e2d\uff082\uff09Cache\u5360\u7528\u66f4\u591a\u7684\u8d44\u6e90\uff083\uff09\u6bcf\u5f53Cache line\u88ab\u66ff\u6362\uff0c\u5b83\u5305\u542b\u7684\u9884\u6d4b\u4fe1\u606f\u5c31\u6d88\u5931\u4e86\uff0c\u800c\u72ec\u7acb\u7684BTB\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\u3002 \u914d\u5408\u4f7f\u7528virtually-indexed\uff0cvirtually-tagged\u7ed3\u6784\u7684Cache\u66f4\u5408\u7406","title":"11.2.1 line/way\u7684\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#1122","text":"21264\u5904\u7406\u5668\u7684\u590d\u6742\u5206\u652f\u9884\u6d4b\u4e0e\u7b80\u5355\u5206\u652f\u9884\u6d4b\u7684\u51b2\u7a81 \u57fa\u4e8e\u5168\u5c40\u5386\u53f2\u7684\u9884\u6d4b\u548c\u5c40\u90e8\u5386\u53f2\u7684\u9884\u6d4b\u7684\u51b2\u7a81 \u5bf9\u4e8e\u57fa\u4e8e\u5c40\u90e8\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff0c\u4f7f\u7528\u975e\u63a8\u6d4b\uff08non-speculative\uff09\u7684\u65b9\u5f0f\u66f4\u65b0\uff1b\u5bf9\u4e8e\u57fa\u4e8e\u5168\u5c40\u5386\u53f2\u7684\u5206\u652f\u9884\u6d4b\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e86\u63a8\u6d4b\u7684\u5206\u5f0f\u66f4\u65b0\uff0c\u6240\u4ee5GHR\u7684\u72b6\u6001\u53ef\u80fd\u4e0d\u6b63\u786e\uff0c\u6240\u4ee5\u9700\u8981\u7528\u7c7b\u4f3c\u4e8eCheckpoint\u7684\u65b9\u6cd5\u8fdb\u884c\u66f4\u65b0\u3002","title":"11.2.2 \u5206\u652f\u9884\u6d4b"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#114","text":"\u5c06\u5bc4\u5b58\u5668\u5806\u590d\u5236\u7684\u65b9\u6cd5\u662fCluster\u7ed3\u6784\u4e2d\u5e38\u7528\u7684\u65b9\u6cd5\u4e4b\u4e00\uff0c\u51cf\u5c11\u4e86\u5bc4\u5b58\u5668\u5bf9\u7684\u8bfb\u7aef\u53e3\uff0c\u8bbf\u95ee\u5bc4\u5b58\u5668\u9000\u7684\u901f\u5ea6\u4f1a\u63d0\u9ad8\uff0c\u603b\u7684\u9762\u79ef\u4e5f\u4e0d\u4f1a\u663e\u8457\u589e\u591a\u3002","title":"11.4 \u53d1\u5c04"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#115","text":"","title":"11.5 \u6267\u884c\u5355\u5143"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#1151","text":"Cluster\u7ed3\u6784\u4e2d\uff0c\u82e5\u4e24\u6761\u76f8\u90bb\u7684\u76f8\u5173\u6307\u4ee4\u662f\u5728\u540c\u4e00Cluster\u5185\u6267\u884c\u7684\uff0c\u5c31\u53ef\u4ee5\u80cc\u9760\u80cc\u6267\u884c\uff1b\u82e5\u5728\u4e0d\u540c\u7684Cluster\uff0c\u5219\u9700\u8981\u8de8\u8d8aCluster\uff0c\u9700\u8981\u5355\u72ec\u7684\u4e00\u4e2a\u5468\u671f\u6765\u4f20\u9012 \u5bc4\u5b58\u5668\u5806\u6709\u4e13\u95e8\u4f9bload\u6307\u4ee4\u4f7f\u7528\u7684\u5199\u7aef\u53e3\uff0c\u4ee5\u6b64\u6765\u63d0\u9ad8load\u6307\u4ee4\u7684\u6267\u884c\u6548\u7387","title":"11.5.1 \u6574\u6570\u7684\u6267\u884c\u5355\u5143"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#1152","text":"\u6d6e\u70b9\u6570\u6709\u4e13\u95e8\u7684\u5904\u7406\u5355\u5143\uff0c\u5305\u62ec\u52a0\u6cd5\u3001\u4e58\u6cd5\u3001\u9664\u6cd5\u7b49","title":"11.5.2 \u6d6e\u70b9\u6570\u7684\u6267\u884c\u5355\u5143"},{"location":"competition/%E8%B6%85%E6%A0%87%E9%87%8F%E5%A4%84%E7%90%86%E5%99%A8%E7%AC%94%E8%AE%B0/#118","text":"Alpha 21264 \u5904\u7406\u5668\u5728\u5f88\u591a\u65b9\u9762\u505a\u51fa\u4e86\u6709\u76ca\u7684\u5c1d\u8bd5","title":"11.8 \u7ed3\u8bba"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/","text":"\u9f99\u82af\u676f\u8d44\u6599\u6c47\u603b \u00b6 2021/6/11 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u4ece\u5404\u4e2a\u5730\u65b9\u6c47\u603b\u7684\u8d44\u6599\uff0c\u4e3a\u6211\u4eec\u5b9e\u73b0\u7684\u67b6\u6784\u4f5c\u53c2\u8003 \u9605\u8bfb\u987b\u77e5 \u00b6 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u6b63\u5728\u53c2\u52a0\u7684\u201c\u9f99\u82af\u676f\u201d\u6bd4\u8d5b\u7684\u6587\u6863\uff0c\u540e\u7eed\u4f1a\u8fdb\u4e00\u6b65\u66f4\u65b0 ==\u9ec4\u8272\u6807\u8bb0\u90e8\u5206==\u8868\u660e\u6b64\u5904\u6700\u8fd1\u5728\u66f4\u65b0 \u5b9e\u73b0\u7ec6\u8282\u4e2d\u76f8\u5bf9\u590d\u6742\u7684\u7b56\u7565\u5355\u72ec\u5217\u4e86\u4e00\u4e2a**\u7b56\u7565\u680f**\u6765\u9610\u91ca \u53c2\u8003\u8d44\u6599 \u00b6 \u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1 19\u5e74\u9f99\u82af\u676f\u6e05\u534e\u961f\u51b3\u8d5b\u62a5\u544a \u590d\u65e6\u5927\u5b66 FDU1.1 \u961f\u5728\u7b2c\u56db\u5c4a\u201c\u9f99\u82af\u676f\u201d\u7684 \u53c2\u8d5b\u4f5c\u54c1 \u859b\u632f\u6881\u52a9\u6559\u7684 PPT \uff1a ICS Final Project Topics \u3001 RAM on FPGA \u8c2d\u4e00\u51e1\u52a9\u6559\u5199\u7684 labs \uff1a github\u7f51\u9875 \u5e38\u89c1\u95ee\u9898 \u00b6 \u9f99\u82af\u676f\u7684top\u6587\u4ef6\u9700\u8981\u81ea\u5df1\u5199\u5417\uff1f \u672c\u5b66\u671f\u7684top\u6587\u4ef6\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u9f99\u82af\u676f\u7684top\uff0c\u53ef\u4ee5\u53c2\u8003\u90a3\u4e2a\u3002 \u53cc\u53d1\u6d41\u6c34\u7ebf\u5982\u4f55\u8fdb\u884cgolden trace\u7684\u6bd4\u5bf9\uff1f \u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u5207\u6362\u7684\u65f6\u5019\u9700\u8981\u6211\u4eec\u4fdd\u5b58\u5904\u7406\u5668\u72b6\u6001\u5417\uff1f linux \u4eff\u771f \u529f\u80fd\u6d4b\u8bd5\u9700\u8981\u5f02\u5e38\u5904\u7406\u5417\uff1f \u5668\u4ef6\u540d\u79f0\u8868 \u00b6 \u7f29\u5199 \u5168\u79f0 \u610f\u601d \u4f5c\u7528 BIT Branch Instruction Table \u5206\u652f\u6307\u4ee4\u8868 \u7528PC\u9884\u6d4b\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 BB Branch Buffer \u5206\u652f\u6682\u5b58\u5668 \u4fdd\u5b58\u5f53\u524d\u5206\u652f\u7684\u4fe1\u606f\uff0c\u4ee5\u7b49\u5f85\u5ef6\u8fdf\u69fd\u7684\u53d6\u6765 PHT Pattern History Table \u8df3\u8f6c\u5386\u53f2\u8868 \u7528\u4ee5\u524d\u7684\u8df3\u8f6c\u8bb0\u5f55\u6765\u5224\u65ad\u5f53\u524d\u7684\u8df3\u8f6c BTB Branch Target Buffer \u8df3\u8f6c\u5730\u5740\u7f13\u5b58 \u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740 RAS Return Address Stack \u8fd4\u56de\u5730\u5740\u6808 \u5145\u5f53\u51fd\u6570\u8c03\u7528\u548c\u8fd4\u56de\u7684\u786c\u4ef6\u6808 ICache Instruction Cache \u6307\u4ee4Cache \u7f13\u5b58\u5185\u5b58\u5230CPU\u7684\u6307\u4ee4 DCache Data Cache \u6570\u636eCache \u7f13\u5b58\u5185\u5b58\u5230CPU\u7684\u6570\u636e FU functional unit \u8ba1\u7b97\u5355\u5143 \u5728\u6267\u884c\u9636\u6bb5\u8ba1\u7b97\u6570\u636e CPU central processing unit \u4e2d\u592e\u5904\u7406\u5668 \u5904\u7406\u6240\u6709\u7684\u6307\u4ee4 TLB translation lookaside buffer \u8f6c\u79fb\u540e\u5907\u7f13\u51b2\u533a \u7f13\u5b58\u865a\u62df\u5730\u5740\u548c\u5176\u6620\u5c04\u7684\u7269\u7406\u5730\u5740 \u62d3\u5c55\u5185\u5bb9 \u00b6 \u6307\u4ee4\u96c6 \u00b6 \u9700\u8981\u5b9e\u73b0\u7684\u6307\u4ee4: \u666e\u901a\u90e8\u5206 \u3001 \u5916\u8bbe\u90e8\u5206 CLO\u548cCLZ\u53ef\u4ee5\u5171\u7528\u4e00\u5957\u786c\u4ef6\u7535\u8def\uff0c\u4f46\u662f\u5c31\u4e0d\u80fd\u540c\u65f6\u5904\u7406\u4e24\u6761\u6307\u4ee4\u4e86 \u7248\u672c\u63a7\u5236 \u00b6 github actions\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u90e8\u7f72\uff1a\u81ea\u52a8\u90e8\u7f72\u7f51\u7ad9\u548c\u7528verilator\u6d4b\u8bd5 git\u6a21\u5757\u5904\u7406\uff1agit submodule \u90e8\u4ef6\u8d44\u6599 \u00b6 ICache \u00b6 \u7ec4\u76f8\u8fde\u7ed3\u6784\u3001\u6d41\u6c34\u7ebfCache\u3001\u591a\u7aef\u53e3\u8bfb\u53d6\uff08Mult-banking\uff09\u3001\u9884\u89e3\u7801\u3001\u786c\u4ef6\u9884\u53d6\u3001victim Cache\u3001\u4f2aLRU\u66ff\u6362\u7b56\u7565 Cache\u5e03\u5c40\u56fe\uff1a\u8be6\u89c1\u62d3\u5c55\u8d44\u6599\uff08Cache\u5e03\u5c40\u56fe\uff09 \u53d6\u503c\u65b9\u5f0f\uff1a\u4e24\u79cd\u65b9\u5f0f\uff0c\u76ee\u524d\u503e\u5411\u4e8e\u7528\u7b2c\u4e00\u79cd\uff1a\uff081\uff09\u6bcf\u6b21\u4ece\u5f53\u524d\u5730\u5740\u5f00\u59cb\u5f80\u540e\u53d6\u6ee1\u4e00\u4e2acacheline\uff0c\u5224\u65ad\u903b\u8f91\u5728\u6d41\u6c34\u7ebf\u9636\u6bb5\u5b8c\u6210\uff08\u8be6\u89c1\u6d41\u6c34\u7ebf\u53d6\u6307\u903b\u8f91\uff09\uff082\uff09\u4ece\u5f53\u524d\u5730\u5740\u5f00\u59cb\u5f80\u540e\u53d6\u4e24\u6761\u6216\u4e09\u6761\u6307\u4ee4\uff0c\u53d6\u51b3\u4e8e\u7b2c\u4e8c\u6761\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 \u4e00\u4e2acacheline\u4e2d\u6709\u8df3\u8f6c\u6307\u4ee4\uff1a\u82e5\u8be5\u6307\u4ee4\u8df3\u8f6c\uff0c\u5219\u5ef6\u8fdf\u69fd\u4e4b\u540e\u7684\u6307\u4ee4\u4e0d\u5e94\u8be5\u6267\u884c cacheline\u6700\u540e\u4e00\u6761\u6307\u4ee4\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff1a\u5219\u5fc5\u987b\u53d6\u5b8c\u4e0b\u4e00\u6761cacheline\u540e\u518d\u5224\u65ad\u5206\u652f\u6307\u4ee4\uff0c\u7528\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u5904\u7406 cacheline\u6709\u4e24\u6761\u5206\u652f\u6307\u4ee4 \u5176\u5b83\u7ec6\u8282\u95ee\u9898\uff1a\u6bcf\u5468\u671f\u53ea\u80fd\u8bbf\u95ee\u4e00\u4e2acacheline \u5206\u652f\u9884\u6d4b\u5668 \u00b6 \u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b\uff1a\u8be6\u89c1\u62d3\u5c55\u8d44\u6599\uff08\u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b\uff09 \u6298\u4e2d\u7684\u5206\u652f\u9884\u6d4b\uff1a\u5206\u652f\u9884\u6d4b\u53ea\u9488\u5bf9\u95f4\u63a5\u8df3\u8f6c\u6307\u4ee4\uff08\u5bc4\u5b58\u5668\u8df3\u8f6c\uff09\uff0c\u5176\u5b83\u8df3\u8f6c\u6307\u4ee4\uff08Call\u3001return\u6216PC\u76f4\u63a5\u8df3\u8f6c\uff09\u5728\u63a5\u6536\u5230ICache\u8fd4\u56de\u7684\u6307\u4ee4\u540e\u5feb\u901f\u8fdb\u884c\u5224\u65ad\u3002 \u5176\u5b83\u7684\u7ec6\u8282\u95ee\u9898\uff1a\uff081\uff09BIT\u548cCPHT\u6570\u91cf\u7684\u5dee\u522b\uff1a\u4e0e\u8df3\u8f6c\u6307\u4ee4\u7684\u5360\u6bd4\u6709\u5173\uff082\uff09\u7531\u4e8eBIT\u7684\u5b58\u5728\uff0cBTB\u4e0d\u8bbe\u7f6etag\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7f3a\u5931\uff08\u9664\u4e86\u4e00\u5f00\u59cb\u7684\u5f3a\u5236\u7f3a\u5931\uff09 \u53d1\u5c04\u961f\u5217 \u00b6 \u53cc\u961f\u5217\u4ea4\u53e0\uff08\u8003\u8651\u4e86\u786c\u4ef6\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\uff09\u3001\u4e24\u4e2a\u8bfb\u7aef\u53e3\u548c\u51e0\u4e2a\u5199\u7aef\u53e3 \u51e0\u4e2a\u5199\u7aef\u53e3 \uff1a\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u90fd\u9700\u8981\u7528\u63a7\u5236\u903b\u8f91\u5904\u7406\u5206\u652f\u6307\u4ee4\u548c\u5ef6\u8fdf\u69fd\u7684\u95ee\u9898\u3002\uff081\uff09\u56db\u4e2a\u5199\u7aef\u53e3\uff1a\u7d27\u51d1\u4f46\u662f\u6d6a\u8d39\u786c\u4ef6\uff08 \u5176\u5b9e\u65e0\u6240\u8c13 \uff0c\u54b1\u4eec\u5199\u4ee3\u7801\u7684\uff09\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u53cc\u53d1\u662f\u74f6\u9888\uff082\uff09\u4e09\u4e2a\u5199\u7aef\u53e3\uff1a\u53cc\u961f\u5217\u4ea4\u53e0\u53ef\u80fd\u5c31\u4e0d\u65b9\u4fbf\u4e86\uff0c\u4e13\u95e8\u5904\u7406MIPS\u6307\u4ee4\u4e2d\u7684\u5206\u652f\u6307\u4ee4+\u5ef6\u8fdf\u69fd\uff0819\u5e74\u6e05\u534e\u5927\u5b66\u961f\uff09\uff083\uff09\u4e24\u4e2a\u5199\u7aef\u53e3\uff1a\u6734\u5b9e\u65e0\u534e\uff0820\u5e74\u590d\u65e6\u5927\u5b66\u961f\uff09 \u53d1\u5c04\u961f\u5217\u600e\u4e48\u5224\u65ad\u54ea\u4e9b\u4f4d\u7f6e\u662f\u6709\u6548\u7684\uff1a \u7528\u7d22\u5f15\u6216\u6709\u6548\u4f4d\u904d\u5386 \u961f\u5217\u6ee1\uff1a\u6d41\u6c34\u7ebf\u6682\u505c\u6216\u5f53\u524d\u6307\u4ee4\u91cd\u53d6 DCache \u00b6 \u7ec4\u76f8\u8fde\u7ed3\u6784\u3001\u6d41\u6c34\u7ebf\u3001 \u5355\u7aef\u53e3\u8bfb\u5199 \u3001\u56de\u5199\uff08write back\uff09\u3001\u5199\u7f13\u5b58\uff08write buffer\uff09\u3001victim cache\u3001\u4f2aLRU\u66ff\u6362\u7b56\u7565 \u6839\u636e MIPS\u6807\u51c6\u8981\u6c42\uff0c\u5bf9\u4e8e\u4e0d\u540c\u6bb5\u7684\u8bbf\u5b58\uff0c\u6570\u636e\u7f13\u5b58\u884c\u4e3a\u4e0d\u540c\uff1a\uff081\uff09 kseg3/ksseg \u6309 TLB \u5224\u65ad\u662f\u5426\u7ecf\u8fc7\u7f13\u5b58\uff082\uff09 kseg1 \u4e0d\u7ecf\u8fc7\u7f13\u5b58\uff083\uff09 kseg0 \u53ef\u7531 CP0 ConfigK0 \u5bc4\u5b58\u5668\u63a7\u5236\uff0cMIPS \u6807\u51c6\u4e2d\u8fd9\u4e00\u884c\u4e3a\u7684\u5b9e\u73b0\u53ef\u9009\uff084\uff09 useg \u6309 TLB \u5224\u65ad\u662f\u5426\u7ecf\u8fc7\u7f13\u5b58 \u5355\u7aef\u53e3\u8bfb\u5199\uff1a\u53ea\u6709\u4e00\u4e2a\u8bbf\u5b58\u5355\u5143\uff0c\u800c\u4e14\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316DCache\u7684\u903b\u8f91\uff0c \u5f53\u7136\u5199Cache\u7684\u4eba\u60f3\u591a\u7aef\u53e3\u4e5f\u6ca1\u95ee\u9898 \u200b\u200b\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u4e24\u4e2a\u8bbf\u5b58\u5355\u5143\u4e86 \u91c7\u7528\u56de\u5199\u7b56\u7565\uff08write back\uff09\uff1a\u810f\u6570\u636e\u88ab\u66ff\u6362\u7684\u65f6\u5019\u624d\u5199\u56de \u5199\u7f13\u5b58\uff08write buffer\uff09\uff1a\u5199\u56de\u65f6\u5199\u5230\u7f13\u5b58\u4e2d\uff0c\u7b49\u603b\u7ebf\u7a7a\u95f2\u7684\u65f6\u5019\u518d\u5199\u7f13\u5b58\u518d\u5199\u5230\u5185\u5b58\u4e2d\uff0c\u4e0d\u8fc7Cache\u7f3a\u5931\u65f6\uff0c\u9700\u8981\u5148\u5728\u5199\u7f13\u5b58\u91cc\u627e\uff0c\u5224\u65ad\u662f\u5426\u5728\u5176\u4e2d\u3002 \u6d41\u6c34\u7ebf\u8bbf\u95ee\uff1a\u5148\u5199\u540e\u8bfb\u51b2\u7a81\uff0c\u7528Delayed Store Addr\u548cDelayed Store Data\u5bc4\u5b58\u5668\u89e3\u51b3\uff0c\u7c7b\u4f3c\u4e8e\u8f6c\u53d1 Store Buffer \u00b6 \u8fd9\u4e2a\u5668\u4ef6\u8ddf\u6574\u4f53\u7684\u8bbe\u8ba1\u6709\u5173\uff0c\u5982\u679c\u80fd\u4fdd\u8bc1\u6267\u884c\u9636\u6bb5store\u6b63\u786e\u6027\u7684\u8bdd\u53ef\u4ee5\u4e0d\u8981 store\u6307\u4ee4\u8ba1\u7b97\u5b8c\u540e\u653e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230\u9000\u4f11\uff08retire\uff09\u624d\u771f\u6b63\u5199\u56deDCache\uff0c\u8fd9\u6837\u7684\u8bddload\u6307\u4ee4\u9700\u8981\u5148\u4eceStore Buffer\u91cc\u627e\u5bf9\u5e94\u7684\u6307\u4ee4 L2 Cache \u00b6 \u5355\u7aef\u53e3 \u4e58\u9664\u6cd5\u5668\u4ef6 \u00b6 \u4e00\u4e2a\u4e58\u6cd5\u5668\u548c\u4e00\u4e2a\u9664\u6cd5\u5668\uff08\u8003\u8651\u5230MIPS\u4e58\u9664\u6cd5\u6307\u4ee4\u4e4b\u95f4\u4f1a\u6709\u79fb\u52a8Hi\u3001Lo\u7684\u6307\u4ee4\uff0c\u6240\u4ee5\u4e0d\u592a\u53ef\u80fd\u4e24\u6761\u4e58/\u9664\u6cd5\u8fde\u5728\u4e00\u8d77\uff09\uff0c\u82e5\u8fde\u7eed\u4e24\u6761\u4e58\u9664\u6cd5\u6307\u4ee4\uff0c\u5219\u53ea\u53d1\u5c04\u7b2c\u4e00\u6761 \u8bbf\u5b58FU \u00b6 \u8bbe\u7f6e\u4e00\u4e2a\uff08\u8fde\u7eed\u4e24\u6761\u6307\u4ee4\u4e3aload\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\uff0c\u6ca1\u6709\u5fc5\u8981\u4e3a\u6b64\u589e\u52a0\u5927\u91cf\u7684\u786c\u4ef6\uff09\uff0c\u82e5\u540c\u65f6\u6709\u4e24\u6761load\u6307\u4ee4\uff0c\u5219\u53ea\u53d1\u5c04\u7b2c\u4e00\u6761\u3002 \u786c\u4ef6\u6808 \u00b6 RAS(Return Address Stack)\uff1a\u5e26\u8ba1\u6570\u5668\u7684\u6808\uff0c\u89e3\u51b3\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u7684\u9012\u5f52\u95ee\u9898\u3002 \u6570\u636e\u65c1\u8def \u00b6 ScoreBoard \u5bc4\u5b58\u5668\u6587\u4ef6 \u00b6 \u56db\u4e2a\u8bfb\u7aef\u53e3\u3001\u4e24\u4e2a\u5199\u7aef\u53e3\u3001Hi\u548cLo\u5bc4\u5b58\u5668\uff08\u7279\u5224\uff09 TLB \u00b6 \u7b56\u7565 \u00b6 \u7ec4\u76f8\u8054\u7ed3\u6784 \u00b6 \u9884\u89e3\u7801\uff08pre-code\uff09 \u00b6 \u89e3\u91ca\uff1aICache\u83b7\u53d6\u5185\u5b58\u7684\u6570\u636e\u7684\u65f6\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\uff0c\u5e76\u5c06\u7ed3\u679c\u53e6\u5916\u4fdd\u5b58\u5728ICache\u4e2d \u6d41\u6c34\u7ebfCache \u00b6 \u89e3\u91ca\uff1a\u50cf\u6d41\u6c34\u7ebf\u4e00\u6837\u5904\u7406Cache\uff0c\u964d\u4f4e\u65f6\u949f\u9891\u7387 victim cache \u00b6 \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.2.4 \u89e3\u91ca\uff1a\u9632\u6b62\u88ab\u8e22\u51fa\u7684\u6570\u636e\u9a6c\u4e0a\u88ab\u5229\u7528\uff0c\u800c\u4e0e\u4e4b\u76f8\u5bf9\u7684Filter Cache\u5219\u662f\u9632\u6b62\u4e0d\u4f1a\u518d\u7528\u7684\u6570\u636e\u4e00\u76f4\u4e0d\u88ab\u8e22\u51fa \u9884\u53d6\uff08prefetching\uff09 \u00b6 \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.2.5 \u89e3\u91ca\uff1a\u5b57\u5982\u5176\u540d\uff0c\u63d0\u524d\u628a\u989d\u5916\u7684\u6570\u636e\uff08\u5f53\u524dCacheline\u7684\u4e0b\u51e0\u6761Cacheline\u7b49\u5c06\u6765\u53ef\u80fd\u4f1a\u7528\u5230\u7684\uff09\u53d6\u597d ICache\u6548\u679c\u6bd4DCache\u8981\u597d\uff0cDCache\u53ef\u4ee5\u4e0d\u4f7f\u7528\u9884\u53d6 \u4e3a\u4e86\u9632\u6b62\u9884\u53d6\u7684\u6570\u636e\u6ca1\u6709\u7528\u9020\u6210\u201cCache \u6c61\u67d3\u201d\uff0c\u53ef\u4ee5\u5c06\u9884\u53d6\u7684\u6307\u4ee4\u653e\u5230\u5355\u72ec\u7684\u4e00\u4e2a\u7f13\u5b58\uff08Stream Buffer\uff09\u4e2d\u3002\uff08Alpha 21064\u5bf9\u6307\u4ee4\u9884\u53d6\u4f7f\u7528\u7684\u65b9\u6cd5\uff09 ScoreBoard \u00b6 \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b1.3.1 \u89e3\u91ca\uff1a\u7528\u6765\u8f6c\u53d1\u3001\u65c1\u8def\u7684\u8868\u683c\uff0c\u4fdd\u5b58\u6b63\u5728\u8ba1\u7b97\u7684\u5bc4\u5b58\u5668\u76f8\u5173\u6570\u636e\u5728\u54ea\u91cc P\uff1aPending\uff0c\u8868\u793a\u7ed3\u679c\u8fd8\u6ca1\u6709\u5199\u56de\u5230\u5bc4\u5b58\u5668\u4e2d F\uff1a\u5728\u90a3\u4e2aFU\u4e2d\u6267\u884c\uff0c\u8f6c\u53d1\u65f6\u4f1a\u7528\u5230\u8fd9\u4e2a\u4fe1\u606f Result Position\uff1a\u8bb0\u5f55\u5230\u8fbeFU\u6d41\u6c34\u7ebf\u7684\u54ea\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u5468\u671f\u53f3\u79fb\u4e00\u4f4d\uff0c\u4e0d\u540c\u6307\u4ee4\u7684\u8f6c\u53d1\u6761\u4ef6\u4e0d\u540c\u3002 \u4f2aLRU\u66ff\u6362 \u00b6 \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.1.3 \u89e3\u91ca\uff1aLRU\uff08least recently used\uff09\uff0c\u628a\u6700\u665a\u4f7f\u7528\u7684Cacheline\u66ff\u6362\u51fa\u53bb \u4ea4\u53e0\u5b9e\u73b0\u591a\u7aef\u53e3 \u00b6 \u662f\u4e00\u79cd\u601d\u60f3 \u5b9e\u73b0\uff1a\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u6574\u5757\u4e1c\u897f\u62c6\u6210\u591a\u5757\uff0c\u7136\u540e\u4e0d\u540c\u7684\u5757\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\uff0c\u800c\u4e0d\u7528\u771f\u7684\u5728\u4e00\u5757\u4e0a\u5b9e\u73b0\u591a\u7aef\u53e3\u3002 \u8003\u8651\u786c\u4ef6\uff1a\u901a\u5e38\u7684\u591a\u7aef\u53e3\u9700\u8981\u5927\u91cf\u8d44\u6e90\uff0c\u4ea4\u53e0\u53ef\u4ee5\u8282\u7701\u786c\u4ef6\u8d44\u6e90\uff08 \u4e0d\u8fc7\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u6ca1\u5565\u7528 \uff09 \u53ef\u4ee5\u5e94\u7528\u7684\u90e8\u4ef6\uff1aICache\u3001\u53d1\u5c04\u961f\u5217\u3001\u5bc4\u5b58\u5668\u6587\u4ef6\u7b49\u7b49 \u62d3\u5c55\u8d44\u6599 \u00b6 \u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b \u00b6 Alpha 21264 \u5728\u53d6\u6307\u9636\u6bb5\u9884\u6d4b\u8be5\u6307\u4ee4\uff1a \u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\uff1a\u7528PC\u7684\u90e8\u5206\u7d22\u5f15BIT\uff08branch instruction table\uff09 \uff081\uff09\u662f\u5426\u662fCALL\u6307\u4ee4\uff08jal\u3001bal\uff09\uff1a\u5229\u7528BTB\uff08branch target buffer\uff09\u4e2d\u5b58\u653e\u7684\u989d\u5916\u4fe1\u606f\uff0c\u82e5\u662f\uff0c\u5219\u628a\u5f53\u524dPC+8\u7684\u503c\uff08\u6709\u5ef6\u8fdf\u69fd\uff09\u538b\u5165\u5e26\u8ba1\u6570\u5668\u7684RAS\uff08Return Address Stack\uff09\uff082\uff09\u662f\u5426\u662fReturn\uff08jr\uff09\uff1a\u5229\u7528BTB\u4e2d\u5b58\u653e\u989d\u5916\u4fe1\u606f\uff0c\u82e5\u662f\uff0c\u628aRAS\u4e2d\u7684\u6808\u9876\u5143\u7d20\u4f5c\u4e3a\u9884\u6d4b\u7684\u5730\u5740 \u662f\u5426\u4f1a\u8df3\u8f6c\uff1a\u91c7\u7528\u7ade\u4e89\u7684\u5206\u652f\u9884\u6d4b\uff081\uff09GHR\uff08global history register\uff09\uff1a\u8bb0\u5f55\u6240\u6709\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u60c5\u51b5\uff082\uff09BHT\uff08branch history table\uff09\uff1a\u8bb0\u5f55\u5c40\u90e8\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u60c5\u51b5\uff083\uff09PHTs\uff08pattern history table\uff09\uff1a\u4e24\u4f4d\u7684**\u9971\u548c\u8ba1\u6570\u5668**\u8868\u683c\uff084\uff09CPHT\uff08choice PHT\uff09\uff1a\u6839\u636ePC\u548cGHR\u91cc\u7684\u503c\u6765\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u3002 \u8df3\u8f6c\u7684\u5730\u5740\uff1a\u5b58\u653e\u5728BTB\u4e2d \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b4.2.5 \u6570\u636e\u7684\u66f4\u65b0\uff1a\u7528\u9884\u6d4b\u7684\u7ed3\u679c\u66f4\u65b0GHR\uff0c\u5728\u5206\u652f\u6307\u4ee4\u9000\u4f11\u7684\u65f6\u5019\u66f4\u65b0BHR\u548cPHT\u4e2d\u7684\u9971\u548c\u8ba1\u6570\u5668 Cache\u5e03\u5c40\u56fe\uff1a \u00b6 2020\u5e74\u9f99\u82af\u676f\u590d\u65e6\u5927\u5b66 FDU1.1 \u961f","title":"\u8d44\u6599\u6c47\u603b"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_1","text":"2021/6/11 \u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u4ece\u5404\u4e2a\u5730\u65b9\u6c47\u603b\u7684\u8d44\u6599\uff0c\u4e3a\u6211\u4eec\u5b9e\u73b0\u7684\u67b6\u6784\u4f5c\u53c2\u8003","title":"\u9f99\u82af\u676f\u8d44\u6599\u6c47\u603b"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_2","text":"\u6b64\u6587\u6863\u662f\u6211\u4eec\u5c0f\u7ec4\u6b63\u5728\u53c2\u52a0\u7684\u201c\u9f99\u82af\u676f\u201d\u6bd4\u8d5b\u7684\u6587\u6863\uff0c\u540e\u7eed\u4f1a\u8fdb\u4e00\u6b65\u66f4\u65b0 ==\u9ec4\u8272\u6807\u8bb0\u90e8\u5206==\u8868\u660e\u6b64\u5904\u6700\u8fd1\u5728\u66f4\u65b0 \u5b9e\u73b0\u7ec6\u8282\u4e2d\u76f8\u5bf9\u590d\u6742\u7684\u7b56\u7565\u5355\u72ec\u5217\u4e86\u4e00\u4e2a**\u7b56\u7565\u680f**\u6765\u9610\u91ca","title":"\u9605\u8bfb\u987b\u77e5"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_3","text":"\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1 19\u5e74\u9f99\u82af\u676f\u6e05\u534e\u961f\u51b3\u8d5b\u62a5\u544a \u590d\u65e6\u5927\u5b66 FDU1.1 \u961f\u5728\u7b2c\u56db\u5c4a\u201c\u9f99\u82af\u676f\u201d\u7684 \u53c2\u8d5b\u4f5c\u54c1 \u859b\u632f\u6881\u52a9\u6559\u7684 PPT \uff1a ICS Final Project Topics \u3001 RAM on FPGA \u8c2d\u4e00\u51e1\u52a9\u6559\u5199\u7684 labs \uff1a github\u7f51\u9875","title":"\u53c2\u8003\u8d44\u6599"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_4","text":"\u9f99\u82af\u676f\u7684top\u6587\u4ef6\u9700\u8981\u81ea\u5df1\u5199\u5417\uff1f \u672c\u5b66\u671f\u7684top\u6587\u4ef6\u5b9e\u4f8b\u5316\u4e86\u4e00\u4e2a\u9f99\u82af\u676f\u7684top\uff0c\u53ef\u4ee5\u53c2\u8003\u90a3\u4e2a\u3002 \u53cc\u53d1\u6d41\u6c34\u7ebf\u5982\u4f55\u8fdb\u884cgolden trace\u7684\u6bd4\u5bf9\uff1f \u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u5207\u6362\u7684\u65f6\u5019\u9700\u8981\u6211\u4eec\u4fdd\u5b58\u5904\u7406\u5668\u72b6\u6001\u5417\uff1f linux \u4eff\u771f \u529f\u80fd\u6d4b\u8bd5\u9700\u8981\u5f02\u5e38\u5904\u7406\u5417\uff1f","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_5","text":"\u7f29\u5199 \u5168\u79f0 \u610f\u601d \u4f5c\u7528 BIT Branch Instruction Table \u5206\u652f\u6307\u4ee4\u8868 \u7528PC\u9884\u6d4b\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 BB Branch Buffer \u5206\u652f\u6682\u5b58\u5668 \u4fdd\u5b58\u5f53\u524d\u5206\u652f\u7684\u4fe1\u606f\uff0c\u4ee5\u7b49\u5f85\u5ef6\u8fdf\u69fd\u7684\u53d6\u6765 PHT Pattern History Table \u8df3\u8f6c\u5386\u53f2\u8868 \u7528\u4ee5\u524d\u7684\u8df3\u8f6c\u8bb0\u5f55\u6765\u5224\u65ad\u5f53\u524d\u7684\u8df3\u8f6c BTB Branch Target Buffer \u8df3\u8f6c\u5730\u5740\u7f13\u5b58 \u9884\u6d4b\u8df3\u8f6c\u7684\u5730\u5740 RAS Return Address Stack \u8fd4\u56de\u5730\u5740\u6808 \u5145\u5f53\u51fd\u6570\u8c03\u7528\u548c\u8fd4\u56de\u7684\u786c\u4ef6\u6808 ICache Instruction Cache \u6307\u4ee4Cache \u7f13\u5b58\u5185\u5b58\u5230CPU\u7684\u6307\u4ee4 DCache Data Cache \u6570\u636eCache \u7f13\u5b58\u5185\u5b58\u5230CPU\u7684\u6570\u636e FU functional unit \u8ba1\u7b97\u5355\u5143 \u5728\u6267\u884c\u9636\u6bb5\u8ba1\u7b97\u6570\u636e CPU central processing unit \u4e2d\u592e\u5904\u7406\u5668 \u5904\u7406\u6240\u6709\u7684\u6307\u4ee4 TLB translation lookaside buffer \u8f6c\u79fb\u540e\u5907\u7f13\u51b2\u533a \u7f13\u5b58\u865a\u62df\u5730\u5740\u548c\u5176\u6620\u5c04\u7684\u7269\u7406\u5730\u5740","title":"\u5668\u4ef6\u540d\u79f0\u8868"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_6","text":"","title":"\u62d3\u5c55\u5185\u5bb9"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_7","text":"\u9700\u8981\u5b9e\u73b0\u7684\u6307\u4ee4: \u666e\u901a\u90e8\u5206 \u3001 \u5916\u8bbe\u90e8\u5206 CLO\u548cCLZ\u53ef\u4ee5\u5171\u7528\u4e00\u5957\u786c\u4ef6\u7535\u8def\uff0c\u4f46\u662f\u5c31\u4e0d\u80fd\u540c\u65f6\u5904\u7406\u4e24\u6761\u6307\u4ee4\u4e86","title":"\u6307\u4ee4\u96c6"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_8","text":"github actions\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u90e8\u7f72\uff1a\u81ea\u52a8\u90e8\u7f72\u7f51\u7ad9\u548c\u7528verilator\u6d4b\u8bd5 git\u6a21\u5757\u5904\u7406\uff1agit submodule","title":"\u7248\u672c\u63a7\u5236"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_9","text":"","title":"\u90e8\u4ef6\u8d44\u6599"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#icache","text":"\u7ec4\u76f8\u8fde\u7ed3\u6784\u3001\u6d41\u6c34\u7ebfCache\u3001\u591a\u7aef\u53e3\u8bfb\u53d6\uff08Mult-banking\uff09\u3001\u9884\u89e3\u7801\u3001\u786c\u4ef6\u9884\u53d6\u3001victim Cache\u3001\u4f2aLRU\u66ff\u6362\u7b56\u7565 Cache\u5e03\u5c40\u56fe\uff1a\u8be6\u89c1\u62d3\u5c55\u8d44\u6599\uff08Cache\u5e03\u5c40\u56fe\uff09 \u53d6\u503c\u65b9\u5f0f\uff1a\u4e24\u79cd\u65b9\u5f0f\uff0c\u76ee\u524d\u503e\u5411\u4e8e\u7528\u7b2c\u4e00\u79cd\uff1a\uff081\uff09\u6bcf\u6b21\u4ece\u5f53\u524d\u5730\u5740\u5f00\u59cb\u5f80\u540e\u53d6\u6ee1\u4e00\u4e2acacheline\uff0c\u5224\u65ad\u903b\u8f91\u5728\u6d41\u6c34\u7ebf\u9636\u6bb5\u5b8c\u6210\uff08\u8be6\u89c1\u6d41\u6c34\u7ebf\u53d6\u6307\u903b\u8f91\uff09\uff082\uff09\u4ece\u5f53\u524d\u5730\u5740\u5f00\u59cb\u5f80\u540e\u53d6\u4e24\u6761\u6216\u4e09\u6761\u6307\u4ee4\uff0c\u53d6\u51b3\u4e8e\u7b2c\u4e8c\u6761\u6307\u4ee4\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4 \u4e00\u4e2acacheline\u4e2d\u6709\u8df3\u8f6c\u6307\u4ee4\uff1a\u82e5\u8be5\u6307\u4ee4\u8df3\u8f6c\uff0c\u5219\u5ef6\u8fdf\u69fd\u4e4b\u540e\u7684\u6307\u4ee4\u4e0d\u5e94\u8be5\u6267\u884c cacheline\u6700\u540e\u4e00\u6761\u6307\u4ee4\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff1a\u5219\u5fc5\u987b\u53d6\u5b8c\u4e0b\u4e00\u6761cacheline\u540e\u518d\u5224\u65ad\u5206\u652f\u6307\u4ee4\uff0c\u7528\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u5904\u7406 cacheline\u6709\u4e24\u6761\u5206\u652f\u6307\u4ee4 \u5176\u5b83\u7ec6\u8282\u95ee\u9898\uff1a\u6bcf\u5468\u671f\u53ea\u80fd\u8bbf\u95ee\u4e00\u4e2acacheline","title":"ICache"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_10","text":"\u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b\uff1a\u8be6\u89c1\u62d3\u5c55\u8d44\u6599\uff08\u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b\uff09 \u6298\u4e2d\u7684\u5206\u652f\u9884\u6d4b\uff1a\u5206\u652f\u9884\u6d4b\u53ea\u9488\u5bf9\u95f4\u63a5\u8df3\u8f6c\u6307\u4ee4\uff08\u5bc4\u5b58\u5668\u8df3\u8f6c\uff09\uff0c\u5176\u5b83\u8df3\u8f6c\u6307\u4ee4\uff08Call\u3001return\u6216PC\u76f4\u63a5\u8df3\u8f6c\uff09\u5728\u63a5\u6536\u5230ICache\u8fd4\u56de\u7684\u6307\u4ee4\u540e\u5feb\u901f\u8fdb\u884c\u5224\u65ad\u3002 \u5176\u5b83\u7684\u7ec6\u8282\u95ee\u9898\uff1a\uff081\uff09BIT\u548cCPHT\u6570\u91cf\u7684\u5dee\u522b\uff1a\u4e0e\u8df3\u8f6c\u6307\u4ee4\u7684\u5360\u6bd4\u6709\u5173\uff082\uff09\u7531\u4e8eBIT\u7684\u5b58\u5728\uff0cBTB\u4e0d\u8bbe\u7f6etag\uff0c\u6240\u4ee5\u4e0d\u4f1a\u7f3a\u5931\uff08\u9664\u4e86\u4e00\u5f00\u59cb\u7684\u5f3a\u5236\u7f3a\u5931\uff09","title":"\u5206\u652f\u9884\u6d4b\u5668"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_11","text":"\u53cc\u961f\u5217\u4ea4\u53e0\uff08\u8003\u8651\u4e86\u786c\u4ef6\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\uff09\u3001\u4e24\u4e2a\u8bfb\u7aef\u53e3\u548c\u51e0\u4e2a\u5199\u7aef\u53e3 \u51e0\u4e2a\u5199\u7aef\u53e3 \uff1a\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u90fd\u9700\u8981\u7528\u63a7\u5236\u903b\u8f91\u5904\u7406\u5206\u652f\u6307\u4ee4\u548c\u5ef6\u8fdf\u69fd\u7684\u95ee\u9898\u3002\uff081\uff09\u56db\u4e2a\u5199\u7aef\u53e3\uff1a\u7d27\u51d1\u4f46\u662f\u6d6a\u8d39\u786c\u4ef6\uff08 \u5176\u5b9e\u65e0\u6240\u8c13 \uff0c\u54b1\u4eec\u5199\u4ee3\u7801\u7684\uff09\uff0c\u56e0\u4e3a\u540e\u7eed\u7684\u53cc\u53d1\u662f\u74f6\u9888\uff082\uff09\u4e09\u4e2a\u5199\u7aef\u53e3\uff1a\u53cc\u961f\u5217\u4ea4\u53e0\u53ef\u80fd\u5c31\u4e0d\u65b9\u4fbf\u4e86\uff0c\u4e13\u95e8\u5904\u7406MIPS\u6307\u4ee4\u4e2d\u7684\u5206\u652f\u6307\u4ee4+\u5ef6\u8fdf\u69fd\uff0819\u5e74\u6e05\u534e\u5927\u5b66\u961f\uff09\uff083\uff09\u4e24\u4e2a\u5199\u7aef\u53e3\uff1a\u6734\u5b9e\u65e0\u534e\uff0820\u5e74\u590d\u65e6\u5927\u5b66\u961f\uff09 \u53d1\u5c04\u961f\u5217\u600e\u4e48\u5224\u65ad\u54ea\u4e9b\u4f4d\u7f6e\u662f\u6709\u6548\u7684\uff1a \u7528\u7d22\u5f15\u6216\u6709\u6548\u4f4d\u904d\u5386 \u961f\u5217\u6ee1\uff1a\u6d41\u6c34\u7ebf\u6682\u505c\u6216\u5f53\u524d\u6307\u4ee4\u91cd\u53d6","title":"\u53d1\u5c04\u961f\u5217"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#dcache","text":"\u7ec4\u76f8\u8fde\u7ed3\u6784\u3001\u6d41\u6c34\u7ebf\u3001 \u5355\u7aef\u53e3\u8bfb\u5199 \u3001\u56de\u5199\uff08write back\uff09\u3001\u5199\u7f13\u5b58\uff08write buffer\uff09\u3001victim cache\u3001\u4f2aLRU\u66ff\u6362\u7b56\u7565 \u6839\u636e MIPS\u6807\u51c6\u8981\u6c42\uff0c\u5bf9\u4e8e\u4e0d\u540c\u6bb5\u7684\u8bbf\u5b58\uff0c\u6570\u636e\u7f13\u5b58\u884c\u4e3a\u4e0d\u540c\uff1a\uff081\uff09 kseg3/ksseg \u6309 TLB \u5224\u65ad\u662f\u5426\u7ecf\u8fc7\u7f13\u5b58\uff082\uff09 kseg1 \u4e0d\u7ecf\u8fc7\u7f13\u5b58\uff083\uff09 kseg0 \u53ef\u7531 CP0 ConfigK0 \u5bc4\u5b58\u5668\u63a7\u5236\uff0cMIPS \u6807\u51c6\u4e2d\u8fd9\u4e00\u884c\u4e3a\u7684\u5b9e\u73b0\u53ef\u9009\uff084\uff09 useg \u6309 TLB \u5224\u65ad\u662f\u5426\u7ecf\u8fc7\u7f13\u5b58 \u5355\u7aef\u53e3\u8bfb\u5199\uff1a\u53ea\u6709\u4e00\u4e2a\u8bbf\u5b58\u5355\u5143\uff0c\u800c\u4e14\u8fd9\u6837\u53ef\u4ee5\u7b80\u5316DCache\u7684\u903b\u8f91\uff0c \u5f53\u7136\u5199Cache\u7684\u4eba\u60f3\u591a\u7aef\u53e3\u4e5f\u6ca1\u95ee\u9898 \u200b\u200b\uff0c\u8fd9\u6837\u5c31\u9700\u8981\u4e24\u4e2a\u8bbf\u5b58\u5355\u5143\u4e86 \u91c7\u7528\u56de\u5199\u7b56\u7565\uff08write back\uff09\uff1a\u810f\u6570\u636e\u88ab\u66ff\u6362\u7684\u65f6\u5019\u624d\u5199\u56de \u5199\u7f13\u5b58\uff08write buffer\uff09\uff1a\u5199\u56de\u65f6\u5199\u5230\u7f13\u5b58\u4e2d\uff0c\u7b49\u603b\u7ebf\u7a7a\u95f2\u7684\u65f6\u5019\u518d\u5199\u7f13\u5b58\u518d\u5199\u5230\u5185\u5b58\u4e2d\uff0c\u4e0d\u8fc7Cache\u7f3a\u5931\u65f6\uff0c\u9700\u8981\u5148\u5728\u5199\u7f13\u5b58\u91cc\u627e\uff0c\u5224\u65ad\u662f\u5426\u5728\u5176\u4e2d\u3002 \u6d41\u6c34\u7ebf\u8bbf\u95ee\uff1a\u5148\u5199\u540e\u8bfb\u51b2\u7a81\uff0c\u7528Delayed Store Addr\u548cDelayed Store Data\u5bc4\u5b58\u5668\u89e3\u51b3\uff0c\u7c7b\u4f3c\u4e8e\u8f6c\u53d1","title":"DCache"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#store-buffer","text":"\u8fd9\u4e2a\u5668\u4ef6\u8ddf\u6574\u4f53\u7684\u8bbe\u8ba1\u6709\u5173\uff0c\u5982\u679c\u80fd\u4fdd\u8bc1\u6267\u884c\u9636\u6bb5store\u6b63\u786e\u6027\u7684\u8bdd\u53ef\u4ee5\u4e0d\u8981 store\u6307\u4ee4\u8ba1\u7b97\u5b8c\u540e\u653e\u5728\u8fd9\u91cc\uff0c\u76f4\u5230\u9000\u4f11\uff08retire\uff09\u624d\u771f\u6b63\u5199\u56deDCache\uff0c\u8fd9\u6837\u7684\u8bddload\u6307\u4ee4\u9700\u8981\u5148\u4eceStore Buffer\u91cc\u627e\u5bf9\u5e94\u7684\u6307\u4ee4","title":"Store Buffer"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#l2-cache","text":"\u5355\u7aef\u53e3","title":"L2 Cache"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_12","text":"\u4e00\u4e2a\u4e58\u6cd5\u5668\u548c\u4e00\u4e2a\u9664\u6cd5\u5668\uff08\u8003\u8651\u5230MIPS\u4e58\u9664\u6cd5\u6307\u4ee4\u4e4b\u95f4\u4f1a\u6709\u79fb\u52a8Hi\u3001Lo\u7684\u6307\u4ee4\uff0c\u6240\u4ee5\u4e0d\u592a\u53ef\u80fd\u4e24\u6761\u4e58/\u9664\u6cd5\u8fde\u5728\u4e00\u8d77\uff09\uff0c\u82e5\u8fde\u7eed\u4e24\u6761\u4e58\u9664\u6cd5\u6307\u4ee4\uff0c\u5219\u53ea\u53d1\u5c04\u7b2c\u4e00\u6761","title":"\u4e58\u9664\u6cd5\u5668\u4ef6"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#fu","text":"\u8bbe\u7f6e\u4e00\u4e2a\uff08\u8fde\u7eed\u4e24\u6761\u6307\u4ee4\u4e3aload\u7684\u53ef\u80fd\u6027\u5f88\u5c0f\uff0c\u6ca1\u6709\u5fc5\u8981\u4e3a\u6b64\u589e\u52a0\u5927\u91cf\u7684\u786c\u4ef6\uff09\uff0c\u82e5\u540c\u65f6\u6709\u4e24\u6761load\u6307\u4ee4\uff0c\u5219\u53ea\u53d1\u5c04\u7b2c\u4e00\u6761\u3002","title":"\u8bbf\u5b58FU"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_13","text":"RAS(Return Address Stack)\uff1a\u5e26\u8ba1\u6570\u5668\u7684\u6808\uff0c\u89e3\u51b3\u81ea\u5df1\u8c03\u7528\u81ea\u5df1\u7684\u9012\u5f52\u95ee\u9898\u3002","title":"\u786c\u4ef6\u6808"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_14","text":"ScoreBoard","title":"\u6570\u636e\u65c1\u8def"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_15","text":"\u56db\u4e2a\u8bfb\u7aef\u53e3\u3001\u4e24\u4e2a\u5199\u7aef\u53e3\u3001Hi\u548cLo\u5bc4\u5b58\u5668\uff08\u7279\u5224\uff09","title":"\u5bc4\u5b58\u5668\u6587\u4ef6"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#tlb","text":"","title":"TLB"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_16","text":"","title":"\u7b56\u7565"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_17","text":"","title":"\u7ec4\u76f8\u8054\u7ed3\u6784"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#pre-code","text":"\u89e3\u91ca\uff1aICache\u83b7\u53d6\u5185\u5b58\u7684\u6570\u636e\u7684\u65f6\uff0c\u5224\u65ad\u5176\u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\uff0c\u5e76\u5c06\u7ed3\u679c\u53e6\u5916\u4fdd\u5b58\u5728ICache\u4e2d","title":"\u9884\u89e3\u7801\uff08pre-code\uff09"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#cache","text":"\u89e3\u91ca\uff1a\u50cf\u6d41\u6c34\u7ebf\u4e00\u6837\u5904\u7406Cache\uff0c\u964d\u4f4e\u65f6\u949f\u9891\u7387","title":"\u6d41\u6c34\u7ebfCache"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#victim-cache","text":"\u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.2.4 \u89e3\u91ca\uff1a\u9632\u6b62\u88ab\u8e22\u51fa\u7684\u6570\u636e\u9a6c\u4e0a\u88ab\u5229\u7528\uff0c\u800c\u4e0e\u4e4b\u76f8\u5bf9\u7684Filter Cache\u5219\u662f\u9632\u6b62\u4e0d\u4f1a\u518d\u7528\u7684\u6570\u636e\u4e00\u76f4\u4e0d\u88ab\u8e22\u51fa","title":"victim cache"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#prefetching","text":"\u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.2.5 \u89e3\u91ca\uff1a\u5b57\u5982\u5176\u540d\uff0c\u63d0\u524d\u628a\u989d\u5916\u7684\u6570\u636e\uff08\u5f53\u524dCacheline\u7684\u4e0b\u51e0\u6761Cacheline\u7b49\u5c06\u6765\u53ef\u80fd\u4f1a\u7528\u5230\u7684\uff09\u53d6\u597d ICache\u6548\u679c\u6bd4DCache\u8981\u597d\uff0cDCache\u53ef\u4ee5\u4e0d\u4f7f\u7528\u9884\u53d6 \u4e3a\u4e86\u9632\u6b62\u9884\u53d6\u7684\u6570\u636e\u6ca1\u6709\u7528\u9020\u6210\u201cCache \u6c61\u67d3\u201d\uff0c\u53ef\u4ee5\u5c06\u9884\u53d6\u7684\u6307\u4ee4\u653e\u5230\u5355\u72ec\u7684\u4e00\u4e2a\u7f13\u5b58\uff08Stream Buffer\uff09\u4e2d\u3002\uff08Alpha 21064\u5bf9\u6307\u4ee4\u9884\u53d6\u4f7f\u7528\u7684\u65b9\u6cd5\uff09","title":"\u9884\u53d6\uff08prefetching\uff09"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#scoreboard","text":"\u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b1.3.1 \u89e3\u91ca\uff1a\u7528\u6765\u8f6c\u53d1\u3001\u65c1\u8def\u7684\u8868\u683c\uff0c\u4fdd\u5b58\u6b63\u5728\u8ba1\u7b97\u7684\u5bc4\u5b58\u5668\u76f8\u5173\u6570\u636e\u5728\u54ea\u91cc P\uff1aPending\uff0c\u8868\u793a\u7ed3\u679c\u8fd8\u6ca1\u6709\u5199\u56de\u5230\u5bc4\u5b58\u5668\u4e2d F\uff1a\u5728\u90a3\u4e2aFU\u4e2d\u6267\u884c\uff0c\u8f6c\u53d1\u65f6\u4f1a\u7528\u5230\u8fd9\u4e2a\u4fe1\u606f Result Position\uff1a\u8bb0\u5f55\u5230\u8fbeFU\u6d41\u6c34\u7ebf\u7684\u54ea\u4e2a\u9636\u6bb5\uff0c\u6bcf\u4e2a\u5468\u671f\u53f3\u79fb\u4e00\u4f4d\uff0c\u4e0d\u540c\u6307\u4ee4\u7684\u8f6c\u53d1\u6761\u4ef6\u4e0d\u540c\u3002","title":"ScoreBoard"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#lru","text":"\u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b2.1.3 \u89e3\u91ca\uff1aLRU\uff08least recently used\uff09\uff0c\u628a\u6700\u665a\u4f7f\u7528\u7684Cacheline\u66ff\u6362\u51fa\u53bb","title":"\u4f2aLRU\u66ff\u6362"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_18","text":"\u662f\u4e00\u79cd\u601d\u60f3 \u5b9e\u73b0\uff1a\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e00\u6574\u5757\u4e1c\u897f\u62c6\u6210\u591a\u5757\uff0c\u7136\u540e\u4e0d\u540c\u7684\u5757\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\uff0c\u800c\u4e0d\u7528\u771f\u7684\u5728\u4e00\u5757\u4e0a\u5b9e\u73b0\u591a\u7aef\u53e3\u3002 \u8003\u8651\u786c\u4ef6\uff1a\u901a\u5e38\u7684\u591a\u7aef\u53e3\u9700\u8981\u5927\u91cf\u8d44\u6e90\uff0c\u4ea4\u53e0\u53ef\u4ee5\u8282\u7701\u786c\u4ef6\u8d44\u6e90\uff08 \u4e0d\u8fc7\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u6ca1\u5565\u7528 \uff09 \u53ef\u4ee5\u5e94\u7528\u7684\u90e8\u4ef6\uff1aICache\u3001\u53d1\u5c04\u961f\u5217\u3001\u5bc4\u5b58\u5668\u6587\u4ef6\u7b49\u7b49","title":"\u4ea4\u53e0\u5b9e\u73b0\u591a\u7aef\u53e3"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_19","text":"","title":"\u62d3\u5c55\u8d44\u6599"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#_20","text":"Alpha 21264 \u5728\u53d6\u6307\u9636\u6bb5\u9884\u6d4b\u8be5\u6307\u4ee4\uff1a \u662f\u5426\u662f\u5206\u652f\u6307\u4ee4\uff1a\u7528PC\u7684\u90e8\u5206\u7d22\u5f15BIT\uff08branch instruction table\uff09 \uff081\uff09\u662f\u5426\u662fCALL\u6307\u4ee4\uff08jal\u3001bal\uff09\uff1a\u5229\u7528BTB\uff08branch target buffer\uff09\u4e2d\u5b58\u653e\u7684\u989d\u5916\u4fe1\u606f\uff0c\u82e5\u662f\uff0c\u5219\u628a\u5f53\u524dPC+8\u7684\u503c\uff08\u6709\u5ef6\u8fdf\u69fd\uff09\u538b\u5165\u5e26\u8ba1\u6570\u5668\u7684RAS\uff08Return Address Stack\uff09\uff082\uff09\u662f\u5426\u662fReturn\uff08jr\uff09\uff1a\u5229\u7528BTB\u4e2d\u5b58\u653e\u989d\u5916\u4fe1\u606f\uff0c\u82e5\u662f\uff0c\u628aRAS\u4e2d\u7684\u6808\u9876\u5143\u7d20\u4f5c\u4e3a\u9884\u6d4b\u7684\u5730\u5740 \u662f\u5426\u4f1a\u8df3\u8f6c\uff1a\u91c7\u7528\u7ade\u4e89\u7684\u5206\u652f\u9884\u6d4b\uff081\uff09GHR\uff08global history register\uff09\uff1a\u8bb0\u5f55\u6240\u6709\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u60c5\u51b5\uff082\uff09BHT\uff08branch history table\uff09\uff1a\u8bb0\u5f55\u5c40\u90e8\u8df3\u8f6c\u6307\u4ee4\u7684\u8df3\u8f6c\u60c5\u51b5\uff083\uff09PHTs\uff08pattern history table\uff09\uff1a\u4e24\u4f4d\u7684**\u9971\u548c\u8ba1\u6570\u5668**\u8868\u683c\uff084\uff09CPHT\uff08choice PHT\uff09\uff1a\u6839\u636ePC\u548cGHR\u91cc\u7684\u503c\u6765\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\u5206\u652f\u9884\u6d4b\u7684\u7ed3\u679c\u3002 \u8df3\u8f6c\u7684\u5730\u5740\uff1a\u5b58\u653e\u5728BTB\u4e2d \u300a\u8d85\u6807\u91cf\u5904\u7406\u5668\u8bbe\u8ba1\u300b4.2.5 \u6570\u636e\u7684\u66f4\u65b0\uff1a\u7528\u9884\u6d4b\u7684\u7ed3\u679c\u66f4\u65b0GHR\uff0c\u5728\u5206\u652f\u6307\u4ee4\u9000\u4f11\u7684\u65f6\u5019\u66f4\u65b0BHR\u548cPHT\u4e2d\u7684\u9971\u548c\u8ba1\u6570\u5668","title":"\u5b8c\u6574\u7684\u5206\u652f\u9884\u6d4b"},{"location":"competition/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/#cache_1","text":"2020\u5e74\u9f99\u82af\u676f\u590d\u65e6\u5927\u5b66 FDU1.1 \u961f","title":"Cache\u5e03\u5c40\u56fe\uff1a"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/","text":"labs\u6307\u4ee4\u96c6 \u00b6 \u53c2\u8003\u8d44\u6599\uff1a Volume II_ MIPS32 Instruction Set \u5173\u4e8e\u6307\u4ee4\u7684\u8be6\u7ec6\u5185\u5bb9\u8bf7\u67e5\u9605\u4e0a\u8ff0\u8d44\u6599 \u6307\u4ee4\u683c\u5f0f\uff1a \u5bf9\u5e94\u7684\u9875\u6570 \u6570\u636e\u8303\u56f4 \u6307\u4ee4\u540d\u79f0 \u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\u7b49\u7b49\u4fe1\u606f lab1 \u6307\u4ee4 \u00b6 addiu \u00b6 P48 31:26 25:21 20:16 15:0 ADDIU 001001 rs rt immediate Description: GPR[rt] \u2190 GPR[rs] + immediate(signed) (No exception) addu \u00b6 P49 31:26 25:21 20:16 15:11 10:6 5:0 ADDU special 000000 rs rt rd 0 00000 ADDU 100001 Description: GPR[rd] \u2190 GPR[rs] + GPR[rt] (No exception) and \u00b6 P52 31:26 25:21 20:16 15:11 10:6 5:0 AND special 000000 rs rt rd 0 00000 AND 100100 Description: GPR[rd] \u2190 GPR[rs] AND GPR[rt] andi \u00b6 P53 31:26 25:21 20:16 15:0 ANDI 001100 rs rt imme Description: GPR[rt] \u2190 GPR[rs] AND immediate(zero-extended) beq: Branch on Equal \u00b6 P68 31:26 25:21 20:16 15:0 BEQ 000100 rs rt offset Description: if GPR[rs] = GPR[rt] then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself) bne: Branch on Not Equal \u00b6 P84 31:26 25:21 20:16 15:0 BNE 000101 rs rt offset Description: if GPR[rs] \u2260 GPR[rt] then branch j: Jump \u00b6 P129 31:26 25:0 J 000010 instr_index Description: This is a PC-region branch (not PC-relative); the effective target address is in the \u201ccurrent\u201d 256 MB-aligned region. The low 28 bits of the target address is the instr_index field shifted left 2 bits. The remaining upper bits are the corresponding bits of the address of the instruction in the delay slot (not the branch itself, but they are same in most cases). jal: Jump and Link \u00b6 P130 31:26 25:0 JAL 000011 instr_index Description: Place the return address link in GPR 31(register). The return link is the address of the second instruction following the branch, at which location execution continues after a procedure call. This is a PC-region branch (not PC-relative); the effective target address is in the \u201ccurrent\u201d 256 MB-aligned region. The low 28 bits of the target address is the instr_index field shifted left 2bits. The remaining upper bits are the corresponding bits of the address of the instruction in the delay slot (not the branch itself). jr: Jump Register \u00b6 P138 31:26 25:21 20:11 10:6 5:0 JR special 000000 rs 0 0000000000 hint JR 001000 Description: PC \u2190 GPR[rs] lui: Load Upper Immediate \u00b6 P150 31:26 25:21 20:16 15:0 LUI 001111 0 00000 rt imme Description: GPR[rt] \u2190 immediate || 016 The 16-bit immediate is shifted left 16 bits and concatenated with 16 bits of low-order zeros. lw: Load Word \u00b6 P152 31:26 25:21 20:16 15:0 LW 100011 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset(signed_extended)] The 16-bit signed offset is added to the contents of GPR base to form the effective address. nor \u00b6 P197 31:26 25:21 20:16 15:11 10:6 5:0 NOR special 000000 rs rt rd 0 00000 NOR 100111 Description: GPR[rd] \u2190 GPR[rs] NOR GPR[rt] or \u00b6 P197 31:26 25:21 20:16 15:11 10:6 5:0 OR special 000000 rs rt rd 0 00000 OR 100101 Description: GPR[rd] \u2190 GPR[rs] or GPR[rt] ori: Or Immediate \u00b6 P199 31:26 25:21 20:16 15:0 ORI 001101 rs rt imme Description: GPR[rt] \u2190 GPR[rs] or immediate(zero_extended) sll: Shift Word Left Logical \u00b6 P230 31:26 25:21 20:16 15:11 10:6 5:0 SLL special 000000 0 00000 rt rd sa SLL 000000 Description: GPR[rd] \u2190 GPR[rt] << sa slt: Set on Less Than \u00b6 P232 31:26 25:21 20:16 15:11 10:6 5:0 SLT special 000000 rs rt rd 0 00000 SLT 101010 Description: GPR[rd] \u2190 (GPR[rs] < GPR[rt]) Compare the contents of GPR rs and GPR rt as signed integers. slti: Set on Less Than Immediate \u00b6 P233 31:26 25:21 20:16 15:0 SLTI 001010 rs rt imme Description: GPR[rt] \u2190 (GPR[rs] < immediate) Compare the contents of GPR rs and the 16-bit signed immediate. sltiu: Set on Less Than Immediate Unsigned \u00b6 P234 31:26 25:21 20:16 15:0 SLTIU 001011 rs rt imme Description: GPR[rt] \u2190 (GPR[rs] < immediate) Compare the contents of GPR rs and the sign-extended 16-bit immediate as unsigned integers. sltu: Set on Less Than Unsigned \u00b6 P235 31:26 25:21 20:16 15:11 10:6 5:0 SLTU special 000000 rs rt rd 0 00000 SLTU 101011 Description: GPR[rd] \u2190 (GPR[rs] < GPR[rt]) Compare the contents of GPR rs and GPR rt as unsigned integers. sra: Shift Word Right Arithmetic \u00b6 P237 31:26 25:21 20:16 15:11 10:6 5:0 SRA special 000000 0 00000 rt rd sa SRA 000011 Description: GPR[rd] \u2190 GPR[rt] >> sa (arithmetic) The contents of the low-order 32-bit word of GPR rt are shifted right, duplicating the sign-bit (bit 31) in the emptied bits. srl: Shift Word Right Logical P239 31:26 25:22 21 20:16 15:11 10:6 5:0 SRL special 000000 0 0000 R 0 rt rd sa SRL 000010 Description: GPR[rd] \u2190 GPR[rt] >> sa (logical) The contents of the low-order 32-bit word of GPR rt are shifted right, inserting zeros into the emptied bits. subu \u00b6 P244 31:26 25:21 20:16 15:11 10:6 5:0 SUBU special 000000 rs rt rd 0 00000 SUBU 100011 Description: GPR[rd] \u2190 GPR[rs] \u2212 GPR[rt] (Unsigened, No exceptions) sw \u00b6 P246 31:26 25:21 20:16 15:0 SW 101011 base rt offset Description: memory[GPR[base] + offset(sign_extended)] \u2190 GPR[rt] The least-significant 32-bit word of GPR rt is stored in memory xor \u00b6 P285 31:26 25:21 20:16 15:11 10:6 5:0 XOR special 000000 rs rt rd 0 00000 XOR 100110 Description: GPR[rd] \u2190 GPR[rs] XOR GPR[rt] xori \u00b6 P286 31:26 25:21 20:16 15:0 XORI 001110 rs rt imme Description: GPR[rt] \u2190 GPR[rs] XOR immediate Combine the contents of GPR rs and the 16-bit zero-extended immediate. lab2 \u6307\u4ee4 \u00b6 bgez, bgezal, blez, bgtz, bltz, bltzal, jalr, lb, lbu, lh, lhu, sb, sh, sllv, srav, srlv, bgez: Branch on Greater Than or Equal to Zero \u00b6 P70 31:26 25:21 20:16 15:0 BGEZ REGIMM 000001 rs BGEZ 00001 offset Description: if GPR[rs] \u2265 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself), bgezal: Branch on Greater Than or Equal to Zero and Link \u00b6 P71 31:26 25:21 20:16 15:0 BGEZAL REGIMM 000001 rs BGEZAL 10001 offset Description: if GPR[rs] \u2265 0 then procedure_call Place the return address link in GPR 31. The return link is the address of the second instruction following the branch, An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself) bgtz: Branch on Greater Than Zero \u00b6 P75 31:26 25:21 20:16 15:0 BGTZ 000111 rs 0 00000 offset Description: if GPR[rs] > 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself) blez: Branch on Less Than or Equal to Zero \u00b6 P77 31:26 25:21 20:16 15:0 BLEZ 000110 rs 0 00000 offset Description: if GPR[rs] \u2264 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself), bltz: Branch on Less Than Zero \u00b6 P79 31:26 25:21 20:16 15:0 BLTZ REGIMM 000001 rs BLTZ 00000 offset Description: if GPR[rs] < 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself), bltzal: Branch on Less Than Zero and Link \u00b6 P80 31:26 25:21 20:16 15:0 BLTZAL REGIMM 000001 rs BLTZAL 10010 offset Description: if GPR[rs] < 0 then procedure_call Place the return address link in GPR 31. The return link is the address of the second instruction following the branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself) jalr: Jump and Link Register \u00b6 P131 31:26 25:21 20:16 15:11 10:6 5:0 JALR special 000000 rs 0 00000 rd hint JALR 001001 Description: GPR[rd] \u2190 return_addr, PC \u2190 GPR[rs] Place the return address link in GPR rd. The return link is the address of the second instruction following the branch, where execution continues after a procedure call. lb \u00b6 P142 31:26 25:21 20:16 15:0 LB(load byte) 100000 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 8-bit byte at the memory location specified by the effective address are fetched, sign-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address. lbu \u00b6 P143 31:26 25:21 20:16 15:0 LBU(load byte unsigned) 100100 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 8-bit byte at the memory location specified by the effective address are fetched, zero-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address. lh \u00b6 P147 31:26 25:21 20:16 15:0 LH(load halfword) 100001 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 16-bit halfword at the memory location specified by the aligned effective address are fetched, sign-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address. lhu \u00b6 P148 31:26 25:21 20:16 15:0 LHU(load halfword unsigned) 100101 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 16-bit halfword at the memory location specified by the aligned effective address are fetched, zero-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address. sb \u00b6 P220 31:26 25:21 20:16 15:0 SB(Store Byte) 101000 base rt offset Description: memory[GPR[base] + offset] \u2190 GPR[rt] The least-significant 8-bit byte of GPR rt is stored in memory at the location specified by the effective address. The 16-bit signed offset is added to the contents of GPR base to form the effective address. sh \u00b6 P229 31:26 25:21 20:16 15:0 SH(Store Halfword) 101001 base rt offset Description: memory[GPR[base] + offset] \u2190 GPR[rt] The least-significant 16-bit halfword of register rt is stored in memory at the location specified by the aligned effective address. The 16-bit signed offset is added to the contents of GPR base to form the effective address. sllv: Shift Word Left Logical Variable \u00b6 P231 31:26 25:21 20:16 15:11 10:6 5:0 SLLV special 000000 rs rt rd 0 00000 SLLV 000100 Description: GPR[rd] \u2190 GPR[rt] << rs The contents of the low-order 32-bit word of GPR rt are shifted left, inserting zeros into the emptied bits; the result word is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs. srav: Shift Word Right Arithmetic Variable \u00b6 P238 31:26 25:21 20:16 15:11 10:6 5:0 SRAV special 000000 rs rt rd 0 00000 SRAV 000111 Description: GPR[rd] \u2190 GPR[rt] >> GPR[rs] (the description in document is wrong, you can refer to the following \"Operation\") The contents of the low-order 32-bit word of GPR rt are shifted right, duplicating the sign-bit (bit 31) in the emptied bits; the word result is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs. srlv: Shift Word Right Logical Variable \u00b6 P240 31:26 25:21 20:16 15:11 10:7 6 5:0 SRLV special 000000 rs rt rd 0000 R 0 SRLV 000110 Description: GPR[rd] \u2190 GPR[rt] >> GPR[rs] (logical) The contents of the low-order 32-bit word of GPR rt are shifted right, inserting zeros into the emptied bits; the word result is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs. lab3 \u6307\u4ee4 \u00b6 test3: div, divu, mfhi, mflo, mthi, mtlo, mult, multu div \u00b6 P116 31:26 25:21 20:16 15:6 5:0 DIV special 000000 rs rt 0 00 0000 0000 DIV 011010 Description: (HI, LO) \u2190 GPR[rs] / GPR[rt] The 32-bit word value in GPR rs is divided by the 32-bit value in GPR rt, treating both operands as signed values. The 32-bit quotient is placed into special register LO and the 32-bit remainder isplaced into special register HI. No arithmetic exception occurs under any circumstances. divu \u00b6 P119 31:26 25:21 20:16 15:6 5:0 DIVU special 000000 rs rt 0 00 0000 0000 DIVU 011011 Description: (HI, LO) \u2190 GPR[rs] / GPR[rt] The 32-bit word value in GPR rs is divided by the 32-bit value in GPR rt, treating both operands as unsigned values. The 32-bit quotient is placed into special register LO and the 32-bit remainder is placed into special register HI. No arithmetic exception occurs under any circumstances. mfhi: Move From HI Register \u00b6 P168 31:26 25:16 15:11 10:6 5:0 MFHI special 000000 0 00 0000 0000 rd 0 00000 MFHI 010000 Description: GPR[rd] \u2190 HI The contents of special register HI are loaded into GPR rd. mflo: Move From LO Register \u00b6 P169 31:26 25:16 15:11 10:6 5:0 MFLO special 000000 0 00 0000 0000 rd 0 00000 MFLO 010010 Description: GPR[rd] \u2190 LO The contents of special register LO are loaded into GPR rd. mthi: Move to HI Register \u00b6 P187 31:26 25:21 20:6 5:0 MTHI special 000000 rs 0 000 0000 0000 0000 MTHI 010001 Description: HI \u2190 GPR[rs] The contents of GPR rs are loaded into special register HI. mtlo: Move to LO Register \u00b6 P188 31:26 25:21 20:6 5:0 MTLO special 000000 rs 0 000 0000 0000 0000 MTLO 010011 Description: LO \u2190 GPR[rs] The contents of GPR rs are loaded into special register LO. mult \u00b6 P191 31:26 25:21 20:16 15:6 5:0 MULT special 000000 rs rt 0 00 0000 0000 MULT 011000 Description: (HI, LO) \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rt is multiplied by the 32-bit value in GPR rs, treating both operands as signed values, to produce a 64-bit result. The low-order 32-bit word of the result is placed into special register LO, and the highorder 32-bit word is splaced into special register HI. No arithmetic exception occurs under any circumstances. multu \u00b6 P192 31:26 25:21 20:16 15:6 5:0 MULTU special 000000 rs rt 0 00 0000 0000 MULTU 011001 Description: (HI, LO) \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rt is multiplied by the 32-bit value in GPR rs, treating both operands as signed values, to produce a 64-bit result. The low-order 32-bit word of the result is placed into special register LO, and the highorder 32-bit word is splaced into special register HI. No arithmetic exception occurs under any circumstances. lab4 \u6307\u4ee4 \u00b6 add \u00b6 P45 31:26 25:21 20:16 15:11 10:6 5:0 ADD special 000000 rs rt rd 0 00000 ADD 100000 Description: GPR[rd] \u2190 GPR[rs] + GPR[rt] (exception occurs if overflow) If the addition results in 32-bit 2\u2019s complement arithmetic overflow, the destination register is not modified and an Integer Overflow exception occurs. addi \u00b6 P47 31:26 25:21 20:16 15:0 ADDI 001000 rs rt immediate Description: GPR[rt] \u2190 GPR[rs] + immediate(To add a constant to a 32-bit integer. If overflow occurs, then trap.) The 16-bit signed immediate is added to the 32-bit value in GPR rs to produce a 32-bit result. sub \u00b6 P242 31:26 25:21 20:16 15:11 10:6 5:0 SUB SPECIAL 000000 rs rt rd 0 00000 SUB 100010 Description: GPR[rd] \u2190 GPR[rs] \u2212 GPR[rt] The 32-bit word value in GPR rt is subtracted from the 32-bit value in GPR rs to produce a 32-bit result. If the subtraction results in 32-bit 2\u2019s complement arithmetic overflow, then the destination register is not modified and an Integer Overflow exception occurs. If it does not overflow, the 32-bit result is placed into GPR rd. eret: Exception Return \u00b6 P122 31:26 25:24 24: 6 5:0 ERET COP0 010000 CO 1 0 000 0000 0000 0000 0000 ERET 011000 Description: ERET clears execution and instruction hazards, conditionally restores $SRSCtl_{CSS}$ from $SRSCtl_{\u03a0\u03a3\u03a3}$ in a Release 2 implementation, and returns to the interrupted instruction at the completion of interrupt, exception, or error processing. ERET does not execute the next instruction (i.e., it has no delay slot). mfc0: Move from Coprocessor 0 \u00b6 P163 31:26 25:21 20:16 15:11 10:3 2:0 MFC0 COP0 010000 MF 00000 rt rd 0 00000000 sel Description: GPR[rt] \u2190 CPR[0,rd,sel] The contents of the coprocessor 0 register specified by the combination of rd and sel are loaded into general register rt. Note that not all coprocessor 0 registers support the sel field. In those instances, the sel field must be zero.reference. mtc0: Move to Coprocessor 0 \u00b6 P182 31:26 25:21 20:16 15:11 10:3 2:0 MTC0 COP0 010000 MT 00100 rt rd 0 00000000 sel Description: CPR[0, rd, sel] \u2190 GPR[rt] The contents of general register rt are loaded into the coprocessor 0 register specified by the combination of rd andsel. Not all coprocessor 0 registers support the the sel field. In those instances, the sel field must be set to zero. break \u00b6 P86 31:26 25:6 5:0 BREAK SPECIAL 000000 code BREAK 001101 Description: A breakpoint exception occurs, immediately and unconditionally transferring control to the exception handler. The code field is available for use as software parameters, but is retrieved by the exception handler only by loading the contents of the memory word containing the instruction. syscall \u00b6 P261 31:26 25:6 5:0 SYSCALL SPECIAL 000000 code SYSCALL 001100 Description: A system call exception occurs, immediately and unconditionally transferring control to the exception handler. The code field is available for use as software parameters, but is retrieved by the exception handler only by loading the contents of the memory word containing the instruction.","title":"\u6307\u4ee4\u96c6"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#labs","text":"\u53c2\u8003\u8d44\u6599\uff1a Volume II_ MIPS32 Instruction Set \u5173\u4e8e\u6307\u4ee4\u7684\u8be6\u7ec6\u5185\u5bb9\u8bf7\u67e5\u9605\u4e0a\u8ff0\u8d44\u6599 \u6307\u4ee4\u683c\u5f0f\uff1a \u5bf9\u5e94\u7684\u9875\u6570 \u6570\u636e\u8303\u56f4 \u6307\u4ee4\u540d\u79f0 \u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u6216\u7acb\u5373\u6570\u7b49\u7b49\u4fe1\u606f","title":"labs\u6307\u4ee4\u96c6"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lab1","text":"","title":"lab1 \u6307\u4ee4"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#addiu","text":"P48 31:26 25:21 20:16 15:0 ADDIU 001001 rs rt immediate Description: GPR[rt] \u2190 GPR[rs] + immediate(signed) (No exception)","title":"addiu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#addu","text":"P49 31:26 25:21 20:16 15:11 10:6 5:0 ADDU special 000000 rs rt rd 0 00000 ADDU 100001 Description: GPR[rd] \u2190 GPR[rs] + GPR[rt] (No exception)","title":"addu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#and","text":"P52 31:26 25:21 20:16 15:11 10:6 5:0 AND special 000000 rs rt rd 0 00000 AND 100100 Description: GPR[rd] \u2190 GPR[rs] AND GPR[rt]","title":"and"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#andi","text":"P53 31:26 25:21 20:16 15:0 ANDI 001100 rs rt imme Description: GPR[rt] \u2190 GPR[rs] AND immediate(zero-extended)","title":"andi"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#beq-branch-on-equal","text":"P68 31:26 25:21 20:16 15:0 BEQ 000100 rs rt offset Description: if GPR[rs] = GPR[rt] then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself)","title":"beq: Branch on Equal"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bne-branch-on-not-equal","text":"P84 31:26 25:21 20:16 15:0 BNE 000101 rs rt offset Description: if GPR[rs] \u2260 GPR[rt] then branch","title":"bne: Branch on Not Equal"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#j-jump","text":"P129 31:26 25:0 J 000010 instr_index Description: This is a PC-region branch (not PC-relative); the effective target address is in the \u201ccurrent\u201d 256 MB-aligned region. The low 28 bits of the target address is the instr_index field shifted left 2 bits. The remaining upper bits are the corresponding bits of the address of the instruction in the delay slot (not the branch itself, but they are same in most cases).","title":"j: Jump"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#jal-jump-and-link","text":"P130 31:26 25:0 JAL 000011 instr_index Description: Place the return address link in GPR 31(register). The return link is the address of the second instruction following the branch, at which location execution continues after a procedure call. This is a PC-region branch (not PC-relative); the effective target address is in the \u201ccurrent\u201d 256 MB-aligned region. The low 28 bits of the target address is the instr_index field shifted left 2bits. The remaining upper bits are the corresponding bits of the address of the instruction in the delay slot (not the branch itself).","title":"jal: Jump and Link"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#jr-jump-register","text":"P138 31:26 25:21 20:11 10:6 5:0 JR special 000000 rs 0 0000000000 hint JR 001000 Description: PC \u2190 GPR[rs]","title":"jr: Jump Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lui-load-upper-immediate","text":"P150 31:26 25:21 20:16 15:0 LUI 001111 0 00000 rt imme Description: GPR[rt] \u2190 immediate || 016 The 16-bit immediate is shifted left 16 bits and concatenated with 16 bits of low-order zeros.","title":"lui: Load Upper Immediate"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lw-load-word","text":"P152 31:26 25:21 20:16 15:0 LW 100011 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset(signed_extended)] The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"lw: Load Word"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#nor","text":"P197 31:26 25:21 20:16 15:11 10:6 5:0 NOR special 000000 rs rt rd 0 00000 NOR 100111 Description: GPR[rd] \u2190 GPR[rs] NOR GPR[rt]","title":"nor"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#or","text":"P197 31:26 25:21 20:16 15:11 10:6 5:0 OR special 000000 rs rt rd 0 00000 OR 100101 Description: GPR[rd] \u2190 GPR[rs] or GPR[rt]","title":"or"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#ori-or-immediate","text":"P199 31:26 25:21 20:16 15:0 ORI 001101 rs rt imme Description: GPR[rt] \u2190 GPR[rs] or immediate(zero_extended)","title":"ori: Or Immediate"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sll-shift-word-left-logical","text":"P230 31:26 25:21 20:16 15:11 10:6 5:0 SLL special 000000 0 00000 rt rd sa SLL 000000 Description: GPR[rd] \u2190 GPR[rt] << sa","title":"sll: Shift Word Left Logical"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#slt-set-on-less-than","text":"P232 31:26 25:21 20:16 15:11 10:6 5:0 SLT special 000000 rs rt rd 0 00000 SLT 101010 Description: GPR[rd] \u2190 (GPR[rs] < GPR[rt]) Compare the contents of GPR rs and GPR rt as signed integers.","title":"slt: Set on Less Than"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#slti-set-on-less-than-immediate","text":"P233 31:26 25:21 20:16 15:0 SLTI 001010 rs rt imme Description: GPR[rt] \u2190 (GPR[rs] < immediate) Compare the contents of GPR rs and the 16-bit signed immediate.","title":"slti: Set on Less Than Immediate"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sltiu-set-on-less-than-immediate-unsigned","text":"P234 31:26 25:21 20:16 15:0 SLTIU 001011 rs rt imme Description: GPR[rt] \u2190 (GPR[rs] < immediate) Compare the contents of GPR rs and the sign-extended 16-bit immediate as unsigned integers.","title":"sltiu: Set on Less Than Immediate Unsigned"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sltu-set-on-less-than-unsigned","text":"P235 31:26 25:21 20:16 15:11 10:6 5:0 SLTU special 000000 rs rt rd 0 00000 SLTU 101011 Description: GPR[rd] \u2190 (GPR[rs] < GPR[rt]) Compare the contents of GPR rs and GPR rt as unsigned integers.","title":"sltu: Set on Less Than Unsigned"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sra-shift-word-right-arithmetic","text":"P237 31:26 25:21 20:16 15:11 10:6 5:0 SRA special 000000 0 00000 rt rd sa SRA 000011 Description: GPR[rd] \u2190 GPR[rt] >> sa (arithmetic) The contents of the low-order 32-bit word of GPR rt are shifted right, duplicating the sign-bit (bit 31) in the emptied bits. srl: Shift Word Right Logical P239 31:26 25:22 21 20:16 15:11 10:6 5:0 SRL special 000000 0 0000 R 0 rt rd sa SRL 000010 Description: GPR[rd] \u2190 GPR[rt] >> sa (logical) The contents of the low-order 32-bit word of GPR rt are shifted right, inserting zeros into the emptied bits.","title":"sra: Shift Word Right Arithmetic"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#subu","text":"P244 31:26 25:21 20:16 15:11 10:6 5:0 SUBU special 000000 rs rt rd 0 00000 SUBU 100011 Description: GPR[rd] \u2190 GPR[rs] \u2212 GPR[rt] (Unsigened, No exceptions)","title":"subu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sw","text":"P246 31:26 25:21 20:16 15:0 SW 101011 base rt offset Description: memory[GPR[base] + offset(sign_extended)] \u2190 GPR[rt] The least-significant 32-bit word of GPR rt is stored in memory","title":"sw"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#xor","text":"P285 31:26 25:21 20:16 15:11 10:6 5:0 XOR special 000000 rs rt rd 0 00000 XOR 100110 Description: GPR[rd] \u2190 GPR[rs] XOR GPR[rt]","title":"xor"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#xori","text":"P286 31:26 25:21 20:16 15:0 XORI 001110 rs rt imme Description: GPR[rt] \u2190 GPR[rs] XOR immediate Combine the contents of GPR rs and the 16-bit zero-extended immediate.","title":"xori"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lab2","text":"bgez, bgezal, blez, bgtz, bltz, bltzal, jalr, lb, lbu, lh, lhu, sb, sh, sllv, srav, srlv,","title":"lab2 \u6307\u4ee4"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bgez-branch-on-greater-than-or-equal-to-zero","text":"P70 31:26 25:21 20:16 15:0 BGEZ REGIMM 000001 rs BGEZ 00001 offset Description: if GPR[rs] \u2265 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself),","title":"bgez: Branch on Greater Than or Equal to Zero"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bgezal-branch-on-greater-than-or-equal-to-zero-and-link","text":"P71 31:26 25:21 20:16 15:0 BGEZAL REGIMM 000001 rs BGEZAL 10001 offset Description: if GPR[rs] \u2265 0 then procedure_call Place the return address link in GPR 31. The return link is the address of the second instruction following the branch, An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself)","title":"bgezal: Branch on Greater Than or Equal to Zero and Link"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bgtz-branch-on-greater-than-zero","text":"P75 31:26 25:21 20:16 15:0 BGTZ 000111 rs 0 00000 offset Description: if GPR[rs] > 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself)","title":"bgtz: Branch on Greater Than Zero"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#blez-branch-on-less-than-or-equal-to-zero","text":"P77 31:26 25:21 20:16 15:0 BLEZ 000110 rs 0 00000 offset Description: if GPR[rs] \u2264 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself),","title":"blez: Branch on Less Than or Equal to Zero"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bltz-branch-on-less-than-zero","text":"P79 31:26 25:21 20:16 15:0 BLTZ REGIMM 000001 rs BLTZ 00000 offset Description: if GPR[rs] < 0 then branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself),","title":"bltz: Branch on Less Than Zero"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#bltzal-branch-on-less-than-zero-and-link","text":"P80 31:26 25:21 20:16 15:0 BLTZAL REGIMM 000001 rs BLTZAL 10010 offset Description: if GPR[rs] < 0 then procedure_call Place the return address link in GPR 31. The return link is the address of the second instruction following the branch An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself)","title":"bltzal: Branch on Less Than Zero and Link"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#jalr-jump-and-link-register","text":"P131 31:26 25:21 20:16 15:11 10:6 5:0 JALR special 000000 rs 0 00000 rd hint JALR 001001 Description: GPR[rd] \u2190 return_addr, PC \u2190 GPR[rs] Place the return address link in GPR rd. The return link is the address of the second instruction following the branch, where execution continues after a procedure call.","title":"jalr: Jump and Link Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lb","text":"P142 31:26 25:21 20:16 15:0 LB(load byte) 100000 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 8-bit byte at the memory location specified by the effective address are fetched, sign-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"lb"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lbu","text":"P143 31:26 25:21 20:16 15:0 LBU(load byte unsigned) 100100 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 8-bit byte at the memory location specified by the effective address are fetched, zero-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"lbu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lh","text":"P147 31:26 25:21 20:16 15:0 LH(load halfword) 100001 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 16-bit halfword at the memory location specified by the aligned effective address are fetched, sign-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"lh"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lhu","text":"P148 31:26 25:21 20:16 15:0 LHU(load halfword unsigned) 100101 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] The contents of the 16-bit halfword at the memory location specified by the aligned effective address are fetched, zero-extended, and placed in GPR rt. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"lhu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sb","text":"P220 31:26 25:21 20:16 15:0 SB(Store Byte) 101000 base rt offset Description: memory[GPR[base] + offset] \u2190 GPR[rt] The least-significant 8-bit byte of GPR rt is stored in memory at the location specified by the effective address. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"sb"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sh","text":"P229 31:26 25:21 20:16 15:0 SH(Store Halfword) 101001 base rt offset Description: memory[GPR[base] + offset] \u2190 GPR[rt] The least-significant 16-bit halfword of register rt is stored in memory at the location specified by the aligned effective address. The 16-bit signed offset is added to the contents of GPR base to form the effective address.","title":"sh"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sllv-shift-word-left-logical-variable","text":"P231 31:26 25:21 20:16 15:11 10:6 5:0 SLLV special 000000 rs rt rd 0 00000 SLLV 000100 Description: GPR[rd] \u2190 GPR[rt] << rs The contents of the low-order 32-bit word of GPR rt are shifted left, inserting zeros into the emptied bits; the result word is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs.","title":"sllv: Shift Word Left Logical Variable"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#srav-shift-word-right-arithmetic-variable","text":"P238 31:26 25:21 20:16 15:11 10:6 5:0 SRAV special 000000 rs rt rd 0 00000 SRAV 000111 Description: GPR[rd] \u2190 GPR[rt] >> GPR[rs] (the description in document is wrong, you can refer to the following \"Operation\") The contents of the low-order 32-bit word of GPR rt are shifted right, duplicating the sign-bit (bit 31) in the emptied bits; the word result is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs.","title":"srav: Shift Word Right Arithmetic Variable"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#srlv-shift-word-right-logical-variable","text":"P240 31:26 25:21 20:16 15:11 10:7 6 5:0 SRLV special 000000 rs rt rd 0000 R 0 SRLV 000110 Description: GPR[rd] \u2190 GPR[rt] >> GPR[rs] (logical) The contents of the low-order 32-bit word of GPR rt are shifted right, inserting zeros into the emptied bits; the word result is placed in GPR rd. The bit-shift amount is specified by the low-order 5 bits of GPR rs.","title":"srlv: Shift Word Right Logical Variable"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lab3","text":"test3: div, divu, mfhi, mflo, mthi, mtlo, mult, multu","title":"lab3 \u6307\u4ee4"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#div","text":"P116 31:26 25:21 20:16 15:6 5:0 DIV special 000000 rs rt 0 00 0000 0000 DIV 011010 Description: (HI, LO) \u2190 GPR[rs] / GPR[rt] The 32-bit word value in GPR rs is divided by the 32-bit value in GPR rt, treating both operands as signed values. The 32-bit quotient is placed into special register LO and the 32-bit remainder isplaced into special register HI. No arithmetic exception occurs under any circumstances.","title":"div"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#divu","text":"P119 31:26 25:21 20:16 15:6 5:0 DIVU special 000000 rs rt 0 00 0000 0000 DIVU 011011 Description: (HI, LO) \u2190 GPR[rs] / GPR[rt] The 32-bit word value in GPR rs is divided by the 32-bit value in GPR rt, treating both operands as unsigned values. The 32-bit quotient is placed into special register LO and the 32-bit remainder is placed into special register HI. No arithmetic exception occurs under any circumstances.","title":"divu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mfhi-move-from-hi-register","text":"P168 31:26 25:16 15:11 10:6 5:0 MFHI special 000000 0 00 0000 0000 rd 0 00000 MFHI 010000 Description: GPR[rd] \u2190 HI The contents of special register HI are loaded into GPR rd.","title":"mfhi: Move From HI Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mflo-move-from-lo-register","text":"P169 31:26 25:16 15:11 10:6 5:0 MFLO special 000000 0 00 0000 0000 rd 0 00000 MFLO 010010 Description: GPR[rd] \u2190 LO The contents of special register LO are loaded into GPR rd.","title":"mflo: Move From LO Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mthi-move-to-hi-register","text":"P187 31:26 25:21 20:6 5:0 MTHI special 000000 rs 0 000 0000 0000 0000 MTHI 010001 Description: HI \u2190 GPR[rs] The contents of GPR rs are loaded into special register HI.","title":"mthi: Move to HI Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mtlo-move-to-lo-register","text":"P188 31:26 25:21 20:6 5:0 MTLO special 000000 rs 0 000 0000 0000 0000 MTLO 010011 Description: LO \u2190 GPR[rs] The contents of GPR rs are loaded into special register LO.","title":"mtlo: Move to LO Register"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mult","text":"P191 31:26 25:21 20:16 15:6 5:0 MULT special 000000 rs rt 0 00 0000 0000 MULT 011000 Description: (HI, LO) \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rt is multiplied by the 32-bit value in GPR rs, treating both operands as signed values, to produce a 64-bit result. The low-order 32-bit word of the result is placed into special register LO, and the highorder 32-bit word is splaced into special register HI. No arithmetic exception occurs under any circumstances.","title":"mult"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#multu","text":"P192 31:26 25:21 20:16 15:6 5:0 MULTU special 000000 rs rt 0 00 0000 0000 MULTU 011001 Description: (HI, LO) \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rt is multiplied by the 32-bit value in GPR rs, treating both operands as signed values, to produce a 64-bit result. The low-order 32-bit word of the result is placed into special register LO, and the highorder 32-bit word is splaced into special register HI. No arithmetic exception occurs under any circumstances.","title":"multu"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#lab4","text":"","title":"lab4 \u6307\u4ee4"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#add","text":"P45 31:26 25:21 20:16 15:11 10:6 5:0 ADD special 000000 rs rt rd 0 00000 ADD 100000 Description: GPR[rd] \u2190 GPR[rs] + GPR[rt] (exception occurs if overflow) If the addition results in 32-bit 2\u2019s complement arithmetic overflow, the destination register is not modified and an Integer Overflow exception occurs.","title":"add"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#addi","text":"P47 31:26 25:21 20:16 15:0 ADDI 001000 rs rt immediate Description: GPR[rt] \u2190 GPR[rs] + immediate(To add a constant to a 32-bit integer. If overflow occurs, then trap.) The 16-bit signed immediate is added to the 32-bit value in GPR rs to produce a 32-bit result.","title":"addi"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#sub","text":"P242 31:26 25:21 20:16 15:11 10:6 5:0 SUB SPECIAL 000000 rs rt rd 0 00000 SUB 100010 Description: GPR[rd] \u2190 GPR[rs] \u2212 GPR[rt] The 32-bit word value in GPR rt is subtracted from the 32-bit value in GPR rs to produce a 32-bit result. If the subtraction results in 32-bit 2\u2019s complement arithmetic overflow, then the destination register is not modified and an Integer Overflow exception occurs. If it does not overflow, the 32-bit result is placed into GPR rd.","title":"sub"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#eret-exception-return","text":"P122 31:26 25:24 24: 6 5:0 ERET COP0 010000 CO 1 0 000 0000 0000 0000 0000 ERET 011000 Description: ERET clears execution and instruction hazards, conditionally restores $SRSCtl_{CSS}$ from $SRSCtl_{\u03a0\u03a3\u03a3}$ in a Release 2 implementation, and returns to the interrupted instruction at the completion of interrupt, exception, or error processing. ERET does not execute the next instruction (i.e., it has no delay slot).","title":"eret: Exception Return"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mfc0-move-from-coprocessor-0","text":"P163 31:26 25:21 20:16 15:11 10:3 2:0 MFC0 COP0 010000 MF 00000 rt rd 0 00000000 sel Description: GPR[rt] \u2190 CPR[0,rd,sel] The contents of the coprocessor 0 register specified by the combination of rd and sel are loaded into general register rt. Note that not all coprocessor 0 registers support the sel field. In those instances, the sel field must be zero.reference.","title":"mfc0: Move from Coprocessor 0"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#mtc0-move-to-coprocessor-0","text":"P182 31:26 25:21 20:16 15:11 10:3 2:0 MTC0 COP0 010000 MT 00100 rt rd 0 00000000 sel Description: CPR[0, rd, sel] \u2190 GPR[rt] The contents of general register rt are loaded into the coprocessor 0 register specified by the combination of rd andsel. Not all coprocessor 0 registers support the the sel field. In those instances, the sel field must be set to zero.","title":"mtc0: Move to Coprocessor 0"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#break","text":"P86 31:26 25:6 5:0 BREAK SPECIAL 000000 code BREAK 001101 Description: A breakpoint exception occurs, immediately and unconditionally transferring control to the exception handler. The code field is available for use as software parameters, but is retrieved by the exception handler only by loading the contents of the memory word containing the instruction.","title":"break"},{"location":"competition/materials/%E6%8C%87%E4%BB%A4%E9%9B%86/#syscall","text":"P261 31:26 25:6 5:0 SYSCALL SPECIAL 000000 code SYSCALL 001100 Description: A system call exception occurs, immediately and unconditionally transferring control to the exception handler. The code field is available for use as software parameters, but is retrieved by the exception handler only by loading the contents of the memory word containing the instruction.","title":"syscall"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/","text":"\u989d\u5916\u6307\u4ee4 \u00b6 \u53c2\u8003\u8d44\u6599\uff1a Volume II_ MIPS32 Instruction Set \u7b97\u672f\u6307\u4ee4\uff1a \u00b6 clz : Count Leading Zeros in Word \u00b6 P102 31:26 25:21 20:16 15:11 10:6 5:0 clz SPECIAL2 011100 rs rt rd 0 00000 CLZ 100000 Bits 31..0 of GPR rs are scanned from most significant to least significant bit. The number of leading zeros is counted and the result is written to GPR rd.(detailed operation please refer to the document.) clo : Count Leading Ones in Word \u00b6 P101 31:26 25:21 20:16 15:11 10:6 5:0 clo SPECIAL2 011100 rs rt rd 0 00000 CLZ 100001 Bits 31..0 of GPR rs are scanned from most significant to least significant bit. The number of leading ones is counted and the result is written to GPR rd.(detailed operation please refer to the document.) \u4e58\u6cd5\u76f8\u5173\u6307\u4ee4 \u00b6 mul : Multiply Word to GPR \u00b6 P189 31:26 25:21 20:16 15:11 10:6 5:0 mul SPECIAL2 011100 rs rt rd 0 00000 MUL 000010 Description: GPR[rd] \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as signed values, to produce a 64-bit result. The least significant 32 bits of the product are written to GPR rd. The contents of HI and LO are UNPREDICTABLE after the operation. No arithmetic exception occurs under any circumstances. madd : Multiply and Add Word to Hi,Lo \u00b6 P160 31:26 25:21 20:16 15:11 10:6 5:0 madd SPECIAL2 011100 rs rt 0 00000 0 00000 MADD 000000 Description: (HI,LO) \u2190 (HI,LO) + (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit word value in GPR rt, treating both operands as signed values, to produce a 64-bit result. The product is added to the 64-bit concatenated values of HI and LO. The most significant 32 bits of the result are written into HI and the least signficant 32 bits are written into LO. No arithmetic exception occurs under any circumstances. maddu : Multiply and Add Unsigned Word to Hi,Lo \u00b6 P162 31:26 25:21 20:16 15:11 10:6 5:0 maddu SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000001 Description: (HI,LO) \u2190 (HI,LO) + (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit word value in GPR rt, treating both operands as unsigned values, to produce a 64-bit result. msub : Multiply and Subtract Word to Hi,Lo \u00b6 P179 31:26 25:21 20:16 15:11 10:6 5:0 msub SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000100 Description: (HI,LO) \u2190 (HI,LO) - (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as signed values, to produce a 64-bit result. msubu : Multiply and Subtract Word to Hi,Lo \u00b6 P181 31:26 25:21 20:16 15:11 10:6 5:0 msub SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000101 Description: (HI,LO) \u2190 (HI,LO) - (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as usigned values, to produce a 64-bit result. \u975e\u5bf9\u9f50\u8bbf\u5b58\u6307\u4ee4 \u00b6 lwl : Load Word Left \u00b6 P155 31:26 25:21 20:16 15:0 lwl 100010 base rt offset To load the most-significant part of a word as a signed value from an unaligned memory address Description: GPR[rt] \u2190 GPR[rt] MERGE memory[GPR[base] + offset] The 16-bit signed offset is added to the contents of GPR base to form an effective address (EffAddr). EffAddr is the address of the most-significant of 4 consecutive bytes forming a word (W) in memory starting at an arbitrary byte boundary. (detailed operation please refer to the document.) lwr : load Word Right \u00b6 P157 31:26 25:21 20:16 15:0 lwl 100110 base rt offset To load the least-significant part of a word from an unaligned memory address as a signed value. Description: GPR[rt] \u2190 GPR[rt] MERGE memory[GPR[base] + offset] swl : Store Word Left \u00b6 P249 31:26 25:21 20:16 15:0 lwl 101010 base rt offset To store the most-significant part of a word to an unaligned memory address Description: memory[GPR[base] + offset] \u2190 GPR[rt] swr : Store Word Right \u00b6 P251 31:26 25:21 20:16 15:0 lwr 101110 base rt offset To store the least-significant part of a word to an unaligned memory address Description: memory[GPR[base] + offset] \u2190 GPR[rt] \u6761\u4ef6\u6267\u884c\u6307\u4ee4 \u00b6 movn : Move Conditional on Not Zero \u00b6 P173 31:26 25:21 20:16 15:11 10:6 5:0 movn SPECIAL 000000 rs rt rd 0 00000 MOVN 001011 Description: if GPR[rt] \u2260 0 then GPR[rd] \u2190 GPR[rs] If the value in GPR rt is not equal to zero, then the contents of GPR rs are placed into GPR rd. movz : Move Conditional on Zero \u00b6 P177 31:26 25:21 20:16 15:11 10:6 5:0 movz SPECIAL 000000 rs rt rd 0 00000 MOVN 001010 Description: if GPR[rt] = 0 then GPR[rd] \u2190 GPR[rs] If the value in GPR rt is equal to zero, then the contents of GPR rs are placed into GPR rd. TLB \u7c7b\u578b\u6307\u4ee4 \u00b6 tlbp : Probe TLB for Matching Entry \u00b6 P268 31:26 25 24:6 5:0 tlbp COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBP 001000 Purpose: Probe TLB for Matching Entry. To find a matching entry in the TLB. Description: The Index register is loaded with the address of the TLB entry whose contents match the contents of the EntryHi register. If no TLB entry matches, the high-order bit of the Index register is set. tlbr : Read Indexed TLB Entry \u00b6 P269 31:26 25 24:6 5:0 tlbr COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBR 000001 Purpose: Read Indexed TLB Entry. To read an entry from the TLB. Description: The EntryHi, EntryLo0, EntryLo1, and PageMask registers are loaded with the contents of the TLB entry pointed to by the Index register. tlbwi : Write Indexed TLB Entry \u00b6 P271 31:26 25 24:6 5:0 tlbwi COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBWI 000010 Purpose: Write Indexed TLB Entry. To write a TLB entry indexed by the Index register Description: The TLB entry pointed to by the Index register is written from the contents of the EntryHi, EntryLo0, EntryLo1, and PageMask registers. It is implementation dependent whether multiple TLB matches are detected on a TLBWI tlbwr (\u53ef\u4e0d\u5b9e\u73b0): Write Random TLB Entry \u00b6 P273 31:26 25 24:6 5:0 tlbwi COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBWI 000110 Purpose: Write Random TLB Entry. To write a TLB entry indexed by the Random register. The TLB entry pointed to by the Random register is written from the contents of the EntryHi, EntryLo0, EntryLo1, and PageMask registers. It is implementation dependent whether multiple TLB matches are detected on a TLBWR. Trap \u7c7b\u578b\u6307\u4ee4 \u00b6 teq : Trap if Equal \u00b6 P262 31:26 25:21 20:16 15:6 5:0 teq SPECIAL 000000 rs rt code TEQ 110100 Description: if GPR[rs] = GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is equal to GPR rt, then take a Trap exception. teqi : Trap if Equal Immediate \u00b6 P263 31:26 25:21 20:16 15:0 teqi REGIMM 000001 rs TEQI 01100 immediate Description: if GPR[rs] = immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is equal to immediate, then take a Trap exception. tge : Trap if Greater or Equal \u00b6 P264 31:26 25:21 20:16 15:6 5:0 tge SPECIAL 000000 rs rt code TGE 110000 Description: if GPR[rs] \u2265 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is equal to GPR rt, then take a Trap exception. tgei : Trap if Greater or Equal Immediate \u00b6 P265 31:26 25:21 20:16 15:0 tgei REGIMM 000001 rs TGEIU 01000 immediate Description: if GPR[rs] \u2265 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is equal to immediate, then take a Trap exception. tgeiu : Trap if Greater or Equal Immediate Unsigned \u00b6 P266 31:26 25:21 20:16 15:0 tgeiu REGIMM 000001 rs TGEIU 01001 immediate Description: if GPR[rs] \u2265 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as unsigned integers; if GPR rs is equal to immediate, then take a Trap exception. tgeu : Trap if Greater or Equal Unsigned \u00b6 P267 31:26 25:21 20:16 15:6 5:0 tgeu SPECIAL 000000 rs rt code TGEU 110001 Description: if GPR[rs] \u2265 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as unsigned integers; if GPR rs is greater than or equal to GPR rt, then take a Trap exception. tlt : Trap if Less Than \u00b6 P274 31:26 25:21 20:16 15:6 5:0 tlt SPECIAL 000000 rs rt code TLT 110010 Description: if GPR[rs] < GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is less than GPR rt, then take a Trap exception. tlti : Trap if Less Than Immediate \u00b6 P275 31:26 25:21 20:16 15:0 tlti REGIMM 000001 rs TLTI 01010 immediate Description: if GPR[rs] < immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is less than immediate, then take a Trap exception. tltiu : Trap if Less Than Immediate Unsigned \u00b6 P275 31:26 25:21 20:16 15:0 tltiu REGIMM 000001 rs TLTIU 01011 immediate Description: if GPR[rs] < immediate then Trap Compare the contents of GPR rs and the 16-bit sign-extended immediate as unsigned integers; if GPR rs is less than immediate, then take a Trap exception. tltu : Trap if Less Than Unsigned \u00b6 P277 31:26 25:21 20:16 15:6 5:0 tltu SPECIAL 000000 rs rt code TLTU 110011 Description: if GPR[rs] < GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as unsigned integers; if GPR rs is less than GPR rt, then take a Trap exception. tne : Trap if Not Equal \u00b6 P278 31:26 25:21 20:16 15:6 5:0 tne SPECIAL 000000 rs rt code TNE 110110 Description: if GPR[rs] \u2260 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is not equal to GPR rt, then take a Trap exception. tnei : Trap if Not Equal Immediate \u00b6 P279 31:26 25:21 20:16 15:0 tnei REGIMM 000001 rs TNEI 01110 immediate Description: if GPR[rs] \u2260 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is not equal to immediate, then take a Trap exception. \u7f13\u5b58\u76f8\u5173\u6307\u4ee4 \u00b6 cache : Perform Cache Operation \u00b6 P91 31:26 25:21 20:16 15:0 cache 101111 base op offset Description: The 16-bit offset is sign-extended and added to the contents of the base register to form an effective address. The effective address is used in one of the following ways based on the operation to be performed and the type of cache as described in the following table.(refer to the document for details) pref (\u53ef\u5b9e\u73b0\u4e3a nop ): Prefetch \u00b6 P205 31:26 25:21 20:16 15:0 pref 110011 base hint offset Description: prefetch_memory(GPR[base] + offset) PREF adds the 16-bit signed offset to the contents of GPR base to form an effective byte address. The hint field supplies information about the way that the data is expected to be used.(refer to the document for details) \u591a\u6838\u540c\u6b65\u6307\u4ee4 \u00b6 ll (\u53ef\u5b9e\u73b0\u4e3a lw ): Load Linked Word \u00b6 P149 31:26 25:21 20:16 15:0 ll 110000 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset] sc (\u53ef\u5b9e\u73b0\u4e3a sw ): Store Conditional Word \u00b6 P149 31:26 25:21 20:16 15:0 sc 111000 base rt offset Description: if atomic_update then memory[GPR[base] + offset] \u2190 GPR[rt], GPR[rt] \u2190 1 else GPR[rt] \u2190 0 sync (\u53ef\u5b9e\u73b0\u4e3a nop ) \u00b6 P254 31:26 25:11 10:6 5:0 sync SPECIAL 000000 0 00 0000 0000 0000 0 stype SYNC 001111 Branch likely \u6307\u4ee4 \u00b6 \u8fd9\u90e8\u5206\u6307\u4ee4\u53ef\u901a\u8fc7\u4fee\u6539\u8f6f\u4ef6\u4ee3\u7801\u7684\u65b9\u5f0f\u53bb\u9664 beql : Branch on Equal Likely \u00b6 P269 31:26 25:21 20:16 15:0 beql 010100 rs rt offset Description: if GPR[rs] = GPR[rt] then branch_likely An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself), in the branch delay slot, to form a PC-relative effective target address. If the contents of GPR rs and GPR rt are equal, branch to the target address after the instruction in the delay slot is executed. If the branch is not taken, the instruction in the delay slot is not executed. bgezall : Branch on Greater Than or Equal to Zero and Link Likely \u00b6 P72 31:26 25:21 20:16 15:0 bgezall REGIMM 000001 rs BGEZALL 10011 offset Purpose: Branch on Greater Than or Equal to Zero and Link Likely To test a GPR then do a PC-relative conditional procedure call; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2265 0 then procedure_call_likely bgezl : Branch on Greater Than or Equal to Zero Likely \u00b6 P74 31:26 25:21 20:16 15:0 bgezl REGIMM 000001 rs BGEZL 00011 offset Purpose: Branch on Greater Than or Equal to Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2265 0 then branch_likely bgtzl : Branch on Greater Than Zero Likely P76 31:26 25:21 20:16 15:0 bgtzl 010111 rs 0 00000 offset Purpose: Branch on Greater Than Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] > 0 then branch_likely blezl : Branch on Less Than or Equal to Zero Likely \u00b6 P78 31:26 25:21 20:16 15:0 blezl 010110 rs 0 00000 offset Purpose: Branch on Less Than or Equal to Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2264 0 then branch_likely bltzall : Branch on Less Than Zero and Link Likely \u00b6 P81 31:26 25:21 20:16 15:0 bltzall REGIMM 000001 rs BLTZALL 10010 offset Purpose: Branch on Less Than Zero and Link Likely To test a GPR then do a PC-relative conditional procedure call; execute the delay slot only if the branch is taken. Description: if GPR[rs] < 0 then procedure_call_likely btlzl : Branch on Less Than Zero Likely \u00b6 P83 31:26 25:21 20:16 15:0 bltzl REGIMM 000001 rs BLTZL 00010 offset Purpose: Branch on Less Than Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] < 0 then branch_likely bnel : Branch on Not Equal Likely \u00b6 P85 31:26 25:21 20:16 15:0 bnel 010101 rs rt offset Purpose: Branch on Not Equal Likely To compare GPRs then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2260 GPR[rt] then branch_likely \u7b49\u5f85\u4e2d\u65ad\u6307\u4ee4 \u00b6 wait \u00b6 (\u53ef\u5b9e\u73b0\u4e3a\u963b\u585e\u6240\u6709\u6d41\u6c34\u7ebf\uff0c\u53ea\u6709\u4e2d\u65ad\u4f7f\u80fd\u4e3a\u9ad8\u65f6\uff0c\u624d\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f) P282 31:26 25 24:6 5:0 wait COP0 010000 CO 1 Implementation-dependent code WAIT 100000 Purpose: Enter Standby Mode Wait for Event The WAIT instruction is typically implemented by stalling the pipeline at the completion of the instruction and entering a lower power mode.","title":"\u652f\u6301\u64cd\u4f5c\u7cfb\u7edf\u7684\u989d\u5916\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_1","text":"\u53c2\u8003\u8d44\u6599\uff1a Volume II_ MIPS32 Instruction Set","title":"\u989d\u5916\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_2","text":"","title":"\u7b97\u672f\u6307\u4ee4\uff1a"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#clz-count-leading-zeros-in-word","text":"P102 31:26 25:21 20:16 15:11 10:6 5:0 clz SPECIAL2 011100 rs rt rd 0 00000 CLZ 100000 Bits 31..0 of GPR rs are scanned from most significant to least significant bit. The number of leading zeros is counted and the result is written to GPR rd.(detailed operation please refer to the document.)","title":"clz: Count Leading Zeros in Word"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#clo-count-leading-ones-in-word","text":"P101 31:26 25:21 20:16 15:11 10:6 5:0 clo SPECIAL2 011100 rs rt rd 0 00000 CLZ 100001 Bits 31..0 of GPR rs are scanned from most significant to least significant bit. The number of leading ones is counted and the result is written to GPR rd.(detailed operation please refer to the document.)","title":"clo: Count Leading Ones in Word"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_3","text":"","title":"\u4e58\u6cd5\u76f8\u5173\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#mul-multiply-word-to-gpr","text":"P189 31:26 25:21 20:16 15:11 10:6 5:0 mul SPECIAL2 011100 rs rt rd 0 00000 MUL 000010 Description: GPR[rd] \u2190 GPR[rs] \u00d7 GPR[rt] The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as signed values, to produce a 64-bit result. The least significant 32 bits of the product are written to GPR rd. The contents of HI and LO are UNPREDICTABLE after the operation. No arithmetic exception occurs under any circumstances.","title":"mul: Multiply Word to GPR"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#madd-multiply-and-add-word-to-hilo","text":"P160 31:26 25:21 20:16 15:11 10:6 5:0 madd SPECIAL2 011100 rs rt 0 00000 0 00000 MADD 000000 Description: (HI,LO) \u2190 (HI,LO) + (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit word value in GPR rt, treating both operands as signed values, to produce a 64-bit result. The product is added to the 64-bit concatenated values of HI and LO. The most significant 32 bits of the result are written into HI and the least signficant 32 bits are written into LO. No arithmetic exception occurs under any circumstances.","title":"madd: Multiply and Add Word to Hi,Lo"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#maddu-multiply-and-add-unsigned-word-to-hilo","text":"P162 31:26 25:21 20:16 15:11 10:6 5:0 maddu SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000001 Description: (HI,LO) \u2190 (HI,LO) + (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit word value in GPR rt, treating both operands as unsigned values, to produce a 64-bit result.","title":"maddu: Multiply and Add Unsigned Word to Hi,Lo"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#msub-multiply-and-subtract-word-to-hilo","text":"P179 31:26 25:21 20:16 15:11 10:6 5:0 msub SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000100 Description: (HI,LO) \u2190 (HI,LO) - (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as signed values, to produce a 64-bit result.","title":"msub: Multiply and Subtract Word to Hi,Lo"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#msubu-multiply-and-subtract-word-to-hilo","text":"P181 31:26 25:21 20:16 15:11 10:6 5:0 msub SPECIAL2 011100 rs rt 0 00000 0 00000 MADDU 000101 Description: (HI,LO) \u2190 (HI,LO) - (GPR[rs] \u00d7 GPR[rt]) The 32-bit word value in GPR rs is multiplied by the 32-bit value in GPR rt, treating both operands as usigned values, to produce a 64-bit result.","title":"msubu: Multiply and Subtract Word to Hi,Lo"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_4","text":"","title":"\u975e\u5bf9\u9f50\u8bbf\u5b58\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#lwl-load-word-left","text":"P155 31:26 25:21 20:16 15:0 lwl 100010 base rt offset To load the most-significant part of a word as a signed value from an unaligned memory address Description: GPR[rt] \u2190 GPR[rt] MERGE memory[GPR[base] + offset] The 16-bit signed offset is added to the contents of GPR base to form an effective address (EffAddr). EffAddr is the address of the most-significant of 4 consecutive bytes forming a word (W) in memory starting at an arbitrary byte boundary. (detailed operation please refer to the document.)","title":"lwl: Load Word Left"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#lwr-load-word-right","text":"P157 31:26 25:21 20:16 15:0 lwl 100110 base rt offset To load the least-significant part of a word from an unaligned memory address as a signed value. Description: GPR[rt] \u2190 GPR[rt] MERGE memory[GPR[base] + offset]","title":"lwr: load Word Right"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#swl-store-word-left","text":"P249 31:26 25:21 20:16 15:0 lwl 101010 base rt offset To store the most-significant part of a word to an unaligned memory address Description: memory[GPR[base] + offset] \u2190 GPR[rt]","title":"swl:  Store Word Left"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#swr-store-word-right","text":"P251 31:26 25:21 20:16 15:0 lwr 101110 base rt offset To store the least-significant part of a word to an unaligned memory address Description: memory[GPR[base] + offset] \u2190 GPR[rt]","title":"swr: Store Word Right"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_5","text":"","title":"\u6761\u4ef6\u6267\u884c\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#movn-move-conditional-on-not-zero","text":"P173 31:26 25:21 20:16 15:11 10:6 5:0 movn SPECIAL 000000 rs rt rd 0 00000 MOVN 001011 Description: if GPR[rt] \u2260 0 then GPR[rd] \u2190 GPR[rs] If the value in GPR rt is not equal to zero, then the contents of GPR rs are placed into GPR rd.","title":"movn: Move Conditional on Not Zero"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#movz-move-conditional-on-zero","text":"P177 31:26 25:21 20:16 15:11 10:6 5:0 movz SPECIAL 000000 rs rt rd 0 00000 MOVN 001010 Description: if GPR[rt] = 0 then GPR[rd] \u2190 GPR[rs] If the value in GPR rt is equal to zero, then the contents of GPR rs are placed into GPR rd.","title":"movz: Move Conditional on Zero"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlb","text":"","title":"TLB \u7c7b\u578b\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlbp-probe-tlb-for-matching-entry","text":"P268 31:26 25 24:6 5:0 tlbp COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBP 001000 Purpose: Probe TLB for Matching Entry. To find a matching entry in the TLB. Description: The Index register is loaded with the address of the TLB entry whose contents match the contents of the EntryHi register. If no TLB entry matches, the high-order bit of the Index register is set.","title":"tlbp: Probe TLB for Matching Entry"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlbr-read-indexed-tlb-entry","text":"P269 31:26 25 24:6 5:0 tlbr COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBR 000001 Purpose: Read Indexed TLB Entry. To read an entry from the TLB. Description: The EntryHi, EntryLo0, EntryLo1, and PageMask registers are loaded with the contents of the TLB entry pointed to by the Index register.","title":"tlbr: Read Indexed TLB Entry"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlbwi-write-indexed-tlb-entry","text":"P271 31:26 25 24:6 5:0 tlbwi COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBWI 000010 Purpose: Write Indexed TLB Entry. To write a TLB entry indexed by the Index register Description: The TLB entry pointed to by the Index register is written from the contents of the EntryHi, EntryLo0, EntryLo1, and PageMask registers. It is implementation dependent whether multiple TLB matches are detected on a TLBWI","title":"tlbwi: Write Indexed TLB Entry"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlbwr-write-random-tlb-entry","text":"P273 31:26 25 24:6 5:0 tlbwi COP0 010000 CO 1 0 000 0000 0000 0000 0000 TLBWI 000110 Purpose: Write Random TLB Entry. To write a TLB entry indexed by the Random register. The TLB entry pointed to by the Random register is written from the contents of the EntryHi, EntryLo0, EntryLo1, and PageMask registers. It is implementation dependent whether multiple TLB matches are detected on a TLBWR.","title":"tlbwr(\u53ef\u4e0d\u5b9e\u73b0): Write Random TLB Entry"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#trap","text":"","title":"Trap \u7c7b\u578b\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#teq-trap-if-equal","text":"P262 31:26 25:21 20:16 15:6 5:0 teq SPECIAL 000000 rs rt code TEQ 110100 Description: if GPR[rs] = GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is equal to GPR rt, then take a Trap exception.","title":"teq: Trap if Equal"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#teqi-trap-if-equal-immediate","text":"P263 31:26 25:21 20:16 15:0 teqi REGIMM 000001 rs TEQI 01100 immediate Description: if GPR[rs] = immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is equal to immediate, then take a Trap exception.","title":"teqi: Trap if Equal Immediate"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tge-trap-if-greater-or-equal","text":"P264 31:26 25:21 20:16 15:6 5:0 tge SPECIAL 000000 rs rt code TGE 110000 Description: if GPR[rs] \u2265 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is equal to GPR rt, then take a Trap exception.","title":"tge: Trap if Greater or Equal"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tgei-trap-if-greater-or-equal-immediate","text":"P265 31:26 25:21 20:16 15:0 tgei REGIMM 000001 rs TGEIU 01000 immediate Description: if GPR[rs] \u2265 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is equal to immediate, then take a Trap exception.","title":"tgei: Trap if Greater or Equal Immediate"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tgeiu-trap-if-greater-or-equal-immediate-unsigned","text":"P266 31:26 25:21 20:16 15:0 tgeiu REGIMM 000001 rs TGEIU 01001 immediate Description: if GPR[rs] \u2265 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as unsigned integers; if GPR rs is equal to immediate, then take a Trap exception.","title":"tgeiu: Trap if Greater or Equal Immediate Unsigned"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tgeu-trap-if-greater-or-equal-unsigned","text":"P267 31:26 25:21 20:16 15:6 5:0 tgeu SPECIAL 000000 rs rt code TGEU 110001 Description: if GPR[rs] \u2265 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as unsigned integers; if GPR rs is greater than or equal to GPR rt, then take a Trap exception.","title":"tgeu: Trap if Greater or Equal Unsigned"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlt-trap-if-less-than","text":"P274 31:26 25:21 20:16 15:6 5:0 tlt SPECIAL 000000 rs rt code TLT 110010 Description: if GPR[rs] < GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is less than GPR rt, then take a Trap exception.","title":"tlt: Trap if Less Than"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tlti-trap-if-less-than-immediate","text":"P275 31:26 25:21 20:16 15:0 tlti REGIMM 000001 rs TLTI 01010 immediate Description: if GPR[rs] < immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is less than immediate, then take a Trap exception.","title":"tlti: Trap if Less Than Immediate"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tltiu-trap-if-less-than-immediate-unsigned","text":"P275 31:26 25:21 20:16 15:0 tltiu REGIMM 000001 rs TLTIU 01011 immediate Description: if GPR[rs] < immediate then Trap Compare the contents of GPR rs and the 16-bit sign-extended immediate as unsigned integers; if GPR rs is less than immediate, then take a Trap exception.","title":"tltiu: Trap if Less Than Immediate Unsigned"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tltu-trap-if-less-than-unsigned","text":"P277 31:26 25:21 20:16 15:6 5:0 tltu SPECIAL 000000 rs rt code TLTU 110011 Description: if GPR[rs] < GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as unsigned integers; if GPR rs is less than GPR rt, then take a Trap exception.","title":"tltu: Trap if Less Than Unsigned"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tne-trap-if-not-equal","text":"P278 31:26 25:21 20:16 15:6 5:0 tne SPECIAL 000000 rs rt code TNE 110110 Description: if GPR[rs] \u2260 GPR[rt] then Trap Compare the contents of GPR rs and GPR rt as signed integers; if GPR rs is not equal to GPR rt, then take a Trap exception.","title":"tne: Trap if Not Equal"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#tnei-trap-if-not-equal-immediate","text":"P279 31:26 25:21 20:16 15:0 tnei REGIMM 000001 rs TNEI 01110 immediate Description: if GPR[rs] \u2260 immediate then Trap Compare the contents of GPR rs and the 16-bit signed immediate as signed integers; if GPR rs is not equal to immediate, then take a Trap exception.","title":"tnei: Trap if Not Equal Immediate"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_6","text":"","title":"\u7f13\u5b58\u76f8\u5173\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#cache-perform-cache-operation","text":"P91 31:26 25:21 20:16 15:0 cache 101111 base op offset Description: The 16-bit offset is sign-extended and added to the contents of the base register to form an effective address. The effective address is used in one of the following ways based on the operation to be performed and the type of cache as described in the following table.(refer to the document for details)","title":"cache: Perform Cache Operation"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#prefnop-prefetch","text":"P205 31:26 25:21 20:16 15:0 pref 110011 base hint offset Description: prefetch_memory(GPR[base] + offset) PREF adds the 16-bit signed offset to the contents of GPR base to form an effective byte address. The hint field supplies information about the way that the data is expected to be used.(refer to the document for details)","title":"pref(\u53ef\u5b9e\u73b0\u4e3anop): Prefetch"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_7","text":"","title":"\u591a\u6838\u540c\u6b65\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#lllw-load-linked-word","text":"P149 31:26 25:21 20:16 15:0 ll 110000 base rt offset Description: GPR[rt] \u2190 memory[GPR[base] + offset]","title":"ll(\u53ef\u5b9e\u73b0\u4e3alw): Load Linked Word"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#scsw-store-conditional-word","text":"P149 31:26 25:21 20:16 15:0 sc 111000 base rt offset Description: if atomic_update then memory[GPR[base] + offset] \u2190 GPR[rt], GPR[rt] \u2190 1 else GPR[rt] \u2190 0","title":"sc(\u53ef\u5b9e\u73b0\u4e3asw): Store Conditional Word"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#syncnop","text":"P254 31:26 25:11 10:6 5:0 sync SPECIAL 000000 0 00 0000 0000 0000 0 stype SYNC 001111","title":"sync(\u53ef\u5b9e\u73b0\u4e3anop)"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#branch-likely","text":"\u8fd9\u90e8\u5206\u6307\u4ee4\u53ef\u901a\u8fc7\u4fee\u6539\u8f6f\u4ef6\u4ee3\u7801\u7684\u65b9\u5f0f\u53bb\u9664","title":"Branch likely \u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#beql-branch-on-equal-likely","text":"P269 31:26 25:21 20:16 15:0 beql 010100 rs rt offset Description: if GPR[rs] = GPR[rt] then branch_likely An 18-bit signed offset (the 16-bit offset field shifted left 2 bits) is added to the address of the instruction following the branch (not the branch itself), in the branch delay slot, to form a PC-relative effective target address. If the contents of GPR rs and GPR rt are equal, branch to the target address after the instruction in the delay slot is executed. If the branch is not taken, the instruction in the delay slot is not executed.","title":"beql: Branch on Equal Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#bgezall-branch-on-greater-than-or-equal-to-zero-and-link-likely","text":"P72 31:26 25:21 20:16 15:0 bgezall REGIMM 000001 rs BGEZALL 10011 offset Purpose: Branch on Greater Than or Equal to Zero and Link Likely To test a GPR then do a PC-relative conditional procedure call; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2265 0 then procedure_call_likely","title":"bgezall: Branch on Greater Than or Equal to Zero and Link Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#bgezl-branch-on-greater-than-or-equal-to-zero-likely","text":"P74 31:26 25:21 20:16 15:0 bgezl REGIMM 000001 rs BGEZL 00011 offset Purpose: Branch on Greater Than or Equal to Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2265 0 then branch_likely bgtzl : Branch on Greater Than Zero Likely P76 31:26 25:21 20:16 15:0 bgtzl 010111 rs 0 00000 offset Purpose: Branch on Greater Than Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] > 0 then branch_likely","title":"bgezl: Branch on Greater Than or Equal to Zero Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#blezl-branch-on-less-than-or-equal-to-zero-likely","text":"P78 31:26 25:21 20:16 15:0 blezl 010110 rs 0 00000 offset Purpose: Branch on Less Than or Equal to Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2264 0 then branch_likely","title":"blezl: Branch on Less Than or Equal to Zero Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#bltzall-branch-on-less-than-zero-and-link-likely","text":"P81 31:26 25:21 20:16 15:0 bltzall REGIMM 000001 rs BLTZALL 10010 offset Purpose: Branch on Less Than Zero and Link Likely To test a GPR then do a PC-relative conditional procedure call; execute the delay slot only if the branch is taken. Description: if GPR[rs] < 0 then procedure_call_likely","title":"bltzall: Branch on Less Than Zero and Link Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#btlzl-branch-on-less-than-zero-likely","text":"P83 31:26 25:21 20:16 15:0 bltzl REGIMM 000001 rs BLTZL 00010 offset Purpose: Branch on Less Than Zero Likely To test a GPR then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] < 0 then branch_likely","title":"btlzl: Branch on Less Than Zero Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#bnel-branch-on-not-equal-likely","text":"P85 31:26 25:21 20:16 15:0 bnel 010101 rs rt offset Purpose: Branch on Not Equal Likely To compare GPRs then do a PC-relative conditional branch; execute the delay slot only if the branch is taken. Description: if GPR[rs] \u2260 GPR[rt] then branch_likely","title":"bnel: Branch on Not Equal Likely"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#_8","text":"","title":"\u7b49\u5f85\u4e2d\u65ad\u6307\u4ee4"},{"location":"competition/materials/%E6%94%AF%E6%8C%81%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%A2%9D%E5%A4%96%E6%8C%87%E4%BB%A4/#wait","text":"(\u53ef\u5b9e\u73b0\u4e3a\u963b\u585e\u6240\u6709\u6d41\u6c34\u7ebf\uff0c\u53ea\u6709\u4e2d\u65ad\u4f7f\u80fd\u4e3a\u9ad8\u65f6\uff0c\u624d\u8df3\u8f6c\u5230\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f) P282 31:26 25 24:6 5:0 wait COP0 010000 CO 1 Implementation-dependent code WAIT 100000 Purpose: Enter Standby Mode Wait for Event The WAIT instruction is typically implemented by stalling the pipeline at the completion of the instruction and entering a lower power mode.","title":"wait"}]}